<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
         xml:base="../" xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Federation</title>
  
    <section id="federation_overview">
      <title>Overview</title>
      
      <para>
        In this chapter, we look at PicketLink <code>single sign on (SSO)</code> and <code>trust</code> features. We describe
        <code>SAML</code> SSO in detail.
      </para>
    </section>
    
    <section>
      <title>SAML SSO</title>
      
      <para>
        SAML is an <code>OASIS Standards Consortium</code> standard for single sign on. PicketLink suppors 
        <code>SAML v2.0</code> and <code>SAML v1.1</code>.
      </para>
      <para>
        PicketLink contains support for the following profiles of SAML specification.
      </para>
      <itemizedlist>
        <listitem>
          <para>
            SAML Web Browser SSO Profile.
          </para>
        </listitem>
        <listitem>
          <para>
            SAML Global Logout Profile.
          </para>
        </listitem>
      </itemizedlist> 
      
    </section>
  
    <section>
      <title>SAML Web Browser Profile</title>
      <para>
        PicketLink supports the following standard bindings:
      </para>
      <itemizedlist>
        <listitem>
          <para>SAML HTTP Redirect Binding</para>
        </listitem>
        <listitem>
          <para>SAML HTTP POST Binding</para>
        </listitem>
      </itemizedlist>
      
    </section>
  
   <section id="sid-23986211_FederationProtocols-PicketLinkSAMLSpecificationSupport">
        
        <title>PicketLink SAML Specification Support</title>
        <para>PicketLink aims to provide support for both SAML v1.1 and v2.0 specifications. The emphasis is on SAMLv2.0 as v1.1 is deprecated.</para>
      </section>
      <section id="sid-6815854">
        
        <title>SAML v2.0</title>
        
        <section id="sid-6815854_SAMLv2.0-WhichProfilesaresupported%3F">
          
          <title>Which Profiles are supported ?</title>
          <itemizedlist>
            <listitem>
              <para>SAML2 Web Browser Profile</para>
            </listitem>
            <listitem>
              <para>SAML2 Metadata Profile</para>
            </listitem>
            <listitem>
              <para>SAML2 Logout Profile</para>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sid-6815854_SAMLv2.0-WhichBindingsaresupported%3F">
          
          <title>Which Bindings are supported ?</title>
          <para>The SAML v2 specification defines the concept of SAML protocol bindings (or just bindings). These bindings defines how SAML request-response messages are exchanged onto standard messaging or communication protocols. Currently, PicketLink support the following bindings:</para>
          <itemizedlist>
            <listitem>
              <para>SAML HTTP Redirect Binding</para>
            </listitem>
            <listitem>
              <para>SAML HTTP POST Binding</para>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sid-23986214">
          
          <title>PicketLink Identity Provider (PIDP)</title>
          
          <section id="sid-23986214_PicketLinkIdentityProvider%28PIDP%29-Introduction">
            
            <title>Introduction</title>
            <para>The Identity Provider is the authoritative entity responsible for authenticating an end user and asserting an identity for that user in a trusted fashion to trusted partners.</para>
            <tip>
              <para>
                Please look at the
                <ulink url="https://docs.jboss.org/author/pages/viewpage.action?pageId=23986289">PicketLink Quickstarts</ulink>
                for the PicketLink Identity Provider web application. The quickstarts are useful resources where you can get configuration files.
              </para>
            </tip>
          </section>
          <section id="sid-23986214_PicketLinkIdentityProvider%28PIDP%29-HowtocreateyourownPicketLinkIdentityProvider">
            
            <title>How to create your own PicketLink Identity Provider</title>
            <para>The best way to create your own Identity Provider implementation is using one of the examples provided by the PicketLink Quickstarts.</para>
            <para>You should also take a look at the following documentations:</para>
            <itemizedlist>
              <listitem>
                <para>
                  <xref linkend="sid-24838669"/>
                </para>
              </listitem>
              <listitem>
                <para>
                  <xref linkend="sid-24838682"/>
                </para>
              </listitem>
              <listitem>
                <para>
                  <xref linkend="sid-24838693"/>
                </para>
              </listitem>
            </itemizedlist>
          </section>
          <section id="sid-24838682">
            
            <title>Identity Provider Authenticators</title>
           
            <section id="sid-24838682_IdentityProviderAuthenticators-Introduction">
              
              <title>Introduction</title>
              <para>The PicketLink Identity Provider Authenticator is a component responsible for the authentication of users and for issue and validate SAML assertions.</para>
              <para>
                <figure>
<title>TODO InformalFigure image title empty</title>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="diagrams/federation/sso.png"/>
                    </imageobject>
                  </mediaobject>
                </figure>
              </para>
            </section>
            <section id="sid-24838682_IdentityProviderAuthenticators-ConfiguringanAuthenthicatorforaIdentityProvider">
              
              <title>Configuring an Authenthicator for a Identity Provider</title>
              <para>
                The PicketLink Authenticator is basically a
                <ulink url="http://tomcat.apache.org/tomcat-6.0-doc/config/valve.html">Tomcat Valve</ulink>
                (org.apache.catalina.authenticator.FormAuthenticator). The only thing you need to do is change the valves configuration for your application.
              </para>
              <para>This configuration changes for each supported binding.</para>
              <section id="sid-24838682_IdentityProviderAuthenticators-JBossApplicationServerv7">
                
                <title>JBoss Application Server v7</title>
                <para>
                  In JBoss Application Server v7 the valves configuration are located inside the
                  <emphasis role="strong">
                    <emphasis role="italics">WEB-INF/jboss-web.xml</emphasis>
                  </emphasis>
                  file. Bellow is a example of how this file looks like:
                </para>
                <informalexample>
                  <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;jboss-web&gt;
	&lt;security-domain&gt;idp&lt;/security-domain&gt;
	&lt;context-root&gt;idp&lt;/context-root&gt;
	&lt;valve&gt;
	    &lt;class-name&gt;org.picketlink.identity.federation.bindings.tomcat.idp.IDPWebBrowserSSOValve&lt;/class-name&gt;
	&lt;/valve&gt;
&lt;/jboss-web&gt;</programlisting>
                </informalexample>
                <para>
                  The valve configuration is done using the
                  <emphasis role="strong">&lt;valve&gt;</emphasis>
                  element.
                </para>
              </section>
              <section id="sid-24838682_IdentityProviderAuthenticators-JBossApplicationServerv5orv6">
                
                <title>JBoss Application Server v5 or v6</title>
                <para>
                  In JBoss Application Server v5 or v6, the valves configuration are located inside the
                  <emphasis role="strong">
                    <emphasis role="italics">WEB-INF/context.xml</emphasis>
                  </emphasis>
                  file. Bellow is a example of how this file looks like:
                </para>
                <informalexample>
                  <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Context&gt;
&lt;Valve className="org.picketlink.identity.federation.bindings.tomcat.idp.IDPWebBrowserSSOValve"Â /&gt;
&lt;/Context&gt;</programlisting>
                </informalexample>
                <para>
                  The valve configuration is done using the
                  <emphasis role="strong">&lt;Valve&gt;</emphasis>
                  element.
                </para>
              </section>
              <section id="sid-24838682_IdentityProviderAuthenticators-ApacheTomcat6">
                
                <title>Apache Tomcat 6</title>
                <para>
                  In Apache Tomcat 6 the valves configuration are located inside the
                  <emphasis role="strong">
                    <emphasis role="italics">META-INF/context.xml</emphasis>
                  </emphasis>
                  file. Bellow is a example of how this file looks like:
                  
                </para>
                <informalexample>
                  <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Context&gt;
&lt;Valve className="org.picketlink.identity.federation.bindings.tomcat.idp.IDPWebBrowserSSOValve" /&gt;
&lt;/Context&gt;
</programlisting>
                </informalexample>
                <para>
                  The valve configuration is done using the
                  <emphasis role="strong">&lt;Valve&gt;</emphasis>
                  element.
                </para>
              </section>
            </section>
            <section id="sid-24838682_IdentityProviderAuthenticators-BuiltinAuthenticators">
              
              <title>Built-in Authenticators</title>
              <para>PicketLink provides default implementations for Service Provider Authenticators. The list bellow shows all the available implementations:</para>
              <informaltable>
                <tgroup cols="2">
                  <thead>
                    <row>
                      <entry>
                        <para>
                          <emphasis role="color:#333333">Name</emphasis>
                        </para>
                      </entry>
                      <entry>
                        <para>
                          <emphasis role="color:#333333">Description</emphasis>
                        </para>
                      </entry>
                    </row>
                  </thead>
                  <tbody>
                    <row>
                      <entry>
                        <para>
                          <link linkend="sid-6815860">org.picketlink.
                            identity.federation.
                            bindings.tomcat.
                            idp.IDPWebBrowserSSOValve</link>
                        </para>
                      </entry>
                      <entry>
                        <para>Default implementation for an Identity Provider Authenticator.</para>
                      </entry>
                    </row>
                  </tbody>
                </tgroup>
              </informaltable>
            </section>
            <section id="sid-6815860">
              
              <title>IDPWebBrowserSSOValve</title>
              <para>IDPWebBrowserSSOValve from PicketLink provides the core IDP functionality on JBoss Application Server or Apache Tomcat.</para>
              <section id="sid-6815860_IDPWebBrowserSSOValve-Configuration">
                
                <title>Configuration</title>
                <section id="sid-6815860_IDPWebBrowserSSOValve-JBossApplicationServerv6andv5.x">
                  
                  <title>JBoss Application Server v6 and v5.x</title>
                  <para>Configure in WEB-INF/context.xml</para>
                </section>
                <section id="sid-6815860_IDPWebBrowserSSOValve-">
                  
                  <title/>
                </section>
                <section id="sid-6815860_IDPWebBrowserSSOValve-ApacheTomcat5.5and6">
                  
                  <title>Apache Tomcat 5.5 and 6</title>
                  <para>Configure in META-INF/context.xml</para>
                </section>
                <section id="sid-6815860_IDPWebBrowserSSOValve-x">
                  
                  <title/>
                </section>
                <section id="sid-6815860_IDPWebBrowserSSOValve-Example%3A">
                  
                  <title>Example:</title>
                  <example>
                    <title>context.xml</title>
                    <programlisting>
&lt;Context&gt;
&lt;Valve className="org.picketlink.identity.federation.bindings.tomcat.idp.IDPWebBrowserSSOValve"
           signOutgoingMessages="false"
           ignoreIncomingSignatures="true"/&gt;
&lt;/Context&gt;
</programlisting>
                  </example>
                </section>
              </section>
              <section id="sid-6815860_IDPWebBrowserSSOValve-xx">
                
                <title/>
              </section>
              <section id="sid-6815860_IDPWebBrowserSSOValve-Attributes">
                
                <title>Attributes</title>
                <informaltable>
                  <tgroup cols="5">
                    <colspec colnum="1" colname="col1" colwidth="0.25*"/>
                    <colspec colnum="2" colname="col2" colwidth="2.5*"/>
                    <colspec colnum="3" colname="col3" colwidth="0.5**"/>
                    <colspec colnum="4" colname="col4" colwidth="3*"/>
                    <colspec colnum="5" colname="col5" colwidth="1*"/>
                    <thead>
                      <row>
                        <entry >
                          <para>
                            #
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            Name
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            Type
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            Objective
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            Since version
                            
                          </para>
                        </entry>
                      </row>
                    </thead>
                    <tbody>
                      <row>
                        <entry>
                          <para>
                            1
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            attributeList
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            String
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            a comma separated list of attribute keys IDP interested in
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            2.0
                            
                          </para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>
                            2
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            configProvider
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            String
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            an
                            <emphasis role="italics">optional</emphasis>
                            implementation of the SAMLConfigurationProvider interface. 
                            Provide the fully qualified name.
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            2.0
                            
                          </para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>
                            3
                            
                          </para>
                        </entry>
                        <entry>
                          <para>ignoreIncomingSignatures</para>
                        </entry>
                        <entry>
                          <para>
                            boolean
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            if the IDP should ignore the signatures on the incoming messages
                            
                            Default: false
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            2.0
                            
                            <emphasis role="strong">Deprecated since 2.1.2.</emphasis>
                          </para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>
                            4
                            
                          </para>
                        </entry>
                        <entry>
                          <para>ignoreAttributesGeneration</para>
                        </entry>
                        <entry>
                          <para>
                            boolean
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            if the IDP should not generate attribute statements in 
                            response to Service Providers
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            2.0
                            
                          </para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>
                            5
                            
                          </para>
                        </entry>
                        <entry>
                          <para>signOutgoingMessages</para>
                        </entry>
                        <entry>
                          <para>
                            boolean
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            Should the IDP sign the outgoing messages?
                            
                            Default: true
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            2.0
                            <emphasis role="strong">Deprecated since 2.1.2.</emphasis>
                            
                          </para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>
                            6
                            
                          </para>
                        </entry>
                        <entry>
                          <para>roleGenerator</para>
                        </entry>
                        <entry>
                          <para>
                            String
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            optional fqn of a role generator
                            
                            
                            Default: org.picketlink.identity.
                            federation.bindings.
                            tomcat.TomcatRoleGenerator
                          </para>
                        </entry>
                        <entry>
                          <para>
                            2.0
                            
                            <emphasis role="strong">Deprecated since 2.1.2.</emphasis>
                            
                          </para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>
                            7
                            
                          </para>
                        </entry>
                        <entry>
                          <para>samlHandlerChainClass</para>
                        </entry>
                        <entry>
                          <para>
                            String
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            fqn of a custom SAMLHandlerChain implementation
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            2.0
                            
                            <emphasis role="strong">Deprecated since 2.1.2.</emphasis>
                            
                          </para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>
                            8
                            
                          </para>
                        </entry>
                        <entry>
                          <para>identityParticipantStack</para>
                        </entry>
                        <entry>
                          <para>
                            String
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            fqn of a custom IdentityParticipantStack
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            2.0
                            
                            <emphasis role="strong">Deprecated since 2.1.2.</emphasis>
                            
                          </para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>Â </para>
                        </entry>
                        <entry>
                          <para>Â </para>
                        </entry>
                        <entry>
                          <para>Â </para>
                        </entry>
                        <entry>
                          <para>Â </para>
                        </entry>
                        <entry>
                          <para>Â </para>
                        </entry>
                      </row>
                    </tbody>
                  </tgroup>
                </informaltable>
              </section>
            </section>
          </section>
          <section id="sid-24838669">
            
            <title>Identity Provider Configuration</title>
           
            <section id="sid-24838669_IdentityProviderConfiguration-ConfiguringaIdentityProvider">
              
              <title>Configuring a Identity Provider</title>
              <para>To configure an application as a PicketLink Identity Provider you need to follow this steps:</para>
              <orderedlist>
                <listitem>
                  <para>Configure the web.xml.</para>
                </listitem>
                <listitem>
                  <para>
                    Configure an
                    <link linkend="sid-24838548">
                      <emphasis role="strong">Authenticator</emphasis>
                    </link>
                    .
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configure a
                    <link linkend="sid-24838655">
                      <emphasis role="strong">Security Domain</emphasis>
                    </link>
                    for your application.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configure
                    <ulink url="https://docs.jboss.org/author/display/PLINK/JBoss+Modules">
                      <emphasis role="strong">PicketLink JBoss Module</emphasis>
                    </ulink>
                    as a dependency.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Create and configure a file named
                    <emphasis role="strong">WEB-INF/picketlink.xml</emphasis>
                    .
                  </para>
                </listitem>
              </orderedlist>
            </section>
            <section id="sid-24838669_IdentityProviderConfiguration-Configuringtheweb.xml">
              
              <title>Configuring the web.xml</title>
              <para>Before configuring your application as an Identity Provider you need to add some configurations to your web.xml.</para>
              <para>
                Let's start by defining a
                <emphasis role="strong">security-constraint</emphasis>
                element to restrict access to resources from unauthenticated users:
              </para>
              <informalexample>
                <programlisting>
&lt;security-constraint&gt;Â 
    &lt;web-resource-collection&gt;Â 
        &lt;web-resource-name&gt;Manager command&lt;/web-resource-name&gt;Â 
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;Â 
    &lt;/web-resource-collection&gt;Â 
    &lt;auth-constraint&gt;Â 
        &lt;role-name&gt;manager&lt;/role-name&gt;Â 
    &lt;/auth-constraint&gt;Â 
&lt;/security-constraint&gt;


&lt;security-role&gt;
Â  Â  &lt;description&gt;
Â  Â  Â  The role that is required to log in to IDP Application
Â  Â  &lt;/description&gt;
Â  Â  &lt;role-name&gt;manager&lt;/role-name&gt;
&lt;/security-role&gt;</programlisting>
              </informalexample>
              <para>
                As you can see above, we define that only users with a role named
                <emphasis role="strong">manager</emphasis>
                are allowed to access the protected resources. Make sure to give your users the same role you defined here, otherwise they will get a 403 HTTP status code.
              </para>
              <para>
                The next step is define your
                <emphasis role="italics">FORM</emphasis>
                login configuration using the
                <emphasis role="strong">login-config</emphasis>
                element:
              </para>
              <informalexample>
                <programlisting>&lt;login-config&gt;
    &lt;auth-method&gt;FORM&lt;/auth-method&gt;
    &lt;realm-name&gt;PicketLink IDP Application&lt;/realm-name&gt;
    &lt;form-login-config&gt;Â 
        &lt;form-login-page&gt;/jsp/login.jsp&lt;/form-login-page&gt;Â 
        &lt;form-error-page&gt;/jsp/login-error.jsp&lt;/form-error-page&gt;Â 
    &lt;/form-login-config&gt;Â 
&lt;/login-config&gt;</programlisting>
              </informalexample>
              <para>
                Make sure you have inside your application the pages defined in the elements
                <emphasis role="strong">form-login-page</emphasis>
                and
                <emphasis role="strong">form-error-page</emphasis>
                .
              </para>
              <important>
                <para>
                  Please, make sure you have a welcome file page in your application. You can define it in your web.xml or simply create an
                  <emphasis role="strong">index.jsp</emphasis>
                  at the root directory of your application.
                </para>
              </important>
            </section>
            <section id="sid-24838669_IdentityProviderConfiguration-Thepicketlink.xmlconfigurationfile">
              
              <title>The picketlink.xml configuration file</title>
              <para>All the configuration for an especific Identity Provider goes at the WEB-INF/picketlink.xml file. This file is responsible to define the behaviour of the Authenticator. During the identity provider startup, the authenticator parses this file and configures itself.</para>
              <para>
                Bellow is how the picketlink.xml file should looks like:
                
              </para>
              <informalexample>
                <programlisting>&lt;PicketLink xmlns="urn:picketlink:identity-federation:config:2.1"&gt;


    &lt;PicketLinkIDP xmlns="urn:picketlink:identity-federation:config:2.1"&gt;

        &lt;IdentityURL&gt;http://localhost:8080/idp/ &lt;/IdentityURL&gt;


        &lt;Trust&gt;
            &lt;Domains&gt;locahost,mycompany.com&lt;/Domains&gt;
        &lt;/Trust&gt;

        &lt;KeyProvider ClassName="org.picketlink.identity.federation.core.impl.KeyStoreKeyManager"&gt;

            &lt;Auth Key="KeyStoreURL" Value="/jbid_test_keystore.jks" /&gt;
            &lt;Auth Key="KeyStorePass" Value="store123" /&gt;
            &lt;Auth Key="SigningKeyPass" Value="test123" /&gt;
            &lt;Auth Key="SigningKeyAlias" Value="servercert" /&gt;

            &lt;ValidatingAlias Key="localhost" Value="servercert" /&gt;
            &lt;ValidatingAlias Key="127.0.0.1" Value="servercert" /&gt;

        &lt;/KeyProvider&gt;

    &lt;/PicketLinkIDP&gt;

    &lt;PicketLinkSTS xmlns="urn:picketlink:identity-federation:config:1.0" TokenTimeout="1000" ClockSkew="1000"&gt;
        &lt;TokenProviders&gt;
            &lt;TokenProvider ProviderClass="org.picketlink.identity.federation.core.saml.v2.providers.SAML20AssertionTokenProvider"
                TokenType="urn:oasis:names:tc:SAML:2.0:assertion" TokenElement="Assertion"
                TokenElementNS="urn:oasis:names:tc:SAML:2.0:assertion" /&gt;
        &lt;/TokenProviders&gt;
    &lt;/PicketLinkSTS&gt;

    &lt;Handlers xmlns="urn:picketlink:identity-federation:handler:config:2.1"&gt;

        &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2IssuerTrustHandler" /&gt;
   Â     &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2LogOutHandler" /&gt;
   Â     &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2AuthenticationHandler" /&gt;
   Â     &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.RolesGenerationHandler" /&gt;

Â     &lt;/Handlers&gt;

&lt;/PicketLink&gt;</programlisting>
              </informalexample>
              <important>
                <para>
                  The schema for the picketlink.xml file is available here:
                  <ulink url="https://github.com/picketlink/federation/blob/master/picketlink-core/src/main/resources/schema/config/picketlink_v2.1.xsd"/>
                  .
                </para>
              </important>
              <section id="sid-24838669_IdentityProviderConfiguration-PicketLinkIDPElement">
                
                <title>PicketLinkIDP Element</title>
                <para>This element defines the basic configuration for the identity provider. The table bellow provides more information about the attributes supported by this element:</para>
                <informaltable>
                  <tgroup cols="3">
                    <thead>
                      <row>
                        <entry>
                          <para>Name</para>
                        </entry>
                        <entry>
                          <para>Description</para>
                        </entry>
                        <entry>
                          <para>Value</para>
                        </entry>
                      </row>
                    </thead>
                    <tbody>
                      <row>
                        <entry>
                          <para>AssertionValidity</para>
                        </entry>
                        <entry>
                          <para>Defines the timeout for the SAML assertion validity, in miliseconds.</para>
                        </entry>
                        <entry>
                          <para>
                            Defaults to
                            <emphasis role="strong">
                              <emphasis role="italics">300000</emphasis>
                            </emphasis>
                            .
                            <emphasis role="italics">Deprecated. Use the PicketLinkSTS element, instead.</emphasis>
                          </para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>
                            RoleGenerator
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            Defines the name of the
                            <emphasis role="strong">org.picketlink.
                              identity.federation.
                              core.interfaces.
                              RoleGenerator</emphasis>
                            subclass to be used to obtain user roles.
                          </para>
                        </entry>
                        <entry>
                          <para>
                            Defaults to
                            <emphasis role="strong">org.picketlink.identity.
                              federation.core.
                              impl.EmptyRoleGenerator</emphasis>
                            <emphasis role="italics">.</emphasis>
                            
                          </para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>
                            AttributeManager
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            Defines the name of the
                            <emphasis role="strong">org.picketlink.
                              identity.federation.
                              core.interfaces.
                              AttributeManager</emphasis>
                            subclass to be used to obtain the SAML assertion attributes.
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            Defautls to
                            <emphasis role="strong">org.picketlink.
                              identity.federation.
                              core.impl.
                              EmptyAttributeManager</emphasis>
                            .
                          </para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>StrictPostBinding</para>
                        </entry>
                        <entry>
                          <para>SAML Web Browser SSO Profile has a requirement that the IDP does not respond back in Redirect Binding. Set this to false if you want to force the IDP to respond to SPs using the Redirect Binding.</para>
                        </entry>
                        <entry>
                          <para>
                            Values:
                            <emphasis role="strong">true|false</emphasis>
                            . Defaults to true, the IDP always respond via POST Binding.
                          </para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>
                            SupportsSignatures
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            Indicates if digital signature/verification of SAML assertions are enabled. If this attribute is marked to true the Service Providers must support signatures too, otherwise the SAML messages will be considered as invalid.
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            Values:
                            <emphasis role="strong">true|false.</emphasis>
                            Defaults to false.
                          </para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>
                            Encrypt
                            
                          </para>
                        </entry>
                        <entry>
                          <para>Indicates if SAML Assertions should be encrypted. If this attribute is marked to true the Service Providers must support signatures too, otherwise the SAML messages will be considered as invalid.</para>
                        </entry>
                        <entry>
                          <para>
                            Values:
                            <emphasis role="strong">true|false.</emphasis>
                            Defaults to false
                            
                          </para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>
                            IdentityParticipantStack
                            
                          </para>
                        </entry>
                        <entry>
                          <para>
                            Defines the name of the
                            <emphasis role="strong">org.picketlink.
                              identity.federation.
                              web.core.
                              IdentityParticipantStack</emphasis>
                            subclass to be used to register and deregister participants in the identity federation.
                          </para>
                        </entry>
                        <entry>
                          <para>
                            Defaults to
                            <emphasis role="strong">org.picketlink.
                              identity.federation.
                              web.core.
                              IdentityServer.STACK.</emphasis>
                          </para>
                        </entry>
                      </row>
                    </tbody>
                  </tgroup>
                </informaltable>
                <section id="sid-24838669_IdentityProviderConfiguration-IdentityURLElement">
                  
                  <title>IdentityURL Element</title>
                  <para>This element value refers to the URL of the Identity Provider.</para>
                  <para>
                    Eg.:
                    <ulink url="http://localhost:8080/idp/"/>
                  </para>
                </section>
                <section id="sid-24838669_IdentityProviderConfiguration-Trust%2FDomainsElements">
                  
                  <title>Trust/Domains Elements</title>
                  <para>The Trust and Domains elements defines the hosts trusted by this Identity Provider. You just need to inform a list of comma separated domain names.</para>
                </section>
                <section id="sid-24838669_IdentityProviderConfiguration-SAMLDigitalSignatureConfiguration%28KeyProviderElement%29">
                  
                  <title>SAML Digital Signature Configuration (KeyProvider Element)</title>
                  <para>To enable digital signatures for the SAML assertions you need to configure:</para>
                  <orderedlist>
                    <listitem>
                      <para>
                        Set the
                        <emphasis role="strong">SupportsSignature</emphasis>
                        attribute to true;
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Add the
                        <xref linkend="sid-25657767"/>
                        and the
                        <xref linkend="sid-25657755"/>
                        in the handlers chain (Handler Element).
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Configure a
                        <emphasis role="strong">
                          <link linkend="sid-24838626">KeyProvider</link>
                        </emphasis>
                        * *element.
                      </para>
                    </listitem>
                  </orderedlist>
                </section>
                <section id="sid-24838669_IdentityProviderConfiguration-SAMLEncryptionConfiguration">
                  
                  <title>SAML Encryption Configuration</title>
                  <para>To enable encryption for SAML assertions you need to configure:</para>
                  <orderedlist>
                    <listitem>
                      <para>
                        Set the
                        <emphasis role="strong">Encrypt</emphasis>
                        attribute to true;
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Add the
                        <emphasis role="strong">
                          <xref linkend="sid-50233628"/>
                        </emphasis>
                        and the
                        <xref linkend="sid-25657755"/>
                        in the handlers chain (Handler Element).
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Configure a
                        <emphasis role="strong">
                          <link linkend="sid-24838626">KeyProvider</link>
                        </emphasis>
                        * *element.
                      </para>
                    </listitem>
                  </orderedlist>
                </section>
              </section>
              <section id="sid-24838669_IdentityProviderConfiguration-SAMLHandlersConfiguration%28HandlersElement%29">
                
                <title>SAML Handlers Configuration (Handlers Element)</title>
                <para>
                  PicketLink provides some built-in
                  <link linkend="sid-6815920">Handlers</link>
                  to help the Identity Provider Authenticator processing the SAML requests and responses.
                </para>
                <para>
                  The handlers are configured through the
                  <emphasis role="strong">Handlers</emphasis>
                  element.
                </para>
              </section>
              <section id="sid-24838669_IdentityProviderConfiguration-SecurityTokenServiceConfiguration%28PicketLinkSTSElement%29">
                
                <title>SecurityToken Service Configuration (PicketLinkSTS Element)</title>
                <important>
                  <para>When configuring the IDP, you do not need to specify the PicketLinkSTS element in the configuration. If it is ommited PicketLink will load the default configurations from a file named core-sts inside the picketlink-core-VERSION.jar.</para>
                  <para>Override this configuration only if you need to. Eg.: change the token timeout or specify a custom Security Token Provider for SAML assertions.</para>
                </important>
                <para>
                  See the documentation at
                  <xref linkend="sid-50233608"/>
                  .
                </para>
              </section>
            </section>
          </section>
          <section id="sid-24838693">
            
            <title>Identity Stores</title>
           
            <section id="sid-24838693_IdentityStores-Introduction">
              
              <title>Introduction</title>
              <para>The Identity Provider needs a Identity Store to retrieve users information. These informations will be used during the authentication and authorization process. Identity Stores can be any type of repository: a database, LDAP, properties file, etc.</para>
              <para>The PicketLink Identity Provider uses JAAS to connect to an Identity Store. This configuration is usually made at the container side using any LoginModule implementation.</para>
              <para>If you are using the JBoss Application Server you can use one of the existing LoginModules or you can create your custom implementation:</para>
              <itemizedlist>
                <listitem>
                  <para>
                    <ulink url="https://community.jboss.org/wiki/JBossAS7SecurityDomainModel"/>
                  </para>
                </listitem>
              </itemizedlist>
            </section>
            <section id="sid-24838693_IdentityStores-ConfiguringaSecurityDomainforaIdentityStore">
              
              <title>Configuring a Security Domain for a Identity Store</title>
              <para>In order to authenticate users, the Identity Provider needs to be configured with the properly security domain configuration. The security domain is responsible for authenticating the user in a specific Identity Store.</para>
              <para>
                This is done by defining a
                <emphasis role="strong">&lt;security-domain&gt;</emphasis>
                element in jboss-web.xml.
              </para>
              <informalexample>
                <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;jboss-web&gt;   Â 
    &lt;security-domain&gt;idp&lt;/security-domain&gt;
    &lt;valve&gt;
Â  &lt;class-name&gt;org.picketlink.identity.federation.bindings.tomcat.idp.IDPWebBrowserSSOValve&lt;/class-name&gt;
Â  Â  &lt;/valve&gt;
&lt;/jboss-web&gt;</programlisting>
              </informalexample>
              <para>
                In order to use the security domain above, you need to configure it in your server. For JBoss AS7 you just need to add the following configuration to standalone.xml:
                
              </para>
              <informalexample>
                <programlisting>&lt;subsystem xmlns="urn:jboss:domain:security:1.1"&gt;
    &lt;security-domains&gt;
        &lt;security-domain name="idp" cache-type="default"&gt;
            &lt;authentication&gt;
                &lt;login-module code="UsersRoles" flag="required"&gt;
                    &lt;module-option name="usersProperties" value="users.properties"/&gt;
                    &lt;module-option name="rolesProperties" value="roles.properties"/&gt;
                &lt;/login-module&gt;
            &lt;/authentication&gt;
    &lt;/security-domain&gt;

    ...

&lt;/subsystem&gt;</programlisting>
              </informalexample>
              <para>The example above uses a JAAS LoginModule that uses two properties files to authenticate users and retrieve their roles. These properties files needs to be located at WEB-INF/classes folder.</para>
            </section>
          </section>
          <section id="sid-50233608">
            
            <title>Security Token Service Configuration</title>
            
            <section id="sid-50233608_SecurityTokenServiceConfiguration-SecurityTokenServiceConfiguration%28PicketLinkSTSElement%29">
              
              <title>SecurityToken Service Configuration (PicketLinkSTS Element)</title>
              <para>To issue/renew/cancel/validate SAML tokens, the IDP relies on the PicketLink STS API and configuration. This configurations define how the tokens should be used by the IDP.</para>
              <para>
                This
                <emphasis role="italics">PicketLinkSTS</emphasis>
                element defines the basic configuration for the Security Token Service. The table bellow provides more information about the attributes supported by this element:
              </para>
              <informaltable>
                <tgroup cols="3">
                  <thead>
                    <row>
                      <entry>
                        <para>Name</para>
                      </entry>
                      <entry>
                        <para>Description</para>
                      </entry>
                      <entry>
                        <para>Value</para>
                      </entry>
                    </row>
                  </thead>
                  <tbody>
                    <row>
                      <entry>
                        <para>
                          STSName
                          
                        </para>
                      </entry>
                      <entry>
                        <para>Name for this STS configuration.</para>
                      </entry>
                      <entry>
                        <para>Name for this Security Token Service.</para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          TokenTimeout
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Defines the token timeout in miliseconds.
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Defaults to
                          <emphasis role="strong">3600</emphasis>
                          miliseconds.
                          
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          ClockSkew
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Defines the clock skew, or timing skew, for the token timeout.
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Defaults to
                          <emphasis role="strong">
                            <emphasis role="italics">2000</emphasis>
                          </emphasis>
                          miliseconds.
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          SignToken
                          
                        </para>
                      </entry>
                      <entry>
                        <para>Indicates if the tokens should be signed.</para>
                      </entry>
                      <entry>
                        <para>
                          Values:
                          <emphasis role="strong">true|false</emphasis>
                          . Defaults to
                          <emphasis role="strong">false</emphasis>
                          .
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          EncryptToken
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Indicates if the tokens should be encrypted.
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Values:
                          <emphasis role="strong">true|false</emphasis>
                          . Defaults to
                          <emphasis role="strong">false</emphasis>
                          .
                          
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          CanonicalizationMethod
                          
                        </para>
                      </entry>
                      <entry>
                        <para>Sets the canonicalization method.</para>
                      </entry>
                      <entry>
                        <para>
                          Defaults to
                          <ulink url="http://www.w3.org/2001/10/xml-exc-c14n#WithComments"/>
                        </para>
                      </entry>
                    </row>
                  </tbody>
                </tgroup>
              </informaltable>
              <section id="sid-50233608_SecurityTokenServiceConfiguration-SecurityTokenProviders%28TokenProviders%2FTokenProviderelements%29">
                
                <title>Security Token Providers (TokenProviders/TokenProvider elements)</title>
                <para>
                  The PicketLink STS defines the concept of
                  <emphasis role="italics">Security Token Providers.</emphasis>
                  This tokens providers are implementations of the interface
                  <emphasis role="strong">org.picketlink.identity.federation.core.interfaces.SecurityTokenProvider</emphasis>
                  .
                </para>
                <para>The purpose of providers is to plug any implementation for a specific token type. PicketLink provides default implementations for the following token type:</para>
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="strong">SAML v2.0</emphasis>
                      :
                      <emphasis role="italics">org.picketlink.identity.federation.core.saml.v2.providers.SAML20AssertionTokenProvider</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">
                        <emphasis role="italics">WS-Trust</emphasis>
                      </emphasis>
                      _ : org.picketlink.identity.federation.core.wstrust.plugins.saml.SAML20TokenProvider_
                    </para>
                  </listitem>
                </itemizedlist>
                <para>
                  Each provider is linked to a specific
                  <emphasis role="italics">TokenType</emphasis>
                  and
                  <emphasis role="italics">TokenElementNS,</emphasis>
                  both attributes of the
                  <emphasis role="italics">TokenProvider</emphasis>
                  element.
                </para>
                <para>You can always provide your own implementation for a specific TokenType or customize the behaviour for one of the built-in providers.</para>
              </section>
            </section>
          </section>
        </section>
        <section id="sid-23986216">
          
          <title>PicketLink Service Provider (PSP)</title>
          <section id="sid-23986216_PicketLinkServiceProvider%28PSP%29-Introduction">
            
            <title>Introduction</title>
            <para>The PicketLink Service Provider relies on the PicketLink Identity Provider to assert information about a user via an electronic user credential, leaving the service provider to manage access control and dissemination based on a trusted set of user credential assertions.</para>
            <tip>
              <para>
                Please have a look at the
                <ulink url="https://docs.jboss.org/author/pages/viewpage.action?pageId=23986289">PicketLink Quickstarts</ulink>
                to obtain service provider applications. The quickstarts are useful resources where you can get configuration files.
              </para>
            </tip>
          </section>
          <section id="sid-23986216_PicketLinkServiceProvider%28PSP%29-HowtocreateyourownPicketLinkServiceProvider">
            
            <title>How to create your own PicketLink Service Provider</title>
            <para>The best way to create your own Service Provider implementation is using one of the examples provided by the PicketLink Quickstarts.</para>
            <para>You should also take a look at the following documentations:</para>
            <itemizedlist>
              <listitem>
                <para>
                  <xref linkend="sid-24838573"/>
                </para>
              </listitem>
              <listitem>
                <para>
                  <xref linkend="sid-24838548"/>
                </para>
              </listitem>
              <listitem>
                <para>
                  <link linkend="sid-24838655">Configuring a SAML Security Domain</link>
                </para>
              </listitem>
            </itemizedlist>
          </section>
          <section id="sid-24838573">
            
            <title>Service Provider Configuration</title>
            
            <section id="sid-24838573_ServiceProviderConfiguration-ConfiguringaServiceProvider">
              
              <title>Configuring a Service Provider</title>
              <para>To configure an application as a PicketLink Service Provider you need to follow this steps:</para>
              <orderedlist>
                <listitem>
                  <para>Configuring the web.xml.</para>
                </listitem>
                <listitem>
                  <para>
                    Configure an
                    <link linkend="sid-24838548">
                      <emphasis role="strong">Authenticator</emphasis>
                    </link>
                    .
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configure a
                    <link linkend="sid-24838655">
                      <emphasis role="strong">Security Domain</emphasis>
                    </link>
                    for your application.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configure
                    <ulink url="https://docs.jboss.org/author/display/PLINK/JBoss+Modules">
                      <emphasis role="strong">PicketLink JBoss Module</emphasis>
                    </ulink>
                    as a dependency.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Create and configure a file named
                    <emphasis role="strong">WEB-INF/picketlink.xml</emphasis>
                    .
                  </para>
                </listitem>
              </orderedlist>
            </section>
            <section id="sid-24838573_ServiceProviderConfiguration-Configuringtheweb.xml">
              
              <title>Configuring the web.xml</title>
              <para>Before configuring your application as an Service Provider you need to add some configurations to your web.xml.</para>
              <para>
                Let's start by defining a
                <emphasis role="strong">security-constraint</emphasis>
                element to restrict access to resources from unauthenticated users:
              </para>
              <informalexample>
                <programlisting>&lt;security-constraint&gt;Â 
    &lt;web-resource-collection&gt;Â 
        &lt;web-resource-name&gt;Manager command&lt;/web-resource-name&gt;Â 
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;Â 
    &lt;/web-resource-collection&gt;Â 
    &lt;auth-constraint&gt;Â 
        &lt;role-name&gt;manager&lt;/role-name&gt;Â 
    &lt;/auth-constraint&gt;Â 
&lt;/security-constraint&gt;

&lt;security-role&gt;
Â Â   &lt;description&gt;
Â  Â  Â  The role that is required to log in to the Manager Application
Â Â   &lt;/description&gt;
Â Â   &lt;role-name&gt;manager&lt;/role-name&gt;
&lt;/security-role&gt;</programlisting>
              </informalexample>
              <para>
                As you can see above, we define that only users with a role named
                <emphasis role="strong">manager</emphasis>
                are allowed to access the protected resources. Make sure to give your users the same role you defined here, otherwise they will get a 403 HTTP status code.
              </para>
              <para>
                During the logout process, PicketLink will try to redirect the user to a
                <emphasis role="strong">logout.jsp</emphasis>
                page located at the root directory of your application. Please, make sure to create it.
              </para>
              <important>
                <para>
                  Please, make sure you have a welcome file page in your application. You can define it in your web.xml or simply create an
                  <emphasis role="strong">index.jsp</emphasis>
                  at the root directory of your application.
                </para>
              </important>
            </section>
            <section id="sid-24838573_ServiceProviderConfiguration-Thepicketlink.xmlconfigurationfile">
              
              <title>The picketlink.xml configuration file</title>
              <para>All the configuration for an especific Service Providers goes at the WEB-INF/picketlink.xml file. This file is responsible to define the behaviour of the Authenticator. During the service provider startup, the authenticator parses this file and configures itself.</para>
              <para>
                Bellow is how the picketlink.xml file should looks like:
                
              </para>
              <informalexample>
                <programlisting>&lt;PicketLink xmlns="urn:picketlink:identity-federation:config:2.1"&gt;


    &lt;PicketLinkSP xmlns="urn:picketlink:identity-federation:config:2.1"
        BindingType="REDIRECT"
        RelayState="someURL"
        ErrorPage="/someerror.jsp"
        LogOutPage="/customLogout.jsp"
        IDPUsesPostBinding="true"
        SupportsSignatures="true"&gt;

        &lt;IdentityURL&gt;http://localhost:8080/idp/ &lt;/IdentityURL&gt;
        &lt;ServiceURL&gt;http://localhost:8080/employee/ &lt;/ServiceURL&gt;

        &lt;KeyProvider ClassName="org.picketlink.identity.federation.core.impl.KeyStoreKeyManager"&gt;

            &lt;Auth Key="KeyStoreURL" Value="/jbid_test_keystore.jks" /&gt;
            &lt;Auth Key="KeyStorePass" Value="store123" /&gt;
            &lt;Auth Key="SigningKeyPass" Value="test123" /&gt;
            &lt;Auth Key="SigningKeyAlias" Value="servercert" /&gt;

            &lt;ValidatingAlias Key="localhost" Value="servercert" /&gt;
            &lt;ValidatingAlias Key="127.0.0.1" Value="servercert" /&gt;

        &lt;/KeyProvider&gt;

    &lt;/PicketLinkSP&gt;

    &lt;Handlers xmlns="urn:picketlink:identity-federation:handler:config:2.1"&gt;

        &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2IssuerTrustHandler" /&gt;
   Â     &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2LogOutHandler" /&gt;
   Â     &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2AuthenticationHandler" /&gt;
   Â     &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.RolesGenerationHandler" /&gt;

Â     &lt;/Handlers&gt;

&lt;/PicketLink&gt;</programlisting>
              </informalexample>
              <important>
                <para>
                  The schema for the picketlink.xml file is available here:
                  <ulink url="https://github.com/picketlink/federation/blob/master/picketlink-core/src/main/resources/schema/config/picketlink_v2.1.xsd"/>
                  .
                </para>
              </important>
              <section id="sid-24838573_ServiceProviderConfiguration-PicketLinkSPElement">
                
                <title>PicketLinkSP Element</title>
                <para>This element defines the basic configuration for the service provider. The table bellow provides more information about the attributes supported by this element:</para>
                <informaltable>
                  <tgroup cols="3">
                    <thead>
                      <row>
                        <entry>
                          <para>Name</para>
                        </entry>
                        <entry>
                          <para>Description</para>
                        </entry>
                        <entry>
                          <para>Value</para>
                        </entry>
                      </row>
                    </thead>
                    <tbody>
                      <row>
                        <entry>
                          <para>BindingType</para>
                        </entry>
                        <entry>
                          <para>Defines which SAML binding should be used: SAML HTTP POST or Redirect bindings.</para>
                        </entry>
                        <entry>
                          <para>POST|REDIRECT. Defaults to POST if no specified.</para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>ErrorPage</para>
                        </entry>
                        <entry>
                          <para>Defines a custom error page to be displayed when some error occurs during the request processing.</para>
                        </entry>
                        <entry>
                          <para>
                            Defaults to /error.jsp.
                            
                          </para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>LogOutPage</para>
                        </entry>
                        <entry>
                          <para>Defines a custom logout page to be displayed after the logout.</para>
                        </entry>
                        <entry>
                          <para>Defaults to /logout.jsp.</para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>
                            IDPUsesPostBinding
                            
                          </para>
                        </entry>
                        <entry>
                          <para>Indicates if the Identity Provider configured for this Service Provider is always using POST for SAML responses.</para>
                        </entry>
                        <entry>
                          <para>true|false. Defaults to true if no specified.</para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>
                            SupportsSignature
                            
                          </para>
                        </entry>
                        <entry>
                          <para>Indicates if digital signature/verification of SAML assertions are enabled. If this attribute is marked to true the Identity Provider configured for this Service Provider must support signatures too, otherwise the SAML messages will be considered as invalid.</para>
                        </entry>
                        <entry>
                          <para>true|false. Defaults to false if no specified.</para>
                        </entry>
                      </row>
                    </tbody>
                  </tgroup>
                </informaltable>
                <section id="sid-24838573_ServiceProviderConfiguration-IdentityURLElement">
                  
                  <title>IdentityURL Element</title>
                  <para>This element value refers to the URL of the Identity Provider used by this Service Provider.</para>
                  <para>
                    Eg.:
                    <ulink url="http://localhost:8080/idp/"/>
                  </para>
                </section>
                <section id="sid-24838573_ServiceProviderConfiguration-ServiceURLElement">
                  
                  <title>ServiceURL Element</title>
                  <para>This element value refers to the URL of the Service Provider.</para>
                  <para>
                    Eg.:
                    <ulink url="http://localhost:8080/sales/"/>
                  </para>
                </section>
              </section>
              <section id="sid-24838573_ServiceProviderConfiguration-SAMLDigitalSignatureConfiguration%28KeyProviderElement%29">
                
                <title>SAML Digital Signature Configuration (KeyProvider Element)</title>
                <para>To enable digital signatures for the SAML assertions you need to configure:</para>
                <orderedlist>
                  <listitem>
                    <para>
                      Set the
                      <emphasis role="strong">SupportsSignature</emphasis>
                      attribute to true;
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Add the
                      <xref linkend="sid-25657767"/>
                      and the
                      <xref linkend="sid-25657755"/>
                      in the handlers chain (Handler Element).
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Configure a
                      <emphasis role="strong">
                        <link linkend="sid-24838626">KeyProvider</link>
                      </emphasis>
                      * *element.
                    </para>
                  </listitem>
                </orderedlist>
              </section>
              <section id="sid-24838573_ServiceProviderConfiguration-SAMLHandlersConfiguration%28HandlersElement%29">
                
                <title>SAML Handlers Configuration (Handlers Element)</title>
                <para>
                  PicketLink provides some built-in
                  <link linkend="sid-6815920">Handlers</link>
                  to help the Service Provider Authenticator processing the SAML requests and responses.
                </para>
                <para>
                  The handlers are configured through the
                  <emphasis role="strong">Handlers</emphasis>
                  element.
                </para>
              </section>
            </section>
          </section>
          <section id="sid-24838548">
            
            <title>Service Provider Authenticators</title>
          
            <section id="sid-24838548_ServiceProviderAuthenticators-Introduction">
              
              <title>Introduction</title>
              <para>PicketLink Service Providers Authenticators are important components responsible for the authentication of users using the SAML Assertion previously issued by an Identity Provider.</para>
              <para>They are responsible for intercepting each request made to an application, checking if a SAML assertion is present in the request, validating its signature and executing SAML specific validations and creating a security context for the user in the requested application.</para>
              <para>
                <figure>
<title>TODO InformalFigure image title empty</title>
                  <mediaobject>
                    <imageobject>
                      <imagedata fileref="diagrams/federation/sso.png"/>
                    </imageobject>
                  </mediaobject>
                </figure>
              </para>
            </section>
            <section id="sid-24838548_ServiceProviderAuthenticators-ConfiguringanAuthenthicatorforaServiceProvider">
              
              <title>Configuring an Authenthicator for a Service Provider</title>
              <para>
                The PicketLink Authenticator is basically a
                <ulink url="http://tomcat.apache.org/tomcat-6.0-doc/config/valve.html">Tomcat Valve</ulink>
                (org.apache.catalina.authenticator.FormAuthenticator). The only thing you need to do is change the valves configuration for your application.
              </para>
              <para>This configuration changes for each supported binding.</para>
              <section id="sid-24838548_ServiceProviderAuthenticators-JBossApplicationServerv7">
                
                <title>JBoss Application Server v7</title>
                <para>
                  In JBoss Application Server v7 the valves configuration are located inside the
                  <emphasis role="strong">
                    <emphasis role="italics">WEB-INF/jboss-web.xml</emphasis>
                  </emphasis>
                  file. Bellow is a example of how this file looks like:
                </para>
                <informalexample>
                  <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;jboss-web&gt;
	&lt;security-domain&gt;sp&lt;/security-domain&gt;
	&lt;context-root&gt;employee&lt;/context-root&gt;
	&lt;valve&gt;
	    &lt;class-name&gt;org.picketlink.identity.federation.bindings.tomcat.sp.ServiceProviderAuthenticator&lt;/class-name&gt;
	&lt;/valve&gt;
&lt;/jboss-web&gt;</programlisting>
                </informalexample>
                <para>
                  The valve configuration is done using the
                  <emphasis role="strong">&lt;valve&gt;</emphasis>
                  element.
                </para>
              </section>
              <section id="sid-24838548_ServiceProviderAuthenticators-JBossApplicationServerv5orv6">
                
                <title>JBoss Application Server v5 or v6</title>
                <para>
                  In JBoss Application Server v5 or v6, the valves configuration are located inside the
                  <emphasis role="strong">
                    <emphasis role="italics">WEB-INF/context.xml</emphasis>
                  </emphasis>
                  file. Bellow is a example of how this file looks like:
                </para>
                <informalexample>
                  <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Context&gt;
    &lt;Valve className="org.picketlink.identity.federation.bindings.tomcat.sp.ServiceProviderAuthenticator" /&gt;
&lt;/Context&gt;</programlisting>
                </informalexample>
                <para>
                  The valve configuration is done using the
                  <emphasis role="strong">&lt;Valve&gt;</emphasis>
                  element.
                </para>
              </section>
              <section id="sid-24838548_ServiceProviderAuthenticators-ApacheTomcat6">
                
                <title>Apache Tomcat 6</title>
                <para>
                  In Apache Tomcat 6 the valves configuration are located inside the
                  <emphasis role="strong">
                    <emphasis role="italics">META-INF/context.xml</emphasis>
                  </emphasis>
                  file. Bellow is a example of how this file looks like:
                  
                </para>
                <informalexample>
                  <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Context&gt;
    &lt;Valve className="org.picketlink.identity.federation.bindings.tomcat.sp.ServiceProviderAuthenticator" /&gt;
&lt;/Context&gt;
</programlisting>
                </informalexample>
                <para>
                  The valve configuration is done using the
                  <emphasis role="strong">&lt;Valve&gt;</emphasis>
                  element.
                </para>
              </section>
            </section>
            <section id="sid-24838548_ServiceProviderAuthenticators-BuiltinAuthenticators">
              
              <title>Built-in Authenticators</title>
              <para>PicketLink provides default implementations for Service Provider Authenticators. The list bellow shows all the available implementations:</para>
              <informaltable>
                <tgroup cols="2">
                  <thead>
                    <row>
                      <entry>
                        <para>
                          <emphasis role="color:#333333">Name</emphasis>
                        </para>
                      </entry>
                      <entry>
                        <para>
                          <emphasis role="color:#333333">Description</emphasis>
                        </para>
                      </entry>
                    </row>
                  </thead>
                  <tbody>
                    <row>
                      <entry>
                        <para>
                          <link linkend="sid-24674925">org.picketlink.identity.
                            federation.bindings.
                            tomcat.sp.
                            ServiceProviderAuthenticator</link>
                          
                        </para>
                      </entry>
                      <entry>
                        <para>Preferred service provider authenticator. Supports both SAML HTTP Redirect and POST bindings.</para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          <link linkend="sid-6815869">org.picketlink.
                            identity.federation.
                            bindings.tomcat.
                            sp.SPPostFormAuthenticator</link>
                        </para>
                      </entry>
                      <entry>
                        <para>
                          <emphasis role="strong">Deprecated</emphasis>
                          . Supports only HTTP POST Binding without signature of SAML assertions.
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          <link linkend="sid-6815879">org.picketlink.
                            identity.federation.
                            bindings.tomcat.
                            sp.SPPostSignatureFormAuthenticator</link>
                        </para>
                      </entry>
                      <entry>
                        <para>
                          <emphasis role="strong">Deprecated</emphasis>
                          . Supports only HTTP POST Binding with signature of SAML assertions.
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          <link linkend="sid-6815876">org.picketlink.
                            identity.federation.
                            bindings.tomcat.
                            sp.SPRedirectFormAuthenticator</link>
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          <emphasis role="strong">Deprecated</emphasis>
                          . Supports only HTTP Redirect Binding without signature of SAML assertions.
                          
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          <link linkend="sid-6815889">org.picketlink.
                            identity.federation.
                            bindings.tomcat.
                            sp.SPRedirectSignatureFormAuthenticator</link>
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          <emphasis role="strong">Deprecated</emphasis>
                          . Supports only HTTP Redirect Binding with signature of SAML assertions.
                          
                        </para>
                      </entry>
                    </row>
                  </tbody>
                </tgroup>
              </informaltable>
              <warning>
                <para>
                  Prefer using the
                  <emphasis role="underline">
                    <link linkend="sid-24674925"/>
                    <emphasis role="underline">ServiceProviderAuthenticator</emphasis>
                  </emphasis>
                  authenticator if you are using PicketLink v.2.1 or above. The others authenticators are
                  <emphasis role="strong">DEPRECATED</emphasis>
                  .
                </para>
              </warning>
            </section>
            <section id="sid-24674925">
              
              <title>ServiceProviderAuthenticator</title>
              <para>
                As of PicketLink v2.1,  the ServiceProviderAuthenticator is the preferred Service Provider configuration to the deprecated
                <xref linkend="sid-6815869"/>
                ,
                <xref linkend="sid-6815876"/>
                ,
                <xref linkend="sid-6815879"/>
                and
                <xref linkend="sid-6815889"/>
                .
              </para>
              <section id="sid-24674925_ServiceProviderAuthenticator-Configuration">
                
                <title>Configuration</title>
                <para>
                  <ulink url="https://docs.jboss.org/author/display/PLINK/Service+Provider+Configuration"/>
                </para>
              </section>
              <section id="sid-24674925_ServiceProviderAuthenticator-">
                
                <title/>
              </section>
            </section>
            <section id="sid-6815889">
              
              <title>SPRedirectSignatureFormAuthenticator</title>
              <warning>
                <para>
                  As of PicketLink v2.1,  the
                  <xref linkend="sid-24674925"/>
                  is the preferred Service Provider configuration to the
                  <emphasis role="strong">deprecated</emphasis>
                  <xref linkend="sid-6815869"/>
                  ,
                  <xref linkend="sid-6815876"/>
                  ,
                  <xref linkend="sid-6815879"/>
                  and
                  <xref linkend="sid-6815889"/>
                  .
                </para>
              </warning>
              <para>SPRedirectSignatureFormAuthenticator is used to provide signature/encryption services to a Service Provider (SP) application for HTTP/Redirect binding of SAMLv2 specification.  This authenticator</para>
              <para>
                is an extension of the
                <xref linkend="sid-6815876"/>
                .
              </para>
              <section id="sid-6815889_SPRedirectSignatureFormAuthenticator-Binding">
                
                <title>Binding</title>
                <para>HTTP/Redirect Binding (along with signature/encryption support)</para>
              </section>
              <section id="sid-6815889_SPRedirectSignatureFormAuthenticator-Configuration">
                
                <title>Configuration</title>
                <section id="sid-6815889_SPRedirectSignatureFormAuthenticator-JBossApplicationServerv5.x%2F6">
                  
                  <title>JBoss Application Server v5.x/6</title>
                  <para>Configure in WEB-INF/context.xml</para>
                </section>
                <section id="sid-6815889_SPRedirectSignatureFormAuthenticator-ApacheTomcatv5.5%2F6.x">
                  
                  <title>Apache Tomcat v5.5/6.x</title>
                  <para>Configure in META-INF/context.xml</para>
                </section>
                <section id="sid-6815889_SPRedirectSignatureFormAuthenticator-">
                  
                  <title/>
                </section>
                <section id="sid-6815889_SPRedirectSignatureFormAuthenticator-Example%3A">
                  
                  <title>Example:</title>
                  <example>
                    <title>context.xml</title>
                    <programlisting>&lt;Context&gt;
  &lt;Valve className="org.picketlink.identity.federation.bindings.tomcat.sp.SPRedirectSignatureFormAuthenticator"
  /&gt;
&lt;/Context&gt;
</programlisting>
                  </example>
                </section>
                <section id="sid-6815889_SPRedirectSignatureFormAuthenticator-Attributes">
                  
                  <title>Attributes</title>
                  <informaltable>
                    <tgroup cols="5">
                      <colspec colnum="1" colname="col1" colwidth="0.25*"/>
                      <colspec colnum="2" colname="col2" colwidth="2.5*"/>
                      <colspec colnum="3" colname="col3" colwidth="0.5**"/>
                      <colspec colnum="4" colname="col4" colwidth="3*"/>
                      <colspec colnum="5" colname="col5" colwidth="1*"/>
                      <thead>
                        <row>
                          <entry>
                            <para>
                              #
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              Name
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              Type
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              Objective
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              Since
                              
                            </para>
                          </entry>
                        </row>
                      </thead>
                      <tbody>
                        <row>
                          <entry>
                            <para>
                              1
                              
                            </para>
                          </entry>
                          <entry>
                            <para>configFile</para>
                          </entry>
                          <entry>
                            <para>
                              String
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              optional - fully qualified location of the config file
                              
                              Default: /WEB-INF/picketlink-idfed.xml
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>
                              2
                              
                            </para>
                          </entry>
                          <entry>
                            <para>samlHandlerChainClass</para>
                          </entry>
                          <entry>
                            <para>
                              String
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              optional - fqn of a custom SAMLHandlerChain implementation
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>
                              3
                              
                            </para>
                          </entry>
                          <entry>
                            <para>serviceURL</para>
                          </entry>
                          <entry>
                            <para>
                              String
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              optional - the service provider URL
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>
                              4
                              
                            </para>
                          </entry>
                          <entry>
                            <para>saveRestoreRequest</para>
                          </entry>
                          <entry>
                            <para>
                              boolean
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              should the authenticator save the original request and restore it after authentication
                              
                              Default: true
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>
                              5
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              configProvider
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              String
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              optional - a fqn of the SAMLConfigurationProvider implementation
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>
                              6
                              
                            </para>
                          </entry>
                          <entry>
                            <para>issuerID</para>
                          </entry>
                          <entry>
                            <para>
                              String
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              optional - customize the issuer id
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>
                              7
                              
                            </para>
                          </entry>
                          <entry>
                            <para>idpAddress</para>
                          </entry>
                          <entry>
                            <para>
                              String
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              optional - If the request.getRemoteAddr is not exactly the IDP address that you have keyed
                              
                              in your deployment descriptor for keystore alias, you can configure it explicitly
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                      </tbody>
                    </tgroup>
                  </informaltable>
                </section>
              </section>
            </section>
            <section id="sid-6815876">
              
              <title>SPRedirectFormAuthenticator</title>
              <warning>
                <para>
                  As of PicketLink v2.1,  the
                  <xref linkend="sid-24674925"/>
                  is the preferred Service Provider configuration to the
                  <emphasis role="strong">deprecated</emphasis>
                  <xref linkend="sid-6815869"/>
                  ,
                  <xref linkend="sid-6815876"/>
                  ,
                  <xref linkend="sid-6815879"/>
                  and
                  <xref linkend="sid-6815889"/>
                  .
                </para>
              </warning>
              <para>SPRedirectFormAuthenticator provides the SAMLv2 HTTP/Redirect binding support for service provider (SP) applications.</para>
              <section id="sid-6815876_SPRedirectFormAuthenticator-Binding">
                
                <title>Binding</title>
                <para>SAMLv2 HTTP/Redirect Binding</para>
              </section>
              <section id="sid-6815876_SPRedirectFormAuthenticator-Configuration">
                
                <title>Configuration</title>
                <section id="sid-6815876_SPRedirectFormAuthenticator-JBossApplicationServerv5.x%2F6">
                  
                  <title>JBoss Application Server v5.x/6</title>
                  <para>Configure in WEB-INF/context.xml</para>
                </section>
                <section id="sid-6815876_SPRedirectFormAuthenticator-ApacheTomcatv5.5%2F6.x">
                  
                  <title>Apache Tomcat v5.5/6.x</title>
                  <para>Configure in META-INF/context.xml</para>
                </section>
                <section id="sid-6815876_SPRedirectFormAuthenticator-">
                  
                  <title/>
                </section>
                <section id="sid-6815876_SPRedirectFormAuthenticator-Example%3A">
                  
                  <title>Example:</title>
                  <example>
                    <title>context.xml</title>
                    <programlisting>&lt;Context&gt;
  &lt;Valve className="org.picketlink.identity.federation.bindings.tomcat.sp.SPRedirectFormAuthenticator"
  /&gt;
&lt;/Context&gt;
</programlisting>
                  </example>
                </section>
                <section id="sid-6815876_SPRedirectFormAuthenticator-Attributes">
                  
                  <title>Attributes</title>
                  <informaltable>
                    <tgroup cols="5">
                      <colspec colnum="1" colname="col1" colwidth="0.25*"/>
                      <colspec colnum="2" colname="col2" colwidth="2.5*"/>
                      <colspec colnum="3" colname="col3" colwidth="0.5**"/>
                      <colspec colnum="4" colname="col4" colwidth="3*"/>
                      <colspec colnum="5" colname="col5" colwidth="1*"/>
                      <thead>
                        <row>
                          <entry>
                            <para>
                              #
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              Name
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              Type
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              Objective
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              Since
                              
                            </para>
                          </entry>
                        </row>
                      </thead>
                      <tbody>
                        <row>
                          <entry>
                            <para>
                              1
                              
                            </para>
                          </entry>
                          <entry>
                            <para>configFile</para>
                          </entry>
                          <entry>
                            <para>
                              String
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              optional - fully qualified location of the config file
                              
                              Default: /WEB-INF/picketlink-idfed.xml
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>
                              2
                              
                            </para>
                          </entry>
                          <entry>
                            <para>samlHandlerChainClass</para>
                          </entry>
                          <entry>
                            <para>
                              String
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              optional - fqn of a custom SAMLHandlerChain implementation
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>
                              3
                              
                            </para>
                          </entry>
                          <entry>
                            <para>serviceURL</para>
                          </entry>
                          <entry>
                            <para>
                              String
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              optional - the service provider URL
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>
                              4
                              
                            </para>
                          </entry>
                          <entry>
                            <para>saveRestoreRequest</para>
                          </entry>
                          <entry>
                            <para>
                              boolean
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              should the authenticator save the original request and restore it after authentication
                              
                              Default: true
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>
                              5
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              configProvider
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              String
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              optional - a fqn of the SAMLConfigurationProvider implementation
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>
                              6
                              
                            </para>
                          </entry>
                          <entry>
                            <para>issuerID</para>
                          </entry>
                          <entry>
                            <para>
                              String
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              optional - customize the issuer id
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>Â </para>
                          </entry>
                          <entry>
                            <para>Â </para>
                          </entry>
                          <entry>
                            <para>Â </para>
                          </entry>
                          <entry>
                            <para>Â </para>
                          </entry>
                          <entry>
                            <para>Â </para>
                          </entry>
                        </row>
                      </tbody>
                    </tgroup>
                  </informaltable>
                </section>
              </section>
            </section>
            <section id="sid-6815879">
              
              <title>SPPostSignatureFormAuthenticator</title>
              <warning>
                <para>
                  As of PicketLink v2.1,  the
                  <xref linkend="sid-24674925"/>
                  is the preferred Service Provider configuration to the
                  <emphasis role="strong">deprecated</emphasis>
                  <xref linkend="sid-6815869"/>
                  ,
                  <xref linkend="sid-6815876"/>
                  ,
                  <xref linkend="sid-6815879"/>
                  and
                  <xref linkend="sid-6815889"/>
                  .
                </para>
              </warning>
              <para>SPPostSignatureFormAuthenticator is used to provide signature/encryption services to a Service Provider (SP) application for HTTP/POST binding of SAMLv2 specification.  This authenticator</para>
              <para>
                is an extension of the
                <xref linkend="sid-6815869"/>
                .
              </para>
              <section id="sid-6815879_SPPostSignatureFormAuthenticator-Binding">
                
                <title>Binding</title>
                <para>HTTP/POST Binding (along with signature/encryption support)</para>
              </section>
              <section id="sid-6815879_SPPostSignatureFormAuthenticator-Configuration">
                
                <title>Configuration</title>
                <section id="sid-6815879_SPPostSignatureFormAuthenticator-JBossApplicationServerv5.x%2F6">
                  
                  <title>JBoss Application Server v5.x/6</title>
                  <para>Configure in WEB-INF/context.xml</para>
                </section>
                <section id="sid-6815879_SPPostSignatureFormAuthenticator-ApacheTomcatv5.5%2F6.x">
                  
                  <title>Apache Tomcat v5.5/6.x</title>
                  <para>Configure in META-INF/context.xml</para>
                </section>
                <section id="sid-6815879_SPPostSignatureFormAuthenticator-">
                  
                  <title/>
                </section>
                <section id="sid-6815879_SPPostSignatureFormAuthenticator-Example%3A">
                  
                  <title>Example:</title>
                  <example>
                    <title>context.xml</title>
                    <programlisting>&lt;Context&gt;
  &lt;Valve className="org.picketlink.identity.federation.bindings.tomcat.sp.SPPostSignatureFormAuthenticator"
  /&gt;
&lt;/Context&gt;
</programlisting>
                  </example>
                </section>
                <section id="sid-6815879_SPPostSignatureFormAuthenticator-Attributes">
                  
                  <title>Attributes</title>
                  <informaltable>
                    <tgroup cols="5">
                      <colspec colnum="1" colname="col1" colwidth="0.25*"/>
                      <colspec colnum="2" colname="col2" colwidth="2.5*"/>
                      <colspec colnum="3" colname="col3" colwidth="0.5**"/>
                      <colspec colnum="4" colname="col4" colwidth="3*"/>
                      <colspec colnum="5" colname="col5" colwidth="1*"/>
                      <thead>
                        <row>
                          <entry>
                            <para>
                              #
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              Name
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              Type
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              Objective
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              Since
                              
                            </para>
                          </entry>
                        </row>
                      </thead>
                      <tbody>
                        <row>
                          <entry>
                            <para>
                              1
                              
                            </para>
                          </entry>
                          <entry>
                            <para>configFile</para>
                          </entry>
                          <entry>
                            <para>
                              String
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              optional - fully qualified location of the config file
                              
                              Default: /WEB-INF/picketlink-idfed.xml
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>
                              2
                              
                            </para>
                          </entry>
                          <entry>
                            <para>samlHandlerChainClass</para>
                          </entry>
                          <entry>
                            <para>
                              String
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              optional - fqn of a custom SAMLHandlerChain implementation
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>
                              3
                              
                            </para>
                          </entry>
                          <entry>
                            <para>serviceURL</para>
                          </entry>
                          <entry>
                            <para>
                              String
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              optional - the service provider URL
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>
                              4
                              
                            </para>
                          </entry>
                          <entry>
                            <para>saveRestoreRequest</para>
                          </entry>
                          <entry>
                            <para>
                              boolean
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              should the authenticator save the original request and restore it after authentication
                              
                              Default: true
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>
                              5
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              configProvider
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              String
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              optional - a fqn of the SAMLConfigurationProvider implementation
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>
                              6
                              
                            </para>
                          </entry>
                          <entry>
                            <para>issuerID</para>
                          </entry>
                          <entry>
                            <para>
                              String
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              optional - customize the issuer id
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>
                              7
                              
                            </para>
                          </entry>
                          <entry>
                            <para>idpAddress</para>
                          </entry>
                          <entry>
                            <para>
                              String
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              optional - If the request.getRemoteAddr is not exactly the IDP address that you have keyed
                              
                              in your deployment descriptor for keystore alias, you can configure it explicitly
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                      </tbody>
                    </tgroup>
                  </informaltable>
                </section>
              </section>
            </section>
            <section id="sid-6815869">
              
              <title>SPPostFormAuthenticator</title>
              <warning>
                <para>
                  As of PicketLink v2.1,  the
                  <xref linkend="sid-24674925"/>
                  is the preferred Service Provider configuration to the
                  <emphasis role="strong">deprecated</emphasis>
                  <xref linkend="sid-6815869"/>
                  ,
                  <xref linkend="sid-6815876"/>
                  ,
                  <xref linkend="sid-6815879"/>
                  and
                  <xref linkend="sid-6815889"/>
                  .
                </para>
              </warning>
              <para>SPPostFormAuthenticator is the main authenticator used to configure a service provider (SP) application for SAMLv2.0</para>
              <section id="sid-6815869_SPPostFormAuthenticator-Binding">
                
                <title>Binding</title>
                <para>SAMLv2 HTTP/Post Binding</para>
              </section>
              <section id="sid-6815869_SPPostFormAuthenticator-Configuration">
                
                <title>Configuration</title>
                <section id="sid-6815869_SPPostFormAuthenticator-JBossApplicationServerv5.x%2F6">
                  
                  <title>JBoss Application Server v5.x/6</title>
                  <para>Configure in WEB-INF/context.xml</para>
                </section>
                <section id="sid-6815869_SPPostFormAuthenticator-ApacheTomcatv5.5%2F6.x">
                  
                  <title>Apache Tomcat v5.5/6.x</title>
                  <para>Configure in META-INF/context.xml</para>
                </section>
                <section id="sid-6815869_SPPostFormAuthenticator-">
                  
                  <title/>
                </section>
                <section id="sid-6815869_SPPostFormAuthenticator-Example%3A">
                  
                  <title>Example:</title>
                  <example>
                    <title>context.xml</title>
                    <programlisting>&lt;Context&gt;
  &lt;Valve className="org.picketlink.identity.federation.bindings.tomcat.sp.SPPostFormAuthenticator"
  /&gt;
&lt;/Context&gt;
</programlisting>
                  </example>
                </section>
                <section id="sid-6815869_SPPostFormAuthenticator-Attributes">
                  
                  <title>Attributes</title>
                  <informaltable>
                    <tgroup cols="5">
                      <colspec colnum="1" colname="col1" colwidth="0.25*"/>
                      <colspec colnum="2" colname="col2" colwidth="2.5*"/>
                      <colspec colnum="3" colname="col3" colwidth="0.5**"/>
                      <colspec colnum="4" colname="col4" colwidth="3*"/>
                      <colspec colnum="5" colname="col5" colwidth="1*"/>
                      <thead>
                        <row>
                          <entry>
                            <para>
                              #
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              Name
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              Type
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              Objective
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              Since
                              
                            </para>
                          </entry>
                        </row>
                      </thead>
                      <tbody>
                        <row>
                          <entry>
                            <para>
                              1
                              
                            </para>
                          </entry>
                          <entry>
                            <para>configFile</para>
                          </entry>
                          <entry>
                            <para>
                              String
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              optional - fully qualified location of the config file
                              
                              Default: /WEB-INF/picketlink-idfed.xml
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>
                              2
                              
                            </para>
                          </entry>
                          <entry>
                            <para>samlHandlerChainClass</para>
                          </entry>
                          <entry>
                            <para>
                              String
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              optional - fqn of a custom SAMLHandlerChain implementation
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>
                              3
                              
                            </para>
                          </entry>
                          <entry>
                            <para>serviceURL</para>
                          </entry>
                          <entry>
                            <para>
                              String
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              optional - the service provider URL
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>
                              4
                              
                            </para>
                          </entry>
                          <entry>
                            <para>saveRestoreRequest</para>
                          </entry>
                          <entry>
                            <para>
                              boolean
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              should the authenticator save the original request and restore it after authentication
                              
                              Default: true
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>
                              5
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              configProvider
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              String
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              optional - a fqn of the SAMLConfigurationProvider implementation
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>
                              6
                              
                            </para>
                          </entry>
                          <entry>
                            <para>issuerID</para>
                          </entry>
                          <entry>
                            <para>
                              String
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              optional - customize the issuer id
                              
                            </para>
                          </entry>
                          <entry>
                            <para>
                              2.0
                              
                            </para>
                          </entry>
                        </row>
                        <row>
                          <entry>
                            <para>Â </para>
                          </entry>
                          <entry>
                            <para>Â </para>
                          </entry>
                          <entry>
                            <para>Â </para>
                          </entry>
                          <entry>
                            <para>Â </para>
                          </entry>
                          <entry>
                            <para>Â </para>
                          </entry>
                        </row>
                      </tbody>
                    </tgroup>
                  </informaltable>
                </section>
              </section>
            </section>
          </section>
          <section id="sid-24838655">
            
            <title>Service Provider Security Domain</title>
            
            <section id="sid-24838655_ServiceProviderSecurityDomain-Configuringasecuritydomain">
              
              <title>Configuring a security domain</title>
              <para>
                In order to handle the SAML assertions returned by the Identity Provider, the Service Provider needs to be configured with the properly security domain configuration. This is done by defining a
                <emphasis role="strong">&lt;security-domain&gt;</emphasis>
                element in jboss-web.xml.
              </para>
              <informalexample>
                <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;jboss-web&gt;   Â 
    &lt;security-domain&gt;sp&lt;/security-domain&gt;
    &lt;valve&gt;
Â  Â  Â  Â  &lt;class-name&gt;org.picketlink.identity.federation.bindings.tomcat.sp.ServiceProviderAuthenticator&lt;/class-name&gt;
Â  Â  &lt;/valve&gt;
&lt;/jboss-web&gt;</programlisting>
              </informalexample>
              <para>In order to use the security domain above, you need to configure it in your server. For JBoss AS7 you just need to add the following configuration to standalone.xml:</para>
              <informalexample>
                <programlisting>&lt;subsystem xmlns="urn:jboss:domain:security:1.1"&gt;
    &lt;security-domains&gt;
        &lt;security-domain name="sp" cache-type="default"&gt;
            &lt;authentication&gt;
                &lt;login-module code="org.picketlink.identity.federation.bindings.jboss.auth.SAML2LoginModule" flag="required"/&gt;
            &lt;/authentication&gt;
    &lt;/security-domain&gt;

    ...

&lt;/subsystem&gt;</programlisting>
              </informalexample>
            </section>
          </section>
        </section>
        <section id="sid-6815858">
          
          <title>SAML Authenticators (Tomcat,JBossAS)</title>
          <section id="sid-6815858_SAMLAuthenticators%28Tomcat%2CJBossAS%29-Introduction">
            
            <title>Introduction</title>
            <para>The PicketLink Identity Provider Authenticator is a component responsible for the authentication of users and for issue and validate SAML assertions.</para>
            <para>Basically, there two different different authenticator implementations type:</para>
            <itemizedlist>
              <listitem>
                <para>Identity Provider Authenticators</para>
              </listitem>
              <listitem>
                <para>Service Provider Authenticators</para>
              </listitem>
            </itemizedlist>
            <para>
              <figure>
<title>TODO InformalFigure image title empty</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="diagrams/federation/sso.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
            </para>
          </section>
          <section id="sid-6815858_SAMLAuthenticators%28Tomcat%2CJBossAS%29-TomcatAuthenticatorsforuseinApacheTomcatandJBossApplicationServer">
            
            <title>Tomcat Authenticators for use in Apache Tomcat and JBoss Application Server</title>
            <para>PicketLink includes a number of Authenticators for providing SAML support on Apache Tomcat and JBoss Application Server.</para>
            <section id="sid-6815858_SAMLAuthenticators%28Tomcat%2CJBossAS%29-Authenticators%2FValvesforIdentityProvider%28IDP%29">
              
              <title>Authenticators/Valves for Identity Provider (IDP)</title>
              <orderedlist>
                <listitem>
                  <para>
                    <xref linkend="sid-6815860"/>
                  </para>
                </listitem>
              </orderedlist>
            </section>
            <section id="sid-6815858_SAMLAuthenticators%28Tomcat%2CJBossAS%29-Authenticators%2FValvesforServiceProvider%28SP%29">
              
              <title>Authenticators/Valves for Service Provider (SP)</title>
              <orderedlist>
                <listitem>
                  <para>
                    <xref linkend="sid-24674925"/>
                  </para>
                </listitem>
              </orderedlist>
              <section id="sid-6815858_SAMLAuthenticators%28Tomcat%2CJBossAS%29-Deprecated%28asofPicketLinkv2.1%29">
                
                <title>Deprecated (as of PicketLink v2.1)</title>
                <orderedlist>
                  <listitem>
                    <para>
                      <xref linkend="sid-6815869"/>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <xref linkend="sid-6815876"/>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <xref linkend="sid-6815879"/>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <xref linkend="sid-6815889"/>
                    </para>
                  </listitem>
                </orderedlist>
              </section>
            </section>
          </section>
          <section id="sid-6815858_SAMLAuthenticators%28Tomcat%2CJBossAS%29-">
            
            <title/>
          </section>
          <section id="sid-6815858_SAMLAuthenticators%28Tomcat%2CJBossAS%29-UsefulInformation">
            
            <title>Useful Information</title>
            <itemizedlist>
              <listitem>
                <para>
                  <ulink url="http://wiki.apache.org/tomcat/FAQ/CharacterEncoding">Tomcat Character Encoding (UTF-8 etc)</ulink>
                </para>
              </listitem>
            </itemizedlist>
          </section>
        </section>
        <section id="sid-24838626">
          
          <title>Digital Signatures in SAML Assertions</title>
          <section id="sid-24838626_DigitalSignaturesinSAMLAssertions-ConfiguringtheKeyProvider">
            
            <title>Configuring the KeyProvider</title>
            <para>To support digital signatures of SAML assertions you should define a KeyProvider element inside a PicketLinkIDP or PicketLinkSP.</para>
            <important>
              <para>When using digital signatures you need to configure and enable it in both Identity Provider and Service Providers. Otherwise the SAML assertions would probably be considered as invalid.</para>
            </important>
            <informalexample>
              <programlisting>&lt;KeyProvider ClassName="org.picketlink.identity.federation.core.impl.KeyStoreKeyManager"&gt;
    &lt;Auth Key="KeyStoreURL" Value="/jbid_test_keystore.jks" /&gt;
    &lt;Auth Key="KeyStorePass" Value="store123" /&gt;
    &lt;Auth Key="SigningKeyPass" Value="test123" /&gt;
    &lt;Auth Key="SigningKeyAlias" Value="servercert" /&gt;

   Â &lt;ValidatingAlias Key="idp.example.com" Value="servercert" /&gt;
    &lt;ValidatingAlias Key="localhost" Value="servercert" /&gt;
&lt;/KeyProvider&gt;</programlisting>
            </informalexample>
            <para>In order to configure the KeyProvider, you need to specify some configurations about the Java KeyStore that should be used to sign SAML assertions:</para>
            <informaltable>
              <tgroup cols="2">
                <thead>
                  <row>
                    <entry>
                      <para>Auth Key</para>
                    </entry>
                    <entry>
                      <para>Description</para>
                    </entry>
                  </row>
                </thead>
                <tbody>
                  <row>
                    <entry>
                      <para>
                        KeyStoreURL
                        
                      </para>
                    </entry>
                    <entry>
                      <para>
                        Where the value of the
                        <emphasis role="strong">Value</emphasis>
                        attribute points to the location of a Java KeyStore with the properly installed certificates.
                        
                      </para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        KeyStorePass
                        
                      </para>
                    </entry>
                    <entry>
                      <para>
                        Where the value of the
                        <emphasis role="strong">Value</emphasis>
                        attribute refers to the password of the referenced Java KeyStore.
                        
                      </para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        SigningKeyAlias
                        
                      </para>
                    </entry>
                    <entry>
                      <para>
                        Where the value of the
                        <emphasis role="strong">Value</emphasis>
                        attribute refers to the password of the installed certificate to be used to sign the SAML assertions.
                        
                      </para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        SigningKeyPass
                        
                      </para>
                    </entry>
                    <entry>
                      <para>
                        Where the value of the
                        <emphasis role="strong">Value</emphasis>
                        attribute refers to the alias of the certificate to be used to sign the SAML assertions.
                      </para>
                    </entry>
                  </row>
                </tbody>
              </tgroup>
            </informaltable>
            <para>
              The Service Provider also needs to know how to verify the signatures for the SAML assertions. This is done by the
              <emphasis role="strong">ValidationAlias</emphasis>
              elements.
            </para>
            <informalexample>
              <programlisting>&lt;ValidatingAlias Key="idp.example.com" Value="servercert" /&gt;</programlisting>
            </informalexample>
            <tip>
              <para>
                Note that we declare the validating certificate for each domain using the
                <emphasis role="italics">ValidatingAlias</emphasis>
                .
              </para>
              <para>At the IDP side you need an entry for each server/domain name defined as a trusted domain (Trust/Domains elements).</para>
              <para>At the SP side you need an entry for the  the server/domain name where the IDP is deployed.</para>
            </tip>
          </section>
          <section id="sid-24838626_DigitalSignaturesinSAMLAssertions-SImpleExampleScenario">
            
            <title>SImple Example Scenario</title>
            <section id="sid-24838626_DigitalSignaturesinSAMLAssertions-HowSAMLassertionsaresigned%3F">
              
              <title>How SAML assertions are signed ?</title>
              <para>
                When digital signatures are enable, the authenticator will look at the
                <emphasis role="strong">SigningKeyAlias</emphasis>
                for the alias that should me used to look for a private key configured in the Java KeyStore. This private key will be used to sign the SAML assertion.
              </para>
            </section>
            <section id="sid-24838626_DigitalSignaturesinSAMLAssertions-Howsignaturesarevalidated%3F">
              
              <title>How signatures are validated ?</title>
              <para>
                When digital signatures are enabled, the authenticator will look at the ValidatingAlias table for a entry that matches the value of the
                <emphasis role="strong">Key</emphasis>
                attribute with the host name of the Issuer of the SAML assertion. For example, consider the following SAML Assertion issued by an Identity Provider located at
                <ulink url="http://idp.example.com:"/>
                
              </para>
              <informalexample>
                <programlisting>&lt;saml2:Assertion xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion"
    ID="ID_ab0392ef-b557-4453-95a8-a7e168da8ac5" IssueInstant="2010-09-30T19:13:37.869Z"
    Version="2.0"&gt;
    &lt;saml2:Issuer&gt;http://idp.example.com &lt;/saml2:Issuer&gt;
    &lt;saml2:Subject&gt;
   Â     &lt;saml2:NameID NameQualifier="urn:picketlink:identity-federation"&gt;jduke&lt;/saml2:NameID&gt;
   Â     &lt;saml2:SubjectConfirmation Method="urn:oasis:names:tc:SAML:2.0:cm:bearer" /&gt;
    &lt;/saml2:Subject&gt;
Â    &lt;saml2:Conditions NotBefore="2010-09-30T19:13:37.869Z"
Â    Â     NotOnOrAfter="2010-09-30T21:13:37.869Z" /&gt;
Â    &lt;ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#"&gt;
   Â     &lt;ds:SignedInfo&gt;
   Â    Â     &lt;ds:CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#WithComments" /&gt;
   Â    Â    Â &lt;ds:SignatureMethod Algorithm="http://www.w3.org/2000/09/xmlds#rsa-sha1" /&gt;
   Â    Â    Â &lt;ds:Reference URI="#ID_ab0392ef-b557-4453-95a8-a7e168da8ac5"&gt;
   Â    Â    Â     &lt;ds:Transforms&gt;
   Â    Â    Â    Â     &lt;ds:Transform Algorithm="http://www.w3.org/2000/09/xmlds#enveloped-signature" /&gt;
   Â    Â    Â    Â     &lt;ds:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#" /&gt;
   Â    Â    Â     &lt;/ds:Transforms&gt;
   Â    Â    Â     &lt;ds:DigestMethod Algorithm="http://www.w3.org/2000/09/xmlds#sha1" /&gt;
   Â    Â    Â     &lt;ds:DigestValue&gt;0Y9QM5c5qCShz5UWmbFzBmbuTus=&lt;/ds:DigestValue&gt;
Â    Â    Â    &lt;/ds:Reference&gt;
   Â     &lt;/ds:SignedInfo&gt;
Â        &lt;ds:SignatureValue&gt;
   Â    Â     se/flQ2htUQ0IUYieVkXNn9cfjnfgv6H99nFarsTNTpRI9xuSlw5OTai/2PYdZI2Va9+QzzBf99m
Â    Â   Â     VFyigfFdfrqug6aKFhF0lsujzlFfPfmXBbDRiTFX+4SkBeV71uuy7rOUI/jRiitEA0QrKqs0e/pV
   Â    Â     \+C8PoaariisK96Mtt7A=
   Â     &lt;/ds:SignatureValue&gt;
   Â     &lt;ds:KeyInfo&gt;
   Â    Â     &lt;ds:KeyValue&gt;
   Â    Â    Â     &lt;ds:RSAKeyValue&gt;
   Â    Â    Â    Â     &lt;ds:Modulus&gt;
   Â    Â    Â    Â    Â     suGIyhVTbFvDwZdx8Av62zmP+aGOlsBN8WUE3eEEcDtOIZgO78SImMQGwB2C0eIVMhiLRzVPqoW1
   Â    Â    Â    Â    Â     dCPAveTm653zHOmubaps1fY0lLJDSZbTbhjeYhoQmmaBro/tDpVw5lKJwspqVnMuRK19ju2dxpKw
   Â    Â    Â    Â    Â     lYGGtrP5VQv00dfNPbs=
   Â    Â    Â    Â     &lt;/ds:Modulus&gt;
   Â    Â    Â    Â     &lt;ds:Exponent&gt;AQAB&lt;/ds:Exponent&gt;
   Â    Â    Â     &lt;/ds:RSAKeyValue&gt;
   Â    Â     &lt;/ds:KeyValue&gt;
   Â     &lt;/ds:KeyInfo&gt;
    &lt;/ds:Signature&gt;
&lt;/saml2:Assertion&gt;</programlisting>
              </informalexample>
              <para>
                During the signature validation for this SAML assertion, the authenticator (in this case a Service Provider Authenticator) will try to find a
                <emphasis role="strong">ValidationAlias</emphasis>
                element with the value
                <emphasis role="strong">idp.example.com</emphasis>
                for its
                <emphasis role="strong">Key</emphasis>
                attribute. This alias references a certificate in your Java KeyStore that will be used to check the signature validity.
              </para>
              <para>Usually, Java KeyStores would contain a key pair (public and private keys) to be used for signing and validating messages for an specific server and the trusted public keys to be used to validate messages received from others servers.</para>
            </section>
          </section>
        </section>
        <section id="sid-6815920">
          
          <title>SAML2 Handlers</title>
          <section id="sid-6815920_SAML2Handlers-Introduction">
            
            <title>Introduction</title>
            <para>
              When using PicketLink SAML Support, both IDP and SP need to be configured with
              <emphasis role="italics">Handlers</emphasis>
              . This handlers help the IDP and SP Authenticators to process SAML requests and responses.
            </para>
            <para>The handlers are basically an implementation of the Chain of Responsibility pattern (Gof). Each handler provides a specific logic about how to process SAML requests and responses.</para>
          </section>
          <section id="sid-6815920_SAML2Handlers-ConfiguringHandlers">
            
            <title>Configuring Handlers</title>
            <para>The handlers are configures inside the picketlink.xml file. Here is how it looks like:</para>
            <informalexample>
              <programlisting>&lt;Handlers xmlns="urn:picketlink:identity-federation:handler:config:2.1"&gt;
    &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2IssuerTrustHandler" /&gt;
    &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2LogOutHandler" /&gt;
    &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2AuthenticationHandler" /&gt;
    &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.RolesGenerationHandler" /&gt;
&lt;/Handlers&gt;</programlisting>
            </informalexample>
            <section id="sid-6815920_SAML2Handlers-HandlersElement">
              
              <title>Handlers Element</title>
              <para>This element defines a list of Handler elements.</para>
              <informaltable>
                <tgroup cols="3">
                  <thead>
                    <row>
                      <entry>
                        <para>Name</para>
                      </entry>
                      <entry>
                        <para>Description</para>
                      </entry>
                      <entry>
                        <para>Value</para>
                      </entry>
                    </row>
                  </thead>
                  <tbody>
                    <row>
                      <entry>
                        <para>
                          ChainClass
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Defines the name of a class that implements the
                          <emphasis role="italics">org.picketlink.
                            identity.federation.
                            core.saml.
                            v2.interfaces.
                            SAML2HandlerChain</emphasis>
                          interface.
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Defaults to
                          <emphasis role="strong">org.picketlink.
                            identity.federation.
                            core.saml.
                            v2.impl.
                            DefaultSAML2HandlerChain.</emphasis>
                        </para>
                      </entry>
                    </row>
                  </tbody>
                </tgroup>
              </informaltable>
            </section>
            <section id="sid-6815920_SAML2Handlers-HandlerElement">
              
              <title>Handler Element</title>
              <para>This element defines a specific Handler.</para>
              <informaltable>
                <tgroup cols="2">
                  <thead>
                    <row>
                      <entry>
                        <para>Name</para>
                      </entry>
                      <entry>
                        <para>Description</para>
                      </entry>
                    </row>
                  </thead>
                  <tbody>
                    <row>
                      <entry>
                        <para>class</para>
                      </entry>
                      <entry>
                        <para>
                          Defines the name of a class that implements the org.picketlink.
                          identity.federation.
                          core.saml.
                          v2.interfaces.
                          SAML2Handler interface.
                          
                        </para>
                      </entry>
                    </row>
                  </tbody>
                </tgroup>
              </informaltable>
            </section>
          </section>
          <section id="sid-6815920_SAML2Handlers-CustomHandlers">
            
            <title>Custom Handlers</title>
            <para>
              PicketLink provide ways to you create your own handlers. Just create a class that implements the
              <emphasis role="italics">org.picketlink.identity.federation.core.saml.v2.interfaces.SAML2Handler interface.</emphasis>
            </para>
            <para>Before create your own implementations, please take a look at the built-in handlers. They can help you a lot.</para>
          </section>
          <section id="sid-6815920_SAML2Handlers-BuiltinHandlers">
            
            <title>Built-in Handlers</title>
            <para>PicketLink as part of the SAMLv2 support has a number of handlers that need to be configured.</para>
            <para>The Handlers are:</para>
            <orderedlist>
              <listitem>
                <para>
                  <xref linkend="sid-6815922"/>
                </para>
              </listitem>
              <listitem>
                <para>
                  <xref linkend="sid-6815929"/>
                </para>
              </listitem>
              <listitem>
                <para>
                  <xref linkend="sid-6815934"/>
                </para>
              </listitem>
              <listitem>
                <para>
                  <xref linkend="sid-6815937"/>
                </para>
              </listitem>
              <listitem>
                <para>
                  <link linkend="sid-6815940">SAML2LogOutHandler</link>
                </para>
              </listitem>
            </orderedlist>
          </section>
          <section id="sid-6815934">
            
            <title>RolesGenerationHandler</title>
            <section id="sid-6815934_RolesGenerationHandler-Objective">
              
              <title>Objective</title>
              <para>Handler dealing with attributes for SAML2</para>
            </section>
            <section id="sid-6815934_RolesGenerationHandler-FullyQualifiedName">
              
              <title>Fully Qualified Name</title>
              <para>org.picketlink.identity.federation.web.handlers.saml2.RolesGenerationHandler</para>
            </section>
            <section id="sid-6815934_RolesGenerationHandler-Configuration">
              
              <title>Configuration</title>
              <para>Should be configured in WEB-INF/picketlink-handlers.xml</para>
              <section id="sid-6815934_RolesGenerationHandler-Example%3A">
                
                <title>Example:</title>
                <example>
                  <title>WEB-INF/picketlink-handlers.xml</title>
                  <programlisting>&lt;Handlers xmlns="urn:picketlink:identity-federation:handler:config:1.0"&gt;
  &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2IssuerTrustHandler"/&gt;
  &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2LogOutHandler"/&gt;
  &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2AuthenticationHandler"/&gt;
  &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.RolesGenerationHandler"/&gt;
&lt;/Handlers&gt;</programlisting>
                </example>
              </section>
            </section>
            <section id="sid-6815934_RolesGenerationHandler-ConfigurationParameters">
              
              <title>Configuration Parameters</title>
              <informaltable>
                <tgroup cols="7">
                  <thead>
                    <row>
                      <entry>
                        <para>
                          #
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Name
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Type
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Objective
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Default Value
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          SP/IDP
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Since Version
                          
                        </para>
                      </entry>
                    </row>
                  </thead>
                  <tbody>
                    <row>
                      <entry>
                        <para>
                          1
                          
                        </para>
                      </entry>
                      <entry>
                        <para>ATTRIBUTE_
                          MANAGER</para>
                      </entry>
                      <entry>
                        <para>
                          string
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          fqn of attribute manager class
                          
                        </para>
                      </entry>
                      <entry>
                        <para>org.picketlink.
                          identity.federation.
                          core.impl.
                          EmptyAttributeManager</para>
                      </entry>
                      <entry>
                        <para>
                          IDP
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          2.0
                          
                        </para>
                      </entry>
                    </row>
                  </tbody>
                </tgroup>
              </informaltable>
              <section id="sid-6815934_RolesGenerationHandler-Example%3Ax">
                
                <title>Example:</title>
                <example>
                  <title>WEB-INF/picketlink-handlers.xml</title>
                  <programlisting>&lt;Handler class="org.picketlink.
                    identity.federation.
                    web.handlers.
                    saml2.RolesGenerationHandler"&gt;
&lt;Option Key="ATTRIBUTE_MANAGER" Value="org.some.fun.class"/&gt;
&lt;/Handler&gt; </programlisting>
                </example>
              </section>
            </section>
          </section>
          <section id="sid-6815929">
            
            <title>SAML2AttributeHandler</title>
            <section id="sid-6815929_SAML2AttributeHandler-Objective">
              
              <title>Objective</title>
              <para>Handler dealing with attributes for SAML2. On the SP side, it converts IDP-returned Attributes and stores them under the user's HttpSession. On the IDP side, converts the given HttpSession attributes into SAML Response Attributes. SP-side code can retrieve the Attributes from a Map stored under the session key GeneralConstants.SESSION_ATTRIBUTE_MAP.</para>
            </section>
            <section id="sid-6815929_SAML2AttributeHandler-FullyQualifiedName">
              
              <title>Fully Qualified Name</title>
              <para>org.picketlink.identity.federation.web.handlers.saml2.SAML2AttributeHandler</para>
            </section>
            <section id="sid-6815929_SAML2AttributeHandler-Configuration">
              
              <title>Configuration</title>
              <para>Should be configured in WEB-INF/picketlink-handlers.xml</para>
              <section id="sid-6815929_SAML2AttributeHandler-Example%3A">
                
                <title>Example:</title>
                <example>
                  <title>WEB-INF/picketlink-handlers.xml</title>
                  <programlisting>&lt;Handlers xmlns="urn:picketlink:identity-federation:handler:config:1.0"&gt;
  &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2IssuerTrustHandler"/&gt;
  &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2LogOutHandler"/&gt;
  &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2AuthenticationHandler"/&gt;
  &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.RolesGenerationHandler"/&gt;
&lt;/Handlers&gt;</programlisting>
                </example>
              </section>
            </section>
            <section id="sid-6815929_SAML2AttributeHandler-ConfigurationParameters">
              
              <title>Configuration Parameters</title>
              <informaltable>
                <tgroup cols="7">
                  <thead>
                    <row>
                      <entry>
                        <para>
                          #
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Name
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Type
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Objective
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Default Value
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          SP/IDP
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Since Version
                          
                        </para>
                      </entry>
                    </row>
                  </thead>
                  <tbody>
                    <row>
                      <entry>
                        <para>
                          1
                          
                        </para>
                      </entry>
                      <entry>
                        <para>ATTRIBUTE_
                          MANAGER</para>
                      </entry>
                      <entry>
                        <para>
                          string
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          fqn of attribute manager class
                          
                        </para>
                      </entry>
                      <entry>
                        <para>org.picketlink.
                          identity.federation.
                          core.impl.
                          EmptyAttributeManager</para>
                      </entry>
                      <entry>
                        <para>
                          IDP
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          2.0
                          
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          2
                          
                        </para>
                      </entry>
                      <entry>
                        <para>ATTRIBUTE_
                          KEYS</para>
                      </entry>
                      <entry>
                        <para>
                          String
                          
                        </para>
                      </entry>
                      <entry>
                        <para>a comma separated list of string values representing attributes to be sent</para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>
                          IDP
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          2.0
                          
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          3
                          
                        </para>
                      </entry>
                      <entry>
                        <para>ATTRIBUTE_
                          CHOOSE_
                          FRIENDLY_
                          NAME</para>
                      </entry>
                      <entry>
                        <para>
                          boolean
                          
                        </para>
                      </entry>
                      <entry>
                        <para>set to true if you require attributes to be keyed by friendly name rather than default name.</para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>
                          SP
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          2.0
                          
                        </para>
                      </entry>
                    </row>
                  </tbody>
                </tgroup>
              </informaltable>
              <section id="sid-6815929_SAML2AttributeHandler-Example%3Ax">
                
                <title>Example:</title>
                <example>
                  <title>WEB-INF/picketlink-handlers.xml</title>
                  <programlisting>&lt;Handler class="org.picketlink.
                    identity.federation.
                    web.handlers.
                    saml2.SAML2AttributeHandler"&gt;
&lt;Option Key="ATTRIBUTE_CHOOSE_FRIENDLY_NAME" Value="true"/&gt;
&lt;/Handler&gt;</programlisting>
                </example>
              </section>
              <section id="sid-6815929_SAML2AttributeHandler-">
                
                <title/>
              </section>
              <section id="sid-6815929_SAML2AttributeHandler-Example%3Axx">
                
                <title>Example:</title>
              </section>
              <section id="sid-6815929_SAML2AttributeHandler-x">
                
                <title/>
                <para>
                  Map&lt;String, List&lt;Object&gt;&gt; sessionMap = (Map&lt;String,  List&lt;Object&gt;&gt;) session       .getAttribute(GeneralConstants.SESSION_ATTRIBUTE_MAP);
                  
                  assertNotNull(sessionMap);
                </para>
                <para>
                  List&lt;Object&gt; values = sessionMap.get("testKey");
                  
                  assertEquals("hello", values.get(0));
                </para>
              </section>
              <section id="sid-6815929_SAML2AttributeHandler-xx">
                
                <title/>
              </section>
              <section id="sid-6815929_SAML2AttributeHandler-AdditionalReferences">
                
                <title>Additional References</title>
                <itemizedlist>
                  <listitem>
                    <para>
                      <ulink url="https://community.jboss.org/wiki/PicketLinkIDPUsingLDAPAttributes">PicketLink IDP using LDAP Attributes</ulink>
                    </para>
                  </listitem>
                </itemizedlist>
              </section>
            </section>
          </section>
          <section id="sid-6815922">
            
            <title>SAML2AuthenticationHandler</title>
            <section id="sid-6815922_SAML2AuthenticationHandler-Objective">
              
              <title>Objective</title>
              <para>Handler handles the SAML request at the IDP and the SAML response at the SP.</para>
            </section>
            <section id="sid-6815922_SAML2AuthenticationHandler-FullyQualifiedName">
              
              <title>Fully Qualified Name</title>
              <para>org.picketlink.identity.federation.web.handlers.saml2.SAML2AuthenticationHandler</para>
            </section>
            <section id="sid-6815922_SAML2AuthenticationHandler-Configuration">
              
              <title>Configuration</title>
              <para>Should be configured in WEB-INF/picketlink-handlers.xml</para>
              <section id="sid-6815922_SAML2AuthenticationHandler-Example%3A">
                
                <title>Example:</title>
                <example>
                  <title>WEB-INF/picketlink-handlers.xml</title>
                  <programlisting>&lt;Handlers xmlns="urn:picketlink:identity-federation:handler:config:1.0"&gt;
  &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2IssuerTrustHandler"/&gt;
  &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2LogOutHandler"/&gt;
  &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2AuthenticationHandler"/&gt;
  &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.RolesGenerationHandler"/&gt;
&lt;/Handlers&gt;</programlisting>
                </example>
              </section>
            </section>
            <section id="sid-6815922_SAML2AuthenticationHandler-ConfigurationParameters">
              
              <title>Configuration Parameters</title>
              <informaltable>
                <tgroup cols="6">
                  <thead>
                    <row>
                      <entry>
                        <para>
                          #
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Name
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Type
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Objective
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          SP/IDP
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Since Version
                          
                        </para>
                      </entry>
                    </row>
                  </thead>
                  <tbody>
                    <row>
                      <entry>
                        <para>
                          1
                          
                        </para>
                      </entry>
                      <entry>
                        <para>CLOCK_
                          SKEW_
                          MILIS</para>
                      </entry>
                      <entry>
                        <para>
                          string
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          a long value in miliseconds to add a clock skew to assertion expiration validation at the Service provider
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          SP
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          2.0
                          
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          2
                          
                        </para>
                      </entry>
                      <entry>
                        <para>DISABLE_
                          AUTHN_
                          STATEMENT</para>
                      </entry>
                      <entry>
                        <para>
                          boolean
                          
                        </para>
                      </entry>
                      <entry>
                        <para>Setting a value will disable the generation of an AuthnStatement</para>
                      </entry>
                      <entry>
                        <para>
                          IDP
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          2.0
                          
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          3
                          
                        </para>
                      </entry>
                      <entry>
                        <para>DISABLE_
                          SENDING_
                          ROLES</para>
                      </entry>
                      <entry>
                        <para>
                          boolean
                          
                        </para>
                      </entry>
                      <entry>
                        <para>Setting any value will disable the generation and return of roles to SP</para>
                      </entry>
                      <entry>
                        <para>
                          IDP
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          2.0
                          
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          4
                          
                        </para>
                      </entry>
                      <entry>
                        <para>DISABLE_
                          ROLE_
                          PICKING</para>
                      </entry>
                      <entry>
                        <para>
                          boolean
                          
                        </para>
                      </entry>
                      <entry>
                        <para>Setting to true will disable picking IDP attribute statements</para>
                      </entry>
                      <entry>
                        <para>
                          SP
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          2.0
                          
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          5
                          
                        </para>
                      </entry>
                      <entry>
                        <para>ROLE_
                          KEY</para>
                      </entry>
                      <entry>
                        <para>
                          String
                          
                        </para>
                      </entry>
                      <entry>
                        <para>a csv list of strings that represent the roles coming from IDP</para>
                      </entry>
                      <entry>
                        <para>
                          SP
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          2.0
                          
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          6
                          
                        </para>
                      </entry>
                      <entry>
                        <para>ASSERTION_
                          CONSUMER_
                          URL</para>
                      </entry>
                      <entry>
                        <para>
                          String
                          
                        </para>
                      </entry>
                      <entry>
                        <para>the url to be used for assertionConsumerURL</para>
                      </entry>
                      <entry>
                        <para>
                          SP
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          2.0
                          
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          7
                          
                        </para>
                      </entry>
                      <entry>
                        <para>NAMEID_
                          FORMAT</para>
                      </entry>
                      <entry>
                        <para>
                          String
                          
                        </para>
                      </entry>
                      <entry>
                        <para>Setting to a value will provide the nameid format to be sent to IDP</para>
                      </entry>
                      <entry>
                        <para>
                          SP
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          2.0
                          
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>8</para>
                      </entry>
                      <entry>
                        <para>
                          ASSERTION_
                          SESSION_
                          ATTRIBUTE_
                          NAME
                          
                        </para>
                      </entry>
                      <entry>
                        <para>String</para>
                      </entry>
                      <entry>
                        <para>
                          Specifies the name of the session attribute where the assertion will be stored. The assertion is stored as a DOM Document.
                          
                          This option is useful when you need to obtain the user's assertion to propagate or validate it against the STS.
                        </para>
                      </entry>
                      <entry>
                        <para>SP</para>
                      </entry>
                      <entry>
                        <para>2.1.7</para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>9</para>
                      </entry>
                      <entry>
                        <para>
                          AUTHN_CONTEXT_CLASSES
                        </para>
                      </entry>
                      <entry>
                        <para>String</para>
                      </entry>
                      <entry>
                        <para>
                          Specifies a single or a comma separated list of SAML Authentication Classes to be used when creating an AuthnRequest. The value can be a full qualified name (FQN) or an alias. For each
                          standard class name there is an alias, as defined by the <code>org.picketlink.common.constants.SAMLAuthenticationContextClass</code>.
                        </para>
                      </entry>
                      <entry>
                        <para>SP</para>
                      </entry>
                      <entry>
                        <para>2.5.0</para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>9</para>
                      </entry>
                      <entry>
                        <para>
                          REQUESTED_AUTHN_CONTEXT_COMPARISON
                        </para>
                      </entry>
                      <entry>
                        <para>String</para>
                      </entry>
                      <entry>
                        <para>
                          Specifies the Comparison attribute of the RequestedAuthnContext. This option should be used in conjunction with the AUTHN_CONTEXT_CLASSES option.
                          Only the values defined by the specification are supported.
                        </para>
                      </entry>
                      <entry>
                        <para>SP</para>
                      </entry>
                      <entry>
                        <para>2.5.0</para>
                      </entry>
                    </row>
                  </tbody>
                </tgroup>
              </informaltable>
              <section id="sid-6815922_SAML2AuthenticationHandler-Example%3Ax">
                
                <title>Example:</title>
                <example>
                  <title>WEB-INF/picketlink-handlers.xml</title>
                  <programlisting>&lt;Handler class="org.picketlink.identity.
                    federation.web.
                    handlers.saml2.SAML2AuthenticationHandler"&gt;
&lt;Option Key="DISABLE_ROLE_PICKING" Value="true"/&gt;
&lt;/Handler&gt;</programlisting>
                </example>
              </section>
              <section id="sid-6815922_SAML2AuthenticationHandler-NAMEIDFORMAT%3A">
                
                <title>NAMEID_FORMAT:</title>
                <para>
                  The
                  <emphasis role="strong">transient</emphasis>
                  and
                  <emphasis role="strong">persistent nameid-formats</emphasis>
                  are used to obfuscate the actual identity in order to make linking activities extremely difficult between different SPs being served by the same IDP. A transient policy only lasts for the duration of the login session, where a persistent policy will reuse the obfuscated identity across multiple login sessions.
                </para>
                <para>The Value can either be one of the following "official" values or a vendor-specific value supported by the IDP. Any string value is passed through to the NameIDPolicy's Format attribute as-is in an AuthnRequest.</para>
                <para>
                  urn:oasis:names:tc:SAML:2.0:nameid-format:
                  <emphasis role="strong">transient</emphasis>
                  
                  urn:oasis:names:tc:SAML:2.0:nameid-format:
                  <emphasis role="strong">persistent</emphasis>
                  
                  urn:oasis:names:tc:SAML:1.1:nameid-format:
                  <emphasis role="strong">unspecified</emphasis>
                  
                  urn:oasis:names:tc:SAML:1.1:nameid-format:
                  <emphasis role="strong">emailAddress</emphasis>
                  
                  urn:oasis:names:tc:SAML:1.1:nameid-format:
                  <emphasis role="strong">X509SubjectName</emphasis>
                  
                  urn:oasis:names:tc:SAML:1.1:nameid-format:
                  <emphasis role="strong">WindowsDomainQualifiedName</emphasis>
                  
                  urn:oasis:names:tc:SAML:2.0:nameid-format:
                  <emphasis role="strong">kerberos</emphasis>
                  
                  urn:oasis:names:tc:SAML:2.0:nameid-format:
                  <emphasis role="strong">entity</emphasis>
                </para>
              </section>
            </section>
          </section>
          <section id="sid-50233628">
            
            <title>SAML2EncryptionHandler</title>
            <section id="sid-50233628_SAML2EncryptionHandler-Objective">
              
              <title>Objective</title>
              <para>
                Handles SAML Assertions Encryption and Signature Generation. This handler uses the configuration provided in the
                <link linkend="sid-24838626">KeyProvider</link>
                to encrypt and sign SAML Assertions.
              </para>
            </section>
            <section id="sid-50233628_SAML2EncryptionHandler-FullyQualifiedName">
              
              <title>Fully Qualified Name</title>
              <para>org.picketlink.identity.federation.web.handlers.saml2.SAML2EncryptionHandler</para>
            </section>
            <section id="sid-50233628_SAML2EncryptionHandler-Restrictions">
              
              <title>Restrictions</title>
              <itemizedlist>
                <listitem>
                  <para>This handler should be used only when configuring Identity Providers.</para>
                </listitem>
                <listitem>
                  <para>For Service Providers, the decryption of SAML Assertion is already done by the authenticators.</para>
                </listitem>
                <listitem>
                  <para>
                    When using this handler, make sure that your service providers are also configured with the
                    <xref linkend="sid-25657767"/>
                    and the
                    <xref linkend="sid-25657755"/>
                    handlers.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <emphasis role="italics">
                      Do not use this handler with the __
                      <xref linkend="sid-25657767"/>
                    </emphasis>
                    _ configured in the same chain. Otherwise SAML messages will be signed several times._
                  </para>
                </listitem>
              </itemizedlist>
            </section>
            <section id="sid-50233628_SAML2EncryptionHandler-Configuration">
              
              <title>Configuration</title>
              <para>Should be configured in WEB-INF/picketlink.xml:</para>
              <section id="sid-50233628_SAML2EncryptionHandler-Example%3A">
                
                <title>Example:</title>
              </section>
              <section id="sid-50233628_SAML2EncryptionHandler-">
                
                <title/>
                <informalexample>
                  <programlisting>&lt;Handlers xmlns="urn:picketlink:identity-federation:handler:config:2.1"&gt;
    &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2IssuerTrustHandler" /&gt;
    &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2LogOutHandler" /&gt;
    &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2AuthenticationHandler" /&gt;
    &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.RolesGenerationHandler" /&gt;
    &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2EncryptionHandler" /&gt;
    &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2SignatureValidationHandler"/&gt;
&lt;/Handlers&gt;</programlisting>
                </informalexample>
              </section>
            </section>
            <section id="sid-50233628_SAML2EncryptionHandler-ConfigurationParameters">
              
              <title>Configuration Parameters</title>
              <informaltable>
                <tgroup cols="7">
                  <tbody>
                    <row>
                      <entry>
                        <para>
                          #
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Name
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Type
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Objective
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Default Value
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          SP/IDP
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Since Version
                          
                        </para>
                      </entry>
                    </row>
                  </tbody>
                </tgroup>
              </informaltable>
              <section id="sid-50233628_SAML2EncryptionHandler-x">
                
                <title/>
              </section>
            </section>
          </section>
          <section id="sid-6815937">
            
            <title>SAML2IssuerTrustHandler</title>
            <section id="sid-6815937_SAML2IssuerTrustHandler-Objective">
              
              <title>Objective</title>
              <para>Handles Issuer trust.Trust decisions are based on the url of the issuer of the saml request/response sent to the handler chain.</para>
            </section>
            <section id="sid-6815937_SAML2IssuerTrustHandler-FullyQualifiedName">
              
              <title>Fully Qualified Name</title>
              <para>org.picketlink.identity.federation.web.handlers.saml2.SAML2IssuerTrustHandler</para>
            </section>
            <section id="sid-6815937_SAML2IssuerTrustHandler-Configuration">
              
              <title>Configuration</title>
              <para>Should be configured in WEB-INF/picketlink-handlers.xml</para>
              <section id="sid-6815937_SAML2IssuerTrustHandler-Example%3A">
                
                <title>Example:</title>
                <example>
                  <title>WEB-INF/picketlink-handlers.xml</title>
                  <programlisting>&lt;Handlers xmlns="urn:picketlink:identity-federation:handler:config:1.0"&gt;
  &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2IssuerTrustHandler"/&gt;
  &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2LogOutHandler"/&gt;
  &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2AuthenticationHandler"/&gt;
  &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.RolesGenerationHandler"/&gt;
&lt;/Handlers&gt;</programlisting>
                </example>
              </section>
            </section>
            <section id="sid-6815937_SAML2IssuerTrustHandler-ConfigurationParameters">
              
              <title>Configuration Parameters</title>
              <informaltable>
                <tgroup cols="7">
                  <tbody>
                    <row>
                      <entry>
                        <para>
                          #
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Name
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Type
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Objective
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Default Value
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          SP/IDP
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Since Version
                          
                        </para>
                      </entry>
                    </row>
                  </tbody>
                </tgroup>
              </informaltable>
              <section id="sid-6815937_SAML2IssuerTrustHandler-">
                
                <title/>
              </section>
            </section>
          </section>
          <section id="sid-6815940">
            
            <title>SAML2LogOutHandler.java</title>
            <section id="sid-6815940_SAML2LogOutHandler.java-Objective">
              
              <title>Objective</title>
              <para>Handler for SAML2 Logout Profile.</para>
            </section>
            <section id="sid-6815940_SAML2LogOutHandler.java-FullyQualifiedName">
              
              <title>Fully Qualified Name</title>
              <para>org.picketlink.identity.federation.web.handlers.saml2.SAML2LogOutHandler.java</para>
            </section>
            <section id="sid-6815940_SAML2LogOutHandler.java-Configuration">
              
              <title>Configuration</title>
              <para>Should be configured in WEB-INF/picketlink-handlers.xml</para>
              <section id="sid-6815940_SAML2LogOutHandler.java-Example%3A">
                
                <title>Example:</title>
                <example>
                  <title>WEB-INF/picketlink-handlers.xml</title>
                  <programlisting>&lt;Handlers xmlns="urn:picketlink:identity-federation:handler:config:1.0"&gt;
  &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2IssuerTrustHandler"/&gt;
  &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2LogOutHandler"/&gt;
  &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2AuthenticationHandler"/&gt;
  &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.RolesGenerationHandler"/&gt;
&lt;/Handlers&gt;</programlisting>
                </example>
              </section>
            </section>
            <section id="sid-6815940_SAML2LogOutHandler.java-ConfigurationParameters">
              
              <title>Configuration Parameters</title>
              <informaltable>
                <tgroup cols="7">
                  <tbody>
                    <row>
                      <entry>
                        <para>
                          #
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Name
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Type
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Objective
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Default Value
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          SP/IDP
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Since Version
                          
                        </para>
                      </entry>
                    </row>
                  </tbody>
                </tgroup>
              </informaltable>
              <section id="sid-6815940_SAML2LogOutHandler.java-">
                
                <title/>
              </section>
            </section>
          </section>
          <section id="sid-25657767">
            
            <title>SAML2SignatureGenerationHandler</title>
            <section id="sid-25657767_SAML2SignatureGenerationHandler-Objective">
              
              <title>Objective</title>
              <para>
                Handles SAML Signature Generation. This handler uses the configuration provided in the
                <link linkend="sid-24838626">KeyProvider</link>
                to sign SAML messages.
              </para>
            </section>
            <section id="sid-25657767_SAML2SignatureGenerationHandler-FullyQualifiedName">
              
              <title>Fully Qualified Name</title>
              <para>org.picketlink.identity.federation.web.handlers.saml2.SAML2SignatureGenerationHandler</para>
            </section>
            <section id="sid-25657767_SAML2SignatureGenerationHandler-Configuration">
              
              <title>Configuration</title>
              <para>Should be configured in WEB-INF/picketlink.xml.</para>
              <section id="sid-25657767_SAML2SignatureGenerationHandler-Example%3A">
                
                <title>Example:</title>
              </section>
              <section id="sid-25657767_SAML2SignatureGenerationHandler-">
                
                <title/>
                <informalexample>
                  <programlisting>&lt;Handlers xmlns="urn:picketlink:identity-federation:handler:config:2.1"&gt;
    &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2IssuerTrustHandler" /&gt;
    &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2LogOutHandler" /&gt;
    &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2AuthenticationHandler" /&gt;
    &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.RolesGenerationHandler" /&gt;
    &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2SignatureGenerationHandler" /&gt;
    &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2SignatureValidationHandler"/&gt;
&lt;/Handlers&gt;</programlisting>
                </informalexample>
              </section>
            </section>
            <section id="sid-25657767_SAML2SignatureGenerationHandler-ConfigurationParameters">
              
              <title>Configuration Parameters</title>
              <informaltable>
                <tgroup cols="7">
                  <tbody>
                    <row>
                      <entry>
                        <para>
                          #
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Name
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Type
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Objective
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Default Value
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          SP/IDP
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Since Version
                          
                        </para>
                      </entry>
                    </row>
                  </tbody>
                </tgroup>
              </informaltable>
              <section id="sid-25657767_SAML2SignatureGenerationHandler-x">
                
                <title/>
              </section>
            </section>
          </section>
          <section id="sid-25657755">
            
            <title>SAML2SignatureValidationHandler</title>
            <section id="sid-25657755_SAML2SignatureValidationHandler-Objective">
              
              <title>Objective</title>
              <para>
                Handles SAML Signature Validation. This handler uses the configuration provided in the
                <link linkend="sid-24838626">KeyProvider</link>
                to process signature validation.
              </para>
            </section>
            <section id="sid-25657755_SAML2SignatureValidationHandler-FullyQualifiedName">
              
              <title>Fully Qualified Name</title>
              <para>org.picketlink.identity.federation.web.handlers.saml2.SAML2SignatureValidationHandler</para>
            </section>
            <section id="sid-25657755_SAML2SignatureValidationHandler-Configuration">
              
              <title>Configuration</title>
              <para>Should be configured in WEB-INF/picketlink.xml.</para>
              <section id="sid-25657755_SAML2SignatureValidationHandler-Example%3A">
                
                <title>Example:</title>
              </section>
              <section id="sid-25657755_SAML2SignatureValidationHandler-">
                
                <title/>
                <informalexample>
                  <programlisting>&lt;Handlers xmlns="urn:picketlink:identity-federation:handler:config:2.1"&gt;
    &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2IssuerTrustHandler" /&gt;
    &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2LogOutHandler" /&gt;
    &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2AuthenticationHandler" /&gt;
    &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.RolesGenerationHandler" /&gt;
    &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2SignatureGenerationHandler" /&gt;
    &lt;Handler class="org.picketlink.identity.federation.web.handlers.saml2.SAML2SignatureValidationHandler"/&gt;
&lt;/Handlers&gt;</programlisting>
                </informalexample>
              </section>
            </section>
            <section id="sid-25657755_SAML2SignatureValidationHandler-ConfigurationParameters">
              
              <title>Configuration Parameters</title>
              <informaltable>
                <tgroup cols="7">
                  <tbody>
                    <row>
                      <entry>
                        <para>
                          #
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Name
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Type
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Objective
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Default Value
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          SP/IDP
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Since Version
                          
                        </para>
                      </entry>
                    </row>
                  </tbody>
                </tgroup>
              </informaltable>
              <section id="sid-25657755_SAML2SignatureValidationHandler-x">
                
                <title/>
              </section>
            </section>
          </section>
        </section>
        <section id="sid-6815943">
          
          <title>Single Logout</title>
          <para>
            <emphasis role="strong">Table of Contents</emphasis>
          </para>
          <para>
            
          </para>
          <para>Even though the SAML v2.0 specification has support for Global Logout, you have to use it very very wisely. Just remember that you need to keep the participants to a low number (say upto 5 participants with one IDP).</para>
          <para>
            <emphasis role="strong">Global Logout</emphasis>
            :  The user initiates GLO at one service provider which will log out the user at the IDP and all the service providers.
          </para>
          <para>
            <emphasis role="strong">Local Logout</emphasis>
            :  The user logs out of one service provider only.  The session at the IDP and other service providers is intact.
          </para>
          <section id="sid-6815943_SingleLogout-ConfiguringtheGLO">
            
            <title>Configuring the GLO</title>
            <para>The service provider url should be appended with "?GLO=true"</para>
            <para>Basically, in the service provider page, have a url that has the query parameter.</para>
            <para>
              Assume, your service provider is
              <ulink url="http://localhost:8080/sales/,&amp;nbsp">http://localhost:8080/sales/,</ulink>
              then the url for the global log out would be
              <ulink url="http://localhost:8080/sales/?GLO=true"/>
            </para>
          </section>
          <section id="sid-6815943_SingleLogout-ConfiguringtheLLO">
            
            <title>Configuring the LLO</title>
            <para>The service provider url should be appended with "?LLO=true"</para>
            <para>
              Basically, in the service provider page, have a url that has the query parameter.
              
            </para>
            <para>
              Assume, your service provider is
              <ulink url="http://localhost:8080/sales/,&amp;nbsp">http://localhost:8080/sales/,</ulink>
              then the url for the local log out would  be
              <ulink url="http://localhost:8080/sales/?LLO=true"/>
            </para>
            <para>When using LLO, you must be aware of some security implications. The user is only disconnect from the service provider from which he logged out, which means that the user's session in the identity provider and others service providers are still active. In other words, the user's SSO session is still active and he is still able to log in in any other service provider. We strongly recommend to always use the Single Logout Profile (GLO).</para>
            <important>
              <para>In the case of LLO, the service provider invalidates the session and forwards to a default logout page (logout.jsp) .Custom logout page can be configured in picketlink.xml page.  Please refer to Service Provider Configuration.</para>
            </important>
          </section>
        </section>
        <section id="sid-21757968">
          
          <title>SAML2 Configuration Providers</title>
          <para>
            <emphasis role="strong">Table of Contents</emphasis>
          </para>
          <para>It is possible to use different Configuration Providers at the IDP and SP.</para>
          <para>The configuration providers will then be the sole configuration leaders (instead of picketlink.xml)</para>
          <section id="sid-21757968_SAML2ConfigurationProviders-ConfigurationprovidersattheIDP">
            
            <title>Configuration providers at the IDP</title>
            <section id="sid-21757968_SAML2ConfigurationProviders-IDPMetadataConfigurationProvider">
              
              <title>IDPMetadataConfigurationProvider</title>
              <para>Fully Qualified Name:   org.picketlink.identity.federation.web.config.IDPMetadataConfigurationProvider</para>
              <para>How does it work?</para>
              <para>You will need to provide the metadata file inside  idp-metadata.xml and put it in the IDP web application classpath.  Put it in WEB-INF/classes directory.</para>
            </section>
          </section>
          <section id="sid-21757968_SAML2ConfigurationProviders-ConfigurationProvidersattheSP">
            
            <title>Configuration Providers at the SP</title>
            <section id="sid-21757968_SAML2ConfigurationProviders-SPPostMetadataConfigurationProvider">
              
              <title>SPPostMetadataConfigurationProvider</title>
              <para>Fully Qualified Name:  org.picketlink.identity.federation.web.config.SPPostMetadataConfigurationProvider</para>
              <para>Binding Supported: SAML2/HTTP-POST</para>
              <section id="sid-21757968_SAML2ConfigurationProviders-Howdoesitwork%3F">
                
                <title>How does it work?</title>
                <para>You will need to provide the metadata file inside  sp-metadata.xml  and put it in the SP web application classpath.  Put it in  WEB-INF/classes directory.</para>
                <para>Remember, in the case of SP, the metadata file should have a IDPSSODescriptor as well as a SPSSODescriptor.</para>
              </section>
            </section>
            <section id="sid-21757968_SAML2ConfigurationProviders-SPRedirectMetadataConfigurationProvider">
              
              <title>SPRedirectMetadataConfigurationProvider</title>
              <para>Fully Qualified Name:  org.picketlink.identity.federation.web.config.SPRedirectMetadataConfigurationProvider</para>
              <para>Binding Supported: SAML2/HTTP-Redirect</para>
              <section id="sid-21757968_SAML2ConfigurationProviders-Howdoesitwork%3Fx">
                
                <title>How does it work?</title>
                <para>You will need to provide the metadata file inside  sp-metadata.xml  and put it in the SP web application classpath.  Put it in  WEB-INF/classes directory.</para>
                <para>Remember, in the case of SP, the metadata file should have a IDPSSODescriptor as well as a SPSSODescriptor.</para>
              </section>
            </section>
            <section id="sid-21757968_SAML2ConfigurationProviders-WhataboutKeyInformationandotherconfigurationthatcomesviapicketlinkidfed.xml%3F">
              
              <title>What about Key Information and other configuration that comes via picketlink-idfed.xml?</title>
              <para>Both the IDP and SP applications when provided with the saml configuration provider will be given a parsed representation of the WEB-INF/picketlink-idfed.xml, which implies that the IDPType and SPType coming out finally will be a merger of the configuration provider and the settings from picketlink-idfed.xml</para>
            </section>
          </section>
        </section>
        <section id="sid-23986218">
          
          <title>Metadata Support</title>
          <para>
            <emphasis role="strong">Table of Contents</emphasis>
          </para>
          <section id="sid-23986218_MetadataSupport-Introduction">
            
            <title>Introduction</title>
            <para>It is possible to use different Configuration Providers at the IDP and SP. The configuration providers will then be the sole configuration leaders (instead of picketlink.xml) or provide additional configuration.</para>
            <para>PicketLink SAML Metadata Support is provided and configured by the following configuration providers implementations:</para>
            <informaltable>
              <tgroup cols="3">
                <thead>
                  <row>
                    <entry>
                      <para>Name</para>
                    </entry>
                    <entry>
                      <para>Description</para>
                    </entry>
                    <entry>
                      <para>Provider Type</para>
                    </entry>
                  </row>
                </thead>
                <tbody>
                  <row>
                    <entry>
                      <para>
                        org.picketlink.
                        identity.federation.
                        web.config.
                        IDPMetadataConfigurationProvider
                        
                      </para>
                    </entry>
                    <entry>
                      <para>For Identity Providers</para>
                    </entry>
                    <entry>
                      <para>IDP</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        org.picketlink.
                        identity.federation.
                        web.config.
                        SPPostMetadataConfigurationProvider
                        
                      </para>
                    </entry>
                    <entry>
                      <para>
                        For Service Providers using HTTP-POST Binding
                        
                      </para>
                    </entry>
                    <entry>
                      <para>SP</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        org.picketlink.identity.
                        federation.web.
                        config.SPRedirectMetadataConfigurationProvider
                        
                      </para>
                    </entry>
                    <entry>
                      <para>
                        For Service Providers using HTTP-REDIRECT Binding
                        
                      </para>
                    </entry>
                    <entry>
                      <para>SP</para>
                    </entry>
                  </row>
                </tbody>
              </tgroup>
            </informaltable>
            <para>
              These providers allows you to define some additional configuration to your IDP or SP using a SAML Metadata XML Schema instance, merging them with the ones provided in your
              <emphasis role="italics">WEB-INF/picketlink.xml</emphasis>
              .
            </para>
          </section>
          <section id="sid-23986218_MetadataSupport-Configuration">
            
            <title>Configuration</title>
            <para>To configure the SAML Metadata Configuration Providers you need to follow these steps:</para>
            <itemizedlist>
              <listitem>
                <para>Define the PicketLink Authenticator (SP or IDP valves) and provide the configuration provider class name as an attribute</para>
              </listitem>
            </itemizedlist>
            <itemizedlist>
              <listitem>
                <para>Depending if you're configuring an IDP or SP, provide a metadata file and put it on the classpath:</para>
              </listitem>
            </itemizedlist>
            <itemizedlist>
              <listitem>
                <para>For Identity Providers : WEB-INF/classes/idp-metadata.xml</para>
              </listitem>
            </itemizedlist>
            <itemizedlist>
              <listitem>
                <para>For Service Providers : WEB-INF/classes/sp-metadata.xml</para>
              </listitem>
            </itemizedlist>
            <section id="sid-23986218_MetadataSupport-ConfiguringthePicketLinkAuthenticator">
              
              <title>Configuring the PicketLink Authenticator</title>
              <para>
                To configure one of the provided SAML Metadata configuration providers you just need to configure the PicketLink Authenticator with the
                <emphasis role="strong">configProvider</emphasis>
                parameter/attribute.
              </para>
              <para>For Identity Providers you should have a configuration as follow:</para>
              <informalexample>
                <programlisting>&lt;jboss-web&gt;
  &lt;security-domain&gt;idp&lt;/security-domain&gt;
  &lt;context-root&gt;idp-metadata&lt;/context-root&gt;
  &lt;valve&gt;
     &lt;class-name&gt;org.picketlink.identity.federation.bindings.tomcat.idp.IDPWebBrowserSSOValve&lt;/class-name&gt;
     &lt;param&gt;
     	&lt;param-name&gt;configProvider&lt;/param-name&gt;
     	&lt;param-value&gt;org.picketlink.identity.federation.web.config.IDPMetadataConfigurationProvider&lt;/param-value&gt;
     &lt;/param&gt;
   &lt;/valve&gt;
&lt;/jboss-web&gt;</programlisting>
              </informalexample>
              <para>For Service Providers you should have a configuration as follow:</para>
              <informalexample>
                <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;jboss-web&gt;
  &lt;security-domain&gt;sp&lt;/security-domain&gt;
  &lt;context-root&gt;sales-metadata&lt;/context-root&gt;
    &lt;valve&gt;
      &lt;class-name&gt;org.picketlink.identity.federation.bindings.tomcat.sp.ServiceProviderAuthenticator&lt;/class-name&gt;
      &lt;param&gt;
	&lt;param-name&gt;configProvider&lt;/param-name&gt;
	&lt;param-value&gt;org.picketlink.identity.federation.web.config.SPPostMetadataConfigurationProvider&lt;/param-value&gt;
      &lt;/param&gt;
    &lt;/valve&gt;
&lt;/jboss-web&gt;
</programlisting>
              </informalexample>
            </section>
            <section id="sid-23986218_MetadataSupport-WhataboutKeyInformationandotherconfigurationthatcomesviapicketlinkidfed.xml%3F">
              
              <title>What about Key Information and other configuration that comes via picketlink-idfed.xml?</title>
              <para>Both the IDP and SP applications when provided with the saml configuration provider will be given a parsed representation of the WEB-INF/picketlink.xml, which implies that the IDPType and SPType coming out finally will be a merger of the configuration provider and the settings from picketlink.xml</para>
            </section>
          </section>
          <section id="sid-23986218_MetadataSupport-Examples">
            
            <title>Examples</title>
            <para>
              The
              <ulink url="https://docs.jboss.org/author/pages/viewpage.action?pageId=23986289">PicketLink Quickstarts</ulink>
              provide some examples for the SAML Metadata Support. Please check the following provided quickstarts:
            </para>
            <itemizedlist>
              <listitem>
                <para>
                  <ulink url="https://github.com/picketlink/picketlink-quickstarts/tree/master/saml/idp-metadata"/>
                </para>
              </listitem>
              <listitem>
                <para>
                  <ulink url="https://github.com/picketlink/picketlink-quickstarts/tree/master/saml/sales-metadata"/>
                </para>
              </listitem>
            </itemizedlist>
          </section>
        </section>
        <section id="sid-23986220">
          
          <title>Token Registry</title>
          <section id="sid-23986220_TokenRegistry-Introduction">
            
            <title>Introduction</title>
            <para>
              PicketLink supports the concept of
              <emphasis role="italics">Token Registry</emphasis>
              to store tokens using any store such databases, filesystem or memory.
            </para>
            <para>They are useful for auditing and to track the tokens that were issued or revocated by the Identity Provider or the Security Token Service.</para>
            <tip>
              <para>When running PicketLink in a clustered environment, consider using Token Registries with databases. That way changes to the token table are visible to all nodes.</para>
            </tip>
          </section>
          <section id="sid-23986220_TokenRegistry-OutofboxTokenRegistries">
            
            <title>of-box Token Registries</title>
            <para>The table bellow shows all implementations provided by PicketLink:</para>
            <informaltable>
              <tgroup cols="3">
                <thead>
                  <row>
                    <entry>
                      <para>Name</para>
                    </entry>
                    <entry>
                      <para>Description</para>
                    </entry>
                    <entry>
                      <para>Version</para>
                    </entry>
                  </row>
                </thead>
                <tbody>
                  <row>
                    <entry>
                      <para>
                        org.picketlink.
                        identity.federation.
                        core.sts.
                        registry.DefaultTokenRegistry
                        
                      </para>
                    </entry>
                    <entry>
                      <para>
                        In-memory based registry.
                        <emphasis role="italics">Used by default if no configuration is provided</emphasis>
                      </para>
                    </entry>
                    <entry>
                      <para>2.x.x</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        org.picketlink.
                        identity.federation.
                        core.sts.
                        registry.FileBasedTokenRegistry
                        
                      </para>
                    </entry>
                    <entry>
                      <para>Filesystem based registry</para>
                    </entry>
                    <entry>
                      <para>2.x.x</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        org.picketlink.
                        identity.federation.
                        core.sts.
                        registry.JPABasedTokenRegistry
                        
                      </para>
                    </entry>
                    <entry>
                      <para>Database/JPA based registry</para>
                    </entry>
                    <entry>
                      <para>2.1.3</para>
                    </entry>
                  </row>
                </tbody>
              </tgroup>
            </informaltable>
          </section>
          <section id="sid-23986220_TokenRegistry-Configuration">
            
            <title>Configuration</title>
            <para>
              Token Registries are configured through the
              <emphasis role="strong">PicketLinkSTS</emphasis>
              (Security Token Service configuration) element in the
              <emphasis role="strong">WEB-INF/picketlink.xml</emphasis>
              file:
            </para>
            <tip>
              <para>
                Read the documentation for more information about the
                <emphasis role="strong">
                  <link linkend="sid-50233608">PicketLinkSTS</link>
                </emphasis>
                element and the
                <emphasis role="strong">
                  <xref linkend="sid-50233608"/>
                </emphasis>
                <emphasis role="strong">.</emphasis>
              </para>
            </tip>
            <para/>
            <informalexample>
              <programlisting>&lt;PicketLinkSTS xmlns="urn:picketlink:identity-federation:config:1.0" TokenTimeout="5000" ClockSkew="0"&gt;
        &lt;TokenProviders&gt;
		&lt;TokenProvider
			ProviderClass="org.picketlink.identity.federation.core.saml.v2.providers.SAML20AssertionTokenProvider"
			TokenType="urn:oasis:names:tc:SAML:2.0:assertion"
			TokenElement="Assertion" TokenElementNS="urn:oasis:names:tc:SAML:2.0:assertion"&gt;
			&lt;Property Key="TokenRegistry" Value="org.picketlink.identity.federation.core.sts.registry.JPABasedTokenRegistry" /&gt;
		&lt;/TokenProvider&gt;
	&lt;/TokenProviders&gt;
&lt;/PicketLinkSTS&gt;</programlisting>
            </informalexample>
            <para>
              The example above uses a SAML v2 Token Provider configured with the
              <emphasis role="italics">org.picketlink.identity.federation.core.sts.registry.JPABasedTokenRegistry</emphasis>
              implementation. This is done by the
              <emphasis role="strong">TokenRegistry</emphasis>
              property.
            </para>
            <section id="sid-23986220_TokenRegistry-org.picketlink.identity.federation.core.sts.re...">
              
              <title>org.picketlink.identity.federation.core.sts.registry.FileBasedTokenRegistry</title>
              <informalexample>
                <programlisting>&lt;TokenProvider
	ProviderClass="org.picketlink.identity.federation.core.saml.v2.providers.SAML20AssertionTokenProvider"
	TokenType="urn:oasis:names:tc:SAML:2.0:assertion"
	TokenElement="Assertion" TokenElementNS="urn:oasis:names:tc:SAML:2.0:assertion"&gt;
    &lt;Property Key="TokenRegistry" Value="FILE" /&gt;
    &lt;Property Key="TokenRegistryFile" Value="/some/dir/token.registry" /&gt;
&lt;/TokenProvider&gt;
</programlisting>
              </informalexample>
              <para>
                Use the
                <emphasis role="strong">TokenRegistryFile</emphasis>
                to specify a file where the tokens should be persisted.
              </para>
            </section>
            <section id="sid-23986220_TokenRegistry-org.picketlink.identity.federation.core.sts.re...x">
              
              <title>org.picketlink.identity.federation.core.sts.registry.JPABasedTokenRegistry</title>
              <para/>
              <informalexample>
                <programlisting>&lt;TokenProvider
	ProviderClass="org.picketlink.identity.federation.core.saml.v2.providers.SAML20AssertionTokenProvider"
	TokenType="urn:oasis:names:tc:SAML:2.0:assertion"
	TokenElement="Assertion" TokenElementNS="urn:oasis:names:tc:SAML:2.0:assertion"&gt;
     &lt;Property Key="TokenRegistry" Value="org.picketlink.identity.federation.core.sts.registry.JPABasedTokenRegistry" /&gt;
&lt;/TokenProvider&gt;</programlisting>
              </informalexample>
              <para>
                This implementation requires that you have a valid JPA Persistence Unit named
                <emphasis role="strong">picketlink-sts.</emphasis>
              </para>
            </section>
          </section>
          <section id="sid-23986220_TokenRegistry-CustomTokenRegistry">
            
            <title>Custom Token Registry</title>
            <para>
              If none of the built-in implementations are useful for you, PicketLink allows you to create your own implementation. To do that, just create a class that implements the
              <emphasis role="strong">org.picketlink.identity.federation.core.sts.registry.SecurityTokenRegistry</emphasis>
              interface.
            </para>
            <tip>
              <para>We recommend that you take a look first at one of the provided implementation before building your own.</para>
            </tip>
            <para>Bellow is an skeleton for a custom Token Registry implementation:</para>
            <informalexample>
              <programlisting>public class CustomSecurityTokenRegistry implements SecurityTokenRegistry {

    @Override
    public void addToken(String tokenID, Object token) throws IOException {
        // TODO: logic to add a token to the registry

    }

    @Override
    public void removeToken(String tokenID) throws IOException {
        // TODO: logic to remove a token to the registry
    }

    @Override
    public Object getToken(String tokenID) {
        // TODO: logic to get a token from the registry
        return null;
    }

}</programlisting>
            </informalexample>
          </section>
        </section>
        <section id="sid-6815948">
          
          <title>Standalone vs JBossAS Distribution</title>
          <para>PicketLink has SAMLv2 support for both JBossAS and a regular servlet container.  The JBoss AS version contains deeper integration with the web container security such that you can make use of api such as request.getUserPrincipal() etc.  Plus you can configure your favorite JAAS login module for authentication at the IDP side.</para>
          <para>
            So, choose the
            <ulink url="https://docs.jboss.org/author/display/PLINK/Tomcat+Authenticators+%28Tomcat%2CJBossAS%29">JBossAS version of PicketLink</ulink>
            .  If you do not run on JBoss AS or Apache Tomcat, then choose the
            <link linkend="sid-6815892">standalone version</link>
            .
          </para>
        </section>
        <section id="sid-6815892">
          
          <title>Standalone Web Applications(All Servlet Containers)</title>
          <para>If your IDP or SP applications are not running on JBoss Application Server or Apache Tomcat, then you can use the standalone mode of PicketLink.</para>
          <section id="sid-6815892_StandaloneWebApplications%28AllServletContainers%29-ServiceProviderConfiguration">
            
            <title>Service Provider Configuration</title>
            <para>
              In your web.xml, configure a
              <xref linkend="sid-6815908"/>
              as shown below as an example:
            </para>
            <example>
              <title>web.xml</title>
              <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;web-app xmlns="http://java.sun.com/xml/ns/javaee"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
   version="2.5"&gt;

   &lt;description&gt;Sales Standalone Application&lt;/description&gt;

   &lt;filter&gt;
     &lt;description&gt;
        The SP Filter intersects all requests at the SP and sees if there is a need to contact the IDP.
     &lt;/description&gt;
     &lt;filter-name&gt;SPFilter&lt;/filter-name&gt;
     &lt;filter-class&gt;org.picketlink.identity.federation.web.filters.SPFilter&lt;/filter-class&gt;
     &lt;init-param&gt;
       &lt;param-name&gt;ROLES&lt;/param-name&gt;
       &lt;param-value&gt;sales,manager&lt;/param-value&gt;
     &lt;/init-param&gt;
   &lt;/filter&gt;

   &lt;filter-mapping&gt;
     &lt;filter-name&gt;SPFilter&lt;/filter-name&gt;
     &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
   &lt;/filter-mapping&gt;
&lt;/web-app&gt;</programlisting>
            </example>
            <para>
              
            </para>
            <para>After the SAML workflow is completed, the user principal is available in the http session at "picketlink.principal".</para>
            <para>Something like,</para>
            <para>import org.picketlink.identity.federation.web.constants.GeneralConstants;</para>
            <para>Principal userPrincipal = (Principal) session.getAttribute(GeneralConstants.PRINCIPAL_ID);</para>
          </section>
          <section id="sid-6815892_StandaloneWebApplications%28AllServletContainers%29-IDPConfiguration">
            
            <title>IDP Configuration</title>
            <para>For an IDP web application to be SAML enabled on any Servlet Container, you will have to add listeners and servlets as shown in the web.xml below:</para>
            <para>
              Part of the
              <emphasis role="strong">idp-standalone.war</emphasis>
            </para>
            <example>
              <title>web.xml</title>
              <programlisting>&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;
&lt;web-app xmlns="http://java.sun.com/xml/ns/javaee"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
   version="2.5"&gt;

  &lt;display-name&gt;Standalone IDP&lt;/display-name&gt;
  &lt;description&gt;
    IDP Standalone Application
  &lt;/description&gt;

  &lt;!-- Listeners --&gt;
  &lt;listener&gt;
    &lt;listener-class&gt;org.picketlink.identity.federation.web.core.IdentityServer&lt;/listener-class&gt;
  &lt;/listener&gt;


  &lt;!-- Create the servlet --&gt;
  &lt;servlet&gt;
    &lt;servlet-name&gt;IDPLoginServlet&lt;/servlet-name&gt;
    &lt;servlet-class&gt;org.picketlink.identity.federation.web.servlets.IDPLoginServlet&lt;/servlet-class&gt;
  &lt;/servlet&gt;
  &lt;servlet&gt;
    &lt;servlet-name&gt;IDPServlet&lt;/servlet-name&gt;
    &lt;servlet-class&gt;org.picketlink.identity.federation.web.servlets.IDPServlet&lt;/servlet-class&gt;
  &lt;/servlet&gt;

  &lt;servlet-mapping&gt;
    &lt;servlet-name&gt;IDPLoginServlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/&lt;/url-pattern&gt;
  &lt;/servlet-mapping&gt;

  &lt;servlet-mapping&gt;
    &lt;servlet-name&gt;IDPServlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/IDPServlet&lt;/url-pattern&gt;
  &lt;/servlet-mapping&gt;

&lt;/web-app&gt;
</programlisting>
            </example>
            <para>A jsp for login would be:</para>
            <example>
              <title>jsp/login.jsp</title>
              <programlisting>
&lt;html&gt;&lt;head&gt;&lt;title&gt;Login Page&lt;/title&gt;&lt;/head&gt;
&lt;body&gt;
&lt;font size='5' color='blue'&gt;Please Login&lt;/font&gt;&lt;hr&gt;

&lt;form action='&lt;%=application.getContextPath()%&gt;/' method='post'&gt;
&lt;table&gt;
 &lt;tr&gt;&lt;td&gt;Name:&lt;/td&gt;
   &lt;td&gt;&lt;input type='text' name='JBID_USERNAME'&gt;&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td&gt;Password:&lt;/td&gt;
   &lt;td&gt;&lt;input type='password' name='JBID_PASSWORD' size='8'&gt;&lt;/td&gt;
 &lt;/tr&gt;
&lt;/table&gt;
&lt;br&gt;
  &lt;input type='submit' value='login'&gt;
&lt;/form&gt;&lt;/body&gt;
 &lt;/html&gt;


</programlisting>
            </example>
            <para>The jsp for error would be:</para>
            <example>
              <title>jsp/error.jsp</title>
              <programlisting>&lt;html&gt; &lt;head&gt; &lt;title&gt;Error!&lt;/title&gt;&lt;/head&gt;
&lt;body&gt;

&lt;font size='4' color='red'&gt;
  The username and password you supplied are not valid.
&lt;/p&gt;
Click &lt;a href='&lt;%= response.encodeURL("login.jsp") %&gt;'&gt;here&lt;/a&gt;
to retry login

&lt;/body&gt;
&lt;/form&gt;
&lt;/html&gt;

</programlisting>
            </example>
          </section>
          <section id="sid-6815892_StandaloneWebApplications%28AllServletContainers%29-OtherReferences">
            
            <title>Other References</title>
            <orderedlist>
              <listitem>
                <para>
                  <ulink url="http://community.jboss.org/wiki/PicketLinkSAMLSSOForWebContainers"/>
                </para>
              </listitem>
            </orderedlist>
          </section>
          <section id="sid-6815898">
            
            <title>IDPLoginServlet</title>
            <para>IDPLoginServlet provides the login capabilities for IDP applications running on any servlet container.</para>
            <section id="sid-6815898_IDPLoginServlet-InitializationParameters">
              
              <title>Initialization Parameters</title>
              <informaltable>
                <tgroup cols="6">
                  <thead>
                    <row>
                      <entry>
                        <para>
                          #
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Name
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Type
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Objective
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Default
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Since
                          
                        </para>
                      </entry>
                    </row>
                  </thead>
                  <tbody>
                    <row>
                      <entry>
                        <para>
                          1
                          
                        </para>
                      </entry>
                      <entry>
                        <para>loginClass</para>
                      </entry>
                      <entry>
                        <para>
                          String
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          fqn of an implementation of the ILoginHandler interface.
                          
                          Provides the authentication/authorization.
                          
                        </para>
                      </entry>
                      <entry>
                        <para>org.picketlink.
                          identity.federation.
                          web.handlers.
                          DefaultLoginHandler</para>
                      </entry>
                      <entry>
                        <para>
                          2.0
                          
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                    </row>
                  </tbody>
                </tgroup>
              </informaltable>
            </section>
            <section id="sid-6815898_IDPLoginServlet-Configuration">
              
              <title>Configuration</title>
              <para>
                The IDP application needs to contain
                <emphasis role="strong">/jsp/login.jsp</emphasis>
                .  The jsp file needs to have a form with two text fields namely: JBID_USERNAME and JBID_PASSWORD  to indicate username and password.
              </para>
              <para>On successful authentication, this servlet redirects to the IDPServlet.</para>
            </section>
          </section>
          <section id="sid-6815900">
            
            <title>IDPServlet</title>
            <para>IDPServlet supports the SAMLv2 HTTP/POST binding for an IDP running on any servlet container.</para>
            <section id="sid-6815900_IDPServlet-InitializationParameters">
              
              <title>Initialization Parameters</title>
              <informaltable>
                <tgroup cols="6">
                  <thead>
                    <row>
                      <entry>
                        <para>
                          #
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Name
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Type
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Objective
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Default
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Since
                          
                        </para>
                      </entry>
                    </row>
                  </thead>
                  <tbody>
                    <row>
                      <entry>
                        <para>
                          1
                          
                        </para>
                      </entry>
                      <entry>
                        <para>CONFIG_
                          PROVIDER</para>
                      </entry>
                      <entry>
                        <para>
                          String
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          optional - fqn of an implementation of the SAMLConfigurationProvider interface.
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          2.0
                          
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          2
                          
                        </para>
                      </entry>
                      <entry>
                        <para>SIGN_
                          OUTGOING_
                          MESSAGES</para>
                      </entry>
                      <entry>
                        <para>
                          boolean
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          optional - whether the IDP should sign outgoing messages
                          
                        </para>
                      </entry>
                      <entry>
                        <para>true</para>
                      </entry>
                      <entry>
                        <para>
                          2.0
                          
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          3
                          
                        </para>
                      </entry>
                      <entry>
                        <para>ROLE_
                          GENERATOR</para>
                      </entry>
                      <entry>
                        <para>
                          String
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          optional - fqn of a RoleGenerator
                          
                        </para>
                      </entry>
                      <entry>
                        <para>org.picketlink.
                          identity.federation.
                          web.roles.
                          DefaultRoleGenerator</para>
                      </entry>
                      <entry>
                        <para>
                          2.0
                          
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          4
                          
                        </para>
                      </entry>
                      <entry>
                        <para>ATTRIBUTE_
                          KEYS</para>
                      </entry>
                      <entry>
                        <para>
                          String
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          optional - comma separated list of keys for attributes that need to be sent
                          
                        </para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>
                          2.0
                          
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          5
                          
                        </para>
                      </entry>
                      <entry>
                        <para>IDENTITY_
                          PARTICIPANT_
                          STACK</para>
                      </entry>
                      <entry>
                        <para>
                          String
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          optional - fqn of a custom IdentityParticipantStack implementation
                          
                        </para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>
                          2.0
                          
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                    </row>
                  </tbody>
                </tgroup>
              </informaltable>
            </section>
            <section id="sid-6815900_IDPServlet-Configuration">
              
              <title>Configuration</title>
              <para>
                The
                <xref linkend="sid-6815898"/>
                that is configured in the web application authenticates the user. The IDPServlet then sends back the SAML response message with the SAML assertion back to the Service Provider(SP).
              </para>
            </section>
          </section>
          <section id="sid-6815908">
            
            <title>SPFilter</title>
            <para>SPFilter is the filter that service provider applications need to have to provide HTTP/POST binding of the SAMLv2 specification for web applications running on any servlet container.</para>
            <section id="sid-6815908_SPFilter-InitializationParameters">
              
              <title>Initialization Parameters</title>
              <informaltable>
                <tgroup cols="6">
                  <thead>
                    <row>
                      <entry>
                        <para>
                          #
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Name
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Type
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Objective
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Default
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          Since
                          
                        </para>
                      </entry>
                    </row>
                  </thead>
                  <tbody>
                    <row>
                      <entry>
                        <para>
                          1
                          
                        </para>
                      </entry>
                      <entry>
                        <para>IGNORE_
                          SIGNATURES</para>
                      </entry>
                      <entry>
                        <para>
                          boolean
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          optional - should the SP ignore signatures
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          false
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          2.0
                          
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          2
                          
                        </para>
                      </entry>
                      <entry>
                        <para>SAML_
                          HANDLER_
                          CHAIN_
                          CLASS</para>
                      </entry>
                      <entry>
                        <para>
                          String
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          optional - fqn of custom SAMLHandlerChain interface
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          2.0
                          
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          3
                          
                        </para>
                      </entry>
                      <entry>
                        <para>ROLE_
                          VALIDATOR</para>
                      </entry>
                      <entry>
                        <para>
                          String
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          optional - fqn of a IRoleValidator interface
                          
                        </para>
                      </entry>
                      <entry>
                        <para>org.picketlink.
                          identity.federation.
                          web.roles.
                          DefaultRoleValidator</para>
                      </entry>
                      <entry>
                        <para>
                          2.0
                          
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          4
                          
                        </para>
                      </entry>
                      <entry>
                        <para>ROLES</para>
                      </entry>
                      <entry>
                        <para>
                          String
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          optional - comma separated list of roles that the sp will take
                          
                        </para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>
                          2.0
                          
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>
                          5
                          
                        </para>
                      </entry>
                      <entry>
                        <para>LOGOUT_
                          PAGE</para>
                      </entry>
                      <entry>
                        <para>
                          String
                          
                        </para>
                      </entry>
                      <entry>
                        <para>
                          optional - a logout page
                          
                        </para>
                      </entry>
                      <entry>
                        <para>/logout.jsp</para>
                      </entry>
                      <entry>
                        <para>
                          2.0
                          
                        </para>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                      <entry>
                        <para>Â </para>
                      </entry>
                    </row>
                  </tbody>
                </tgroup>
              </informaltable>
            </section>
          </section>
        </section>
      </section>
      <section id="sid-6815856">
        
        <title>SAML v1.1</title>
       
        <section id="sid-6815856_SAMLv1.1-SAMLv1.1">
          
          <title>SAML v1.1</title>
          <para>
            Please refer to the wikipedia
            <ulink url="http://en.wikipedia.org/wiki/SAML_1.1">page</ulink>
            for more information.
          </para>
        </section>
        <section id="sid-6815856_SAMLv1.1-PicketLinkSAMLv1.1Support">
          
          <title>PicketLink SAML v1.1 Support</title>
          <para>
            Please read it at
            <ulink url="http://community.jboss.org/wiki/PicketLinkSAMLV11Support"/>
          </para>
        </section>
      </section>
      <section id="sid-23986242">
        
        <title>Trust</title>
        
        <section id="sid-819345">
          
          <title>Security Token Server (STS)</title>
          
          <section id="sid-819345_SecurityTokenServer%28STS%29-Introduction">
            
            <title>Introduction</title>
            <para>The WS-Trust specification defines extensions that build on WS-Security to provide a framework for requesting and issuing security tokens. Particularly, WS-Trust defines the concept of a security token service (STS), a service that can issue, cancel, renew and validate security tokens, and specifies the format of security token request and response messages.</para>
            <tip>
              <para>
                Please look at the
                <ulink url="https://docs.jboss.org/author/pages/viewpage.action?pageId=23986289">PicketLink Quickstarts</ulink>
                for the PicketLink Identity Provider web application. The quickstarts are useful resources where you can get configuration files.
              </para>
            </tip>
          </section>
          <section id="sid-819345_SecurityTokenServer%28STS%29-References">
            
            <title>References</title>
            <para>
              <ulink url="http://community.jboss.org/wiki/PicketLinkSTSDashboard">PicketLink STS Dashboard</ulink>
            </para>
          </section>
          <section id="sid-819347">
            
            <title>PicketLink JBoss Web Services Handlers</title>
            <para>Page to list all the JBoss Web Services handlers that are part of the PicketLink project.</para>
            <orderedlist>
              <listitem>
                <para>SAML2Handler</para>
              </listitem>
              <listitem>
                <para>BinaryTokenHandler</para>
              </listitem>
              <listitem>
                <para>WSAuthenticationHandler</para>
              </listitem>
              <listitem>
                <para>WSAuthorizationHandler</para>
              </listitem>
            </orderedlist>
            <section id="sid-917609">
              
              <title>BinaryTokenHandler</title>
              <section id="sid-917609_BinaryTokenHandler-FullyQualifiedName">
                
                <title>Fully Qualified Name</title>
                <para>org.picketlink.trust.jbossws.handler.BinaryTokenHandler</para>
              </section>
              <section id="sid-917609_BinaryTokenHandler-Objective">
                
                <title>Objective</title>
                <para>A JBoss Web Services Handler that is stack agnostic that can be added on the client side to either pick a http header or cookie, that contains a binary token.</para>
              </section>
              <section id="sid-917609_BinaryTokenHandler-Author">
                
                <title>Author</title>
                <para>Anil Saldhana</para>
              </section>
              <section id="sid-917609_BinaryTokenHandler-Settings">
                
                <title>Settings</title>
                <para>
                  <emphasis role="strong">Configuration:</emphasis>
                </para>
                <para>
                  <emphasis role="italics">System Properties:</emphasis>
                </para>
                <itemizedlist>
                  <listitem>
                    <para>binary.http.header: http header name</para>
                  </listitem>
                  <listitem>
                    <para>binary.http.cookie: http cookie name</para>
                  </listitem>
                  <listitem>
                    <para>binary.http.encodingType: attribute value of the EncodingType attribute</para>
                  </listitem>
                  <listitem>
                    <para>binary.http.valueType: attribute value of the ValueType attribute</para>
                  </listitem>
                  <listitem>
                    <para>binary.http.valueType.namespace: namespace for the ValueType attribute</para>
                  </listitem>
                  <listitem>
                    <para>binary.http.valueType.prefix: namespace for the ValueType attribute</para>
                  </listitem>
                  <listitem>
                    <para>binary.http.cleanToken: true or false dependending on whether the binary token has to be cleaned</para>
                  </listitem>
                </itemizedlist>
                <para>
                  <emphasis role="italics">Setters:</emphasis>
                </para>
                <para>Please see the see also section.See Also:setHttpHeaderName(String)setHttpCookieName(String)setEncodingType(String)setValueType(String)setValueTypeNamespace(String)setValueTypePrefix(String)</para>
              </section>
              <section id="sid-917609_BinaryTokenHandler-TestCase">
                
                <title>Test Case</title>
                <para>
                  <ulink url="http://anonsvn.jboss.org/repos/picketlink/integration-tests/trunk/picketlink-trust-tests/src/test/java/org/picketlink/test/trust/tests/STSWSBinaryTokenTestCase.java"/>
                </para>
              </section>
            </section>
            <section id="sid-819349">
              
              <title>SAML2Handler</title>
              <section id="sid-819349_SAML2Handler-FullName%3A">
                
                <title>Full Name:</title>
                <para>org.picketlink.trust.jbossws.handler.SAML2Handler</para>
              </section>
              <section id="sid-819349_SAML2Handler-Authors%3A">
                
                <title>Authors:</title>
                <itemizedlist>
                  <listitem>
                    <para>Marcus Moyses</para>
                  </listitem>
                  <listitem>
                    <para>Anil Saldhana</para>
                  </listitem>
                </itemizedlist>
              </section>
              <section id="sid-819349_SAML2Handler-Objective%3A">
                
                <title>Objective:</title>
                <para>This is a JBossWS handler (stack agnostic) that supports the SAML token profile of the Oasis Web Services Security (WSS) standard.</para>
                <para>It can be configured both on the client side and the server side.  The configuration is shown below both the client(outbound) as well as server(inbound).</para>
                <section id="sid-819349_SAML2Handler-Outbound%3A">
                  
                  <title>Outbound:</title>
                  <para>This is the behavior when the handler is configured on the client side.</para>
                  <para>The client side usage is shown in the following client class.  If you need to use an XML file to specify the handler on the client side, then please look in the references section below.</para>
                  <example>
                    <title>STSWSClientTestCase.java</title>
                    <programlisting>package org.picketlink.test.trust.tests;

import java.net.URL;
import java.util.List;

import javax.xml.namespace.QName;
import javax.xml.ws.BindingProvider;
import javax.xml.ws.Service;
import javax.xml.ws.handler.Handler;

import org.junit.Test;
import org.picketlink.identity.federation.api.wstrust.WSTrustClient;
import org.picketlink.identity.federation.api.wstrust.WSTrustClient.SecurityInfo;
import org.picketlink.identity.federation.core.wstrust.WSTrustException;
import org.picketlink.identity.federation.core.wstrust.plugins.saml.SAMLUtil;
import org.picketlink.test.trust.ws.WSTest;
import org.picketlink.trust.jbossws.SAML2Constants;
import org.picketlink.trust.jbossws.handler.SAML2Handler;
import org.w3c.dom.Element;

/**
 * A Simple WS Test for the SAML Profile of WSS
 * @author Marcus Moyses
 * @author Anil Saldhana
 */
public class STSWSClientTestCase
{
   private static String username = "UserA";
   private static String password = "PassA";

   @SuppressWarnings("rawtypes")
   @Test
   public void testWSInteraction() throws Exception {
      WSTrustClient client = new WSTrustClient("PicketLinkSTS", "PicketLinkSTSPort",
            "http://localhost:8080/picketlink-sts/PicketLinkSTS",
            new SecurityInfo(username, password));
    Element assertion = null;
    try {
        System.out.println("Invoking token service to get SAML assertion for " + username);
        assertion = client.issueToken(SAMLUtil.SAML2_TOKEN_TYPE);
        System.out.println("SAML assertion for " + username + " successfully obtained!");
    } catch (WSTrustException wse) {
        System.out.println("Unable to issue assertion: " + wse.getMessage());
        wse.printStackTrace();
        System.exit(1);
    }

    URL wsdl = new URL("http://localhost:8080/picketlink-wstest-tests/WSTestBean?wsdl");
    QName serviceName = new QName("http://ws.trust.test.picketlink.org/", "WSTestBeanService");
    Service service = Service.create(wsdl, serviceName);
    WSTest port = service.getPort(new QName("http://ws.trust.test.picketlink.org/", "WSTestBeanPort"), WSTest.class);
    BindingProvider bp = (BindingProvider)port;
    bp.getRequestContext().put(SAML2Constants.SAML2_ASSERTION_PROPERTY, assertion);
    List&lt;Handler&gt; handlers = bp.getBinding().getHandlerChain();
    handlers.add(new SAML2Handler());
    bp.getBinding().setHandlerChain(handlers);

    port.echo("Test");
   }
}</programlisting>
                  </example>
                  <para>Note: the SAML2Handler is instantiated and added to the handler list that is obtained from the BindingProvider binding.</para>
                  <para>There are two ways by which the SAML2Handler picks the SAML2 Assertion to send via the SOAP message.</para>
                  <itemizedlist>
                    <listitem>
                      <para>
                        The Client can push the SAML2 Assertion into the SOAP MessageContext under the key "
                        <emphasis role="strong">
                          <emphasis role="italics">org.picketlink.trust.saml.assertion</emphasis>
                        </emphasis>
                        ". In the example code above, look in the call bindingProvider.getRequestContext().put(xxxxx)
                      </para>
                    </listitem>
                    <listitem>
                      <para>The SAML2 Assertion is available as part of the JAAS subject on the security context. This can happen if there has been a JAAS interaction with the usage of PicketLink STS login modules.</para>
                    </listitem>
                  </itemizedlist>
                </section>
                <section id="sid-819349_SAML2Handler-Inbound%3A">
                  
                  <title>Inbound:</title>
                  <para>This is the behavior when the handler is configured on the server side.</para>
                  <para>
                    The server side setting is as follows:
                    
                  </para>
                  <example>
                    <title>handlers.xml</title>
                    <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;


&lt;handler-chains xmlns="http://java.sun.com/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:ns1="http://org.jboss.ws/jaxws/samples/logicalhandler"
  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee javaee_web_services_1_2.xsd"&gt;



  &lt;handler-chain&gt;
    &lt;handler&gt;
      &lt;handler-name&gt;SAML2Handler&lt;/handler-name&gt;
      &lt;handler-class&gt;org.picketlink.trust.jbossws.handler.SAML2Handler&lt;/handler-class&gt;
    &lt;/handler&gt;
  &lt;/handler-chain&gt;


&lt;/handler-chains&gt;</programlisting>
                  </example>
                  <para>The SAML2Handler looks for a SAML2 Assertion on the SOAP message. If it is available then it constructs a SamlCredential object with the assertion and then sets it on the SecurityContext for the JAAS layer to authenticate the call.</para>
                </section>
              </section>
              <section id="sid-819349_SAML2Handler-References">
                
                <title>References</title>
                <para>
                  <ulink url="http://community.jboss.org/wiki/JBossWS-UserGuide#Handler_Framework">JBossWS User Guide on Handlers</ulink>
                </para>
                <para>
                  <ulink url="http://community.jboss.org/wiki/JBossWS-JAX-WSClientConfiguration">JBossWS JAXWS Client Configuration</ulink>
                </para>
              </section>
            </section>
            <section id="sid-819382">
              
              <title>WSAuthenticationHandler</title>
              <section id="sid-819382_WSAuthenticationHandler-FQN%3A">
                
                <title>FQN:</title>
                <para>org.picketlink.trust.jbossws.handler.WSAuthenticationHandler</para>
              </section>
              <section id="sid-819382_WSAuthenticationHandler-Objective%3A">
                
                <title>Objective:</title>
                <para>Perform authentication for POJO based webservices.</para>
              </section>
              <section id="sid-819382_WSAuthenticationHandler-ExampleUsage%3A">
                
                <title>Example Usage:</title>
                <para>Assume that you have a POJO.</para>
                <informalexample>
                  <programlisting>package org.picketlink.test.trust.ws;

import javax.jws.HandlerChain;
import javax.jws.WebMethod;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;

/**
 * POJO that is exposed as WS
 * @author Anil Saldhana
 */
@WebService
@SOAPBinding(style = SOAPBinding.Style.RPC)
@HandlerChain(file="authorize-handlers.xml")
public class POJOBean
{
   @WebMethod
   public void echo(String echo)
   {
      System.out.println(echo);
   }

   @WebMethod
   public void echoUnchecked(String echo)
   {
      System.out.println(echo);
   }
}</programlisting>
                </informalexample>
                <para>Note the use of the @HandlerChain annotation that defines the handler xml.</para>
                <para>The handler xml is authorize-handlers.xml.</para>
                <informalexample>
                  <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;


&lt;handler-chains xmlns="http://java.sun.com/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee javaee_web_services_1_2.xsd"&gt;

  &lt;handler-chain&gt;


    &lt;handler&gt;
      &lt;handler-name&gt;WSAuthorizationHandler&lt;/handler-name&gt;
      &lt;handler-class&gt;org.picketlink.trust.jbossws.handler.WSAuthorizationHandler&lt;/handler-class&gt;
    &lt;/handler&gt;

    &lt;handler&gt;
      &lt;handler-name&gt;WSAuthenticationHandler&lt;/handler-name&gt;
      &lt;handler-class&gt;org.picketlink.trust.jbossws.handler.WSAuthenticationHandler&lt;/handler-class&gt;
    &lt;/handler&gt;

    &lt;handler&gt;
      &lt;handler-name&gt;SAML2Handler&lt;/handler-name&gt;
      &lt;handler-class&gt;org.picketlink.trust.jbossws.handler.SAML2Handler&lt;/handler-class&gt;
    &lt;/handler&gt;


  &lt;/handler-chain&gt;


&lt;/handler-chains&gt;</programlisting>
                </informalexample>
                <warning>
                  <para>
                    <emphasis role="strong">Note</emphasis>
                    : The order of execution of the handlers is SAML2Handler, WSAuthenticationHandler and WSAuthorizationHandler.  These need to be defined in reverse order in the xml.
                  </para>
                </warning>
                <para>Since we intend to expose a POJO as a webservice, we need to package in a web archive (war).</para>
                <para>The web.xml is:</para>
                <informalexample>
                  <programlisting>&lt;web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5"&gt;

	&lt;servlet&gt;
		&lt;display-name&gt;POJO Web Service&lt;/display-name&gt;
		&lt;servlet-name&gt;POJOBeanService&lt;/servlet-name&gt;
		&lt;servlet-class&gt;org.picketlink.test.trust.ws.POJOBean&lt;/servlet-class&gt;
		&lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
	&lt;/servlet&gt;
	&lt;servlet-mapping&gt;
		&lt;servlet-name&gt;POJOBeanService&lt;/servlet-name&gt;
		&lt;url-pattern&gt;/POJOBeanService&lt;/url-pattern&gt;
	&lt;/servlet-mapping&gt;
&lt;/web-app&gt;</programlisting>
                </informalexample>
                <warning>
                  <para>Please do not define any &lt;security-constraint&gt; in the web.xml</para>
                </warning>
                <para>The jboss-web.xml is:</para>
                <informalexample>
                  <programlisting>&lt;jboss-web&gt;
  &lt;security-domain&gt;sts&lt;/security-domain&gt;
&lt;/jboss-web&gt;</programlisting>
                </informalexample>
                <para>The jboss-wsse.xml is</para>
                <informalexample>
                  <programlisting>&lt;jboss-ws-security xmlns="http://www.jboss.com/ws-security/config"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.jboss.com/ws-security/config
                   http://www.jboss.com/ws-security/schema/jboss-ws-security_1_0.xsd"&gt;

  &lt;port name="POJOBeanPort"&gt;
    &lt;operation name="{http://ws.trust.test.picketlink.org/}echoUnchecked"&gt;
      &lt;config&gt;
        &lt;authorize&gt;
          &lt;unchecked/&gt;
        &lt;/authorize&gt;
      &lt;/config&gt;
    &lt;/operation&gt;

    &lt;operation name="{http://ws.trust.test.picketlink.org/}echo"&gt;
      &lt;config&gt;
        &lt;authorize&gt;
          &lt;role&gt;JBossAdmin&lt;/role&gt;
        &lt;/authorize&gt;
      &lt;/config&gt;
    &lt;/operation&gt;
  &lt;/port&gt;



&lt;/jboss-ws-security&gt;</programlisting>
                </informalexample>
                <para>As you can see, there are two operations defined on the POJO web services and each of these operations require different access control. The echoUnchecked() method allows free access to any authenticated user whereas the echo() method requires the caller to have "JBossAdmin" role.</para>
                <para>The war should look as:</para>
                <informalexample>
                  <programlisting>anil@localhost:~/picketlink/picketlink/integration-tests/trunk/picketlink-trust-tests$ jar tvf target/pojo-test.war
     0 Mon Apr 11 19:48:32 CDT 2011 META-INF/
   123 Mon Apr 11 19:48:30 CDT 2011 META-INF/MANIFEST.MF
     0 Mon Apr 11 19:48:30 CDT 2011 WEB-INF/
     0 Mon Apr 11 19:48:30 CDT 2011 WEB-INF/classes/
     0 Mon Apr 11 19:48:30 CDT 2011 WEB-INF/classes/org/
     0 Mon Apr 11 19:48:30 CDT 2011 WEB-INF/classes/org/picketlink/
     0 Mon Apr 11 19:48:30 CDT 2011 WEB-INF/classes/org/picketlink/test/
     0 Mon Apr 11 19:48:30 CDT 2011 WEB-INF/classes/org/picketlink/test/trust/
     0 Mon Apr 11 19:48:30 CDT 2011 WEB-INF/classes/org/picketlink/test/trust/ws/
     0 Mon Apr 11 19:48:30 CDT 2011 WEB-INF/lib/
   858 Mon Apr 11 19:48:26 CDT 2011 WEB-INF/classes/authorize-handlers.xml
  1021 Mon Apr 11 19:48:28 CDT 2011 WEB-INF/classes/org/picketlink/test/trust/ws/POJOBean.class
    65 Mon Apr 11 12:00:32 CDT 2011 WEB-INF/jboss-web.xml
   770 Mon Apr 11 17:44:16 CDT 2011 WEB-INF/jboss-wsse.xml
   598 Mon Apr 11 16:25:46 CDT 2011 WEB-INF/web.xml
     0 Mon Apr 11 19:48:32 CDT 2011 META-INF/maven/
     0 Mon Apr 11 19:48:32 CDT 2011 META-INF/maven/org.picketlink/
     0 Mon Apr 11 19:48:32 CDT 2011 META-INF/maven/org.picketlink/picketlink-integration-trust-tests/
  7918 Mon Apr 11 18:56:16 CDT 2011 META-INF/maven/org.picketlink/picketlink-integration-trust-tests/pom.xml
   142 Mon Apr 11 19:48:30 CDT 2011 META-INF/maven/org.picketlink/picketlink-integration-trust-tests/pom.properties
anil@localhost:~/picketlink/picketlink/integration-tests/trunk/picketlink-trust-tests</programlisting>
                </informalexample>
                <para>The Test Case is something like:</para>
                <informalexample>
                  <programlisting> package org.picketlink.test.trust.tests;

import java.net.URL;
import java.util.List;

import javax.xml.namespace.QName;
import javax.xml.ws.BindingProvider;
import javax.xml.ws.Service;
import javax.xml.ws.handler.Handler;

import org.junit.Test;
import org.picketlink.identity.federation.api.wstrust.WSTrustClient;
import org.picketlink.identity.federation.api.wstrust.WSTrustClient.SecurityInfo;
import org.picketlink.identity.federation.core.wstrust.WSTrustException;
import org.picketlink.identity.federation.core.wstrust.plugins.saml.SAMLUtil;
import org.picketlink.test.trust.ws.WSTest;
import org.picketlink.trust.jbossws.SAML2Constants;
import org.picketlink.trust.jbossws.handler.SAML2Handler;
import org.w3c.dom.Element;

/**
 * A Simple WS Test for POJO WS Authorization using PicketLink
 * @author Anil Saldhana
 * @since Oct 3, 2010
 */
public class POJOWSAuthorizationTestCase
{
   private static String username = "UserA";
   private static String password = "PassA";

   @SuppressWarnings("rawtypes")
   @Test
   public void testWSInteraction() throws Exception
   {
      // Step 1:  Get a SAML2 Assertion Token from the STS
      WSTrustClient client = new WSTrustClient("PicketLinkSTS", "PicketLinkSTSPort",
            "http://localhost:8080/picketlink-sts/PicketLinkSTS",
            new SecurityInfo(username, password));
      Element assertion = null;
      try {
         System.out.println("Invoking token service to get SAML assertion for " + username);
         assertion = client.issueToken(SAMLUtil.SAML2_TOKEN_TYPE);
         System.out.println("SAML assertion for " + username + " successfully obtained!");
      } catch (WSTrustException wse) {
         System.out.println("Unable to issue assertion: " + wse.getMessage());
         wse.printStackTrace();
         System.exit(1);
      }

      // Step 2: Stuff the Assertion on the SOAP message context and add the SAML2Handler to client side handlers
      URL wsdl = new URL("http://localhost:8080/pojo-test/POJOBeanService?wsdl");
      QName serviceName = new QName("http://ws.trust.test.picketlink.org/", "POJOBeanService");
      Service service = Service.create(wsdl, serviceName);
      WSTest port = service.getPort(new QName("http://ws.trust.test.picketlink.org/", "POJOBeanPort"), WSTest.class);
      BindingProvider bp = (BindingProvider)port;
      bp.getRequestContext().put(SAML2Constants.SAML2_ASSERTION_PROPERTY, assertion);
      List&lt;Handler&gt; handlers = bp.getBinding().getHandlerChain();
      handlers.add(new SAML2Handler());
      bp.getBinding().setHandlerChain(handlers);

      //Step 3: Access the WS. Exceptions will be thrown anyway.
      port.echo("Test");
   }
}</programlisting>
                </informalexample>
              </section>
            </section>
            <section id="sid-819384">
              
              <title>WSAuthorizationHandler</title>
              <section id="sid-819384_WSAuthorizationHandler-FQN%3A">
                
                <title>FQN:</title>
                <para>org.picketlink.trust.jbossws.handler.WSAuthorizationHandler</para>
              </section>
              <section id="sid-819384_WSAuthorizationHandler-Objective%3A">
                
                <title>Objective:</title>
                <para>Provide authorization capabilities to POJO based web services.</para>
              </section>
              <section id="sid-819384_WSAuthorizationHandler-ExampleUsage%3A">
                
                <title>Example Usage:</title>
                <para>Please refer to the documentation on WSAuthenticationHandler.</para>
                <important>
                  <para>
                    The example is in
                    <ulink url="https://docs.jboss.org/author/display/PLINK/WSAuthenticationHandler">WSAuthenticationHandler</ulink>
                    section.
                  </para>
                </important>
              </section>
            </section>
          </section>
          <section id="sid-55476415">
            
            <title>Protecting EJB Endpoints</title>
            <section id="sid-55476415_ProtectingEJBEndpoints-Introduction">
              
              <title>Introduction</title>
              <para>PicketLink provides ways to protect your EJB endpoints using a SAML Security Token Service. This means that you can apply some security to your EJBs where only users with a valid SAML assertion can invoke to them.</para>
              <para>This scenario is very common if you are looking for:</para>
              <orderedlist>
                <listitem>
                  <para>Leverage your Single Sign-On infrastructure to your service layer (EJBs, Web Services, etc)</para>
                </listitem>
                <listitem>
                  <para>Integrate your SAML Service Providers with your services by trusting the assertion previously issued by the Identity Provider</para>
                </listitem>
                <listitem>
                  <para>Any situation that requires the propagation of authorization/authentication information from one domain to another</para>
                </listitem>
              </orderedlist>
              <section id="sid-55476415_ProtectingEJBEndpoints-ProcessOverview">
                
                <title>Process Overview</title>
                <para>
                  The client must first obtain the SAML assertion from PicketLink STS by sending a WS-Trust request to the token service. This process usually involves authentication of the client. After obtaining the SAML assertion from the STS, the client includes the assertion in the security context of the EJB request before invoking an operation on the bean. Upon receiving the invocation, the EJB container extracts the assertion and validates it by sending a WS-Trust validate message to the STS. If the assertion is considered valid by the STS (and the proof of possession token has been verified if needed), the client is authenticated.
                  <figure>
<title>TODO Gliffy image title empty</title>
<mediaobject>
<imageobject>
                      <imagedata fileref="https://community.jboss.org/servlet/JiveServlet/downloadImage/102-14981-11-2360/310-175/saml-sts-module.png"/>
                    </imageobject>
</mediaobject>
</figure>
                </para>
                <para>On JBoss, the SAML assertion validation process is handled by the SAML2STSLoginModule. It reads properties from a configurable file (specified by the configFile option) and establishes communication with the STS based on these properties. We will see how a configuration file looks like later on. If the assertion is valid, a Principal is created using the assertion subject name and if the assertion contains roles, these roles are also extracted and associated with the caller's Subject.</para>
                <para>The client must first obtain the SAML assertion from the PicketLink STS or you Identity Provider. This process usually involves authentication of the client. After obtaining the SAML assertion, the client includes the assertion in the security context of the EJB request before invoking an operation on the bean. Upon receiving the invocation, the EJB container extracts the assertion and validates it by sending a WS-Trust validate message to the STS. If the assertion is considered valid by the STS (and the proof of possession token has been verified if needed), the client is authenticated.</para>
                <para>
                  On JBoss, the SAML assertion validation process is handled by the
                  <xref linkend="sid-2195585"/>
                  . It reads properties from a configurable file (specified by the configFile option) and establishes communication with the STS based on these properties. We will see how a configuration file looks like later on. If the assertion is valid, a Principal is created using the assertion subject name and if the assertion contains roles, these roles are also extracted and associated with the caller's Subject.
                </para>
              </section>
            </section>
            <section id="sid-55476415_ProtectingEJBEndpoints-Configuration">
              
              <title>Configuration</title>
              <para>This section will cover two possible scenarios to protect and access your secured EJB endpoints. The main difference between these two scenarios is where the EJB client is deployed.</para>
              <itemizedlist>
                <listitem>
                  <para>Remote EJB Client using JNDI</para>
                </listitem>
                <listitem>
                  <para>EJB Client is deployed at the same instance than your EJB endpoints</para>
                </listitem>
              </itemizedlist>
              <section id="sid-55476415_ProtectingEJBEndpoints-RemoteEJBClientusingJNDI">
                
                <title>Remote EJB Client using JNDI</title>
                <important>
                  <para>
                    Before starting, please take a look at the following documentation
                    <ulink url="https://docs.jboss.org/author/display/AS71/Remote+EJB+invocations+via+JNDI+-+EJB+client+API+or+remote-naming+project">Remote EJB invocations via JNDI</ulink>
                    .
                  </para>
                  <para>The configuration described in this section only works with versions 7.2.0+ and 7.1.3+ of JBoss Application Server.</para>
                </important>
                <para>If your endpoints are accessible from remote clients (in a different VM or server than your endpoints) you need to configure your JBoss Application Server 7 to allow use a SAML Assertion during the InitialContext creation.</para>
                <para>Basically, the configuration envolves the following steps:</para>
                <orderedlist>
                  <listitem>
                    <para>Add a new Security Realm to your standalone.xml</para>
                  </listitem>
                  <listitem>
                    <para>
                      Create a Security Domain using the
                      <xref linkend="sid-2195585"/>
                    </para>
                  </listitem>
                  <listitem>
                    <para>Change the Remoting Connector to use the new Security Realm</para>
                  </listitem>
                </orderedlist>
                <section id="sid-55476415_ProtectingEJBEndpoints-AddanewSecurityRealm">
                  
                  <title>Add a new Security Realm</title>
                  <important>
                    <para>
                      <ulink url="https://docs.jboss.org/author/display/AS71/Security+Realms">Security Realms</ulink>
                      are better described in the JBoss Application Server Documentation.
                    </para>
                  </important>
                  <para>Edit your standalone.xml and add the following configuration for a new Security Realm:</para>
                  <informalexample>
                    <programlisting>&lt;security-realm name="SAMLRealm"&gt;
    &lt;authentication&gt;
        &lt;jaas name="ejb-remoting-sts"/&gt;
    &lt;/authentication&gt;
&lt;/security-realm&gt;</programlisting>
                  </informalexample>
                  <para>The configuration above defines a Security Realm that delegates the username/password information to a JAAS Security Domain (that we'll create later) in order to authenticate an user.</para>
                  <para>When using the JAAS configuration for Security Realms, the remoting subsystem enables the PLAIN SASL authentication. This will allow your remote clients send the username/password where the password would be the previously issued SAML Assertion.In our case, the password will be the String representation of the SAML Assertion.</para>
                  <tip>
                    <para>Make sure you also enable SSL. Otherwise all communication with the server will be done using plain text.</para>
                  </tip>
                </section>
                <section id="sid-55476415_ProtectingEJBEndpoints-CreateaSecurityDomainusingtheSAML2STSLoginModule">
                  
                  <title>Create a Security Domain using the SAML2STSLoginModule</title>
                  <para>Edit your standalone.xml and add the following configuration for a new Security Domain:</para>
                  <informalexample>
                    <programlisting>&lt;security-domain name="ejb-remoting-sts" cache-type="default"&gt;
    &lt;authentication&gt;
        &lt;login-module code="org.picketlink.identity.federation.bindings.jboss.auth.SAML2STSLoginModule" flag="required" module="org.picketlink"&gt;
            &lt;module-option name="configFile" value="${jboss.server.config.dir}/sts-config.properties"/&gt;
            &lt;module-option name="password-stacking" value="useFirstPass"/&gt;
        &lt;/login-module&gt;
    &lt;/authentication&gt;
&lt;/security-domain&gt;</programlisting>
                  </informalexample>
                  <para>This configuration above defines a Security Domain that uses the SAML2STSLoginModule to get the String representation of the SAML Assertion and validate it against the Security Token Service.</para>
                  <para>You may notice that we provided a properties file as module-option. This properties file defines all the configuration needed to invoke the PicketLink STS. It should look like this:</para>
                  <informalexample>
                    <programlisting>serviceName=PicketLinkSTS
portName=PicketLinkSTSPort
endpointAddress=http://localhost:8080/picketlink-sts/PicketLinkSTS
username=admin
#password=admin
password=MASK-0BbleBL2LZk=
salt=18273645
iterationCount=56

#java -cp picketlink-fed-core.jar org.picketlink.identity.federation.core.util.PBEUtils 18273645 56 admin
#Encoded password: MASK-0BbleBL2LZk=</programlisting>
                  </informalexample>
                  <para>This security domain will be used to authenticate your remote clients during the creation of the JNDI Initial Context.</para>
                </section>
                <section id="sid-55476415_ProtectingEJBEndpoints-ChangetheRemotingConnectorSecurityRealm">
                  
                  <title>Change the Remoting Connector Security Realm</title>
                  <para>Edit your standalone.xml and change the security-realm attribute of the remoting connector:</para>
                  <informalexample>
                    <programlisting>&lt;subsystem xmlns="urn:jboss:domain:remoting:1.1"&gt;
    &lt;connector name="remoting-connector" socket-binding="remoting" security-realm="SAMLRealm"/&gt;
&lt;/subsystem&gt;</programlisting>
                  </informalexample>
                  <para>The connector configuration is already present in your standalone.xml. You only need to change the security-realm attribute to match the one we created before.</para>
                </section>
                <section id="sid-55476415_ProtectingEJBEndpoints-EJBRemoteClient">
                  
                  <title>EJB Remote Client</title>
                  <para>The code above shows you how a EJB Rremote Client may look like:</para>
                  <informalexample>
                    <programlisting>// add the JDK SASL Provider that allows to use the PLAIN SASL Client
Security.addProvider(new Provider());

Element assertion = getAssertionFromSTS("UserA", "PassA");

// JNDI environment configuration properties
Hashtable&lt;String, Object&gt; env = new Hashtable&lt;String, Object&gt;();

env.put(Context.URL_PKG_PREFIXES, "org.jboss.ejb.client.naming");
env.put("java.naming.factory.initial", "org.jboss.naming.remote.client.InitialContextFactory");
env.put("java.naming.provider.url", "remote://localhost:4447");
env.put("jboss.naming.client.ejb.context", "true");
env.put("jboss.naming.client.connect.options.org.xnio.Options.SASL_POLICY_NOPLAINTEXT", "false");
env.put("javax.security.sasl.policy.noplaintext", "false");

// provide the user principal and credential. The credential is the previously issued SAML assertion
env.put(Context.SECURITY_PRINCIPAL, "admin");
env.put(Context.SECURITY_CREDENTIALS, DocumentUtil.getNodeAsString(assertion));

// create the JNDI Context and perform the authentication using the SAML2STSLoginModule
Context context = new InitialContext(env);

// lookup the EJB
EchoService object = (EchoService) context.lookup("ejb-test/EchoServiceImpl!org.picketlink.test.trust.ejb.EchoService");

// If everything is ok the Principal name will be added to the message
Assert.assertEquals("Hi UserA", object.echo("Hi "));</programlisting>
                  </informalexample>
                </section>
              </section>
            </section>
            <section id="sid-55476415_ProtectingEJBEndpoints-References">
              
              <title>References</title>
              <itemizedlist>
                <listitem>
                  <para>
                    JBoss AS 5 :
                    <ulink url="https://community.jboss.org/wiki/SAMLEJBIntegrationWithPicketLinkSTS"/>
                  </para>
                </listitem>
              </itemizedlist>
            </section>
          </section>
          <section id="sid-819363">
            
            <title>STS Login Modules</title>
            <para>This page references the PicketLink Login Modules for the Security Token Server.</para>
            <section id="sid-819363_STSLoginModules-References">
              
              <title>References</title>
              <tip>
                <para>
                  <ulink url="http://community.jboss.org/wiki/PicketLinkSTSLoginModules">PicketLink STS Login Modules</ulink>
                  has the required details.
                </para>
              </tip>
            </section>
            <section id="sid-819634">
              
              <title>JBWSTokenIssuingLoginModule</title>
              <section id="sid-819634_JBWSTokenIssuingLoginModule-FullyQualifiedName">
                
                <title>Fully Qualified Name</title>
                <para>
                  org.picketlink.trust.jbossws.jaas.
                  <emphasis role="strong">JBWSTokenIssuingLoginModule</emphasis>
                </para>
              </section>
              <section id="sid-819634_JBWSTokenIssuingLoginModule-Objective">
                
                <title>Objective</title>
                <para>A variant of the PicketLink STSIssuingLoginModule that allows us to:</para>
                <orderedlist>
                  <listitem>
                    <para>Inject BinaryTokenHandler or SAML2Handler or both as client side handlers to the STS WS call.</para>
                  </listitem>
                  <listitem>
                    <para>Inject the JaasSecurityDomainServerSocketFactory  DomainSocketFactory as a request property to the BindingProvider set to the key "org.jboss.ws.socketFactory". This is useful for mutually authenticated SSL with the STS where in we use a trust store defined by a JaasSecurityDomain instance.</para>
                  </listitem>
                </orderedlist>
              </section>
              <section id="sid-819634_JBWSTokenIssuingLoginModule-Configuration">
                
                <title>Configuration</title>
                <para>Options Include:</para>
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="strong">configFile</emphasis>
                      : a properties file that gives details on the STS to the login module. This can be optional if you want to specify values directly.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">handlerChain</emphasis>
                      : Comma separated list of handlers you need to set for handling outgoing message to STS.
                      
                      Values: binary (to inject BinaryTokenHandler), saml2 (to inject SAML2Handler), map (to inject MapBasedTokenHandler) or ï»¿class name of your own handler with default constructor.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">cache.invalidation</emphasis>
                      :  set it to "true" if you want the JBoss auth cache to invalidate caches based on saml token expiry. By default, this value is false.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">inject.callerprincipa</emphasis>
                      l: set it to "true" if the login module should add a group principal called "CallerPrincipal" to the subject. This is useful in JBoss AS for programmatic security in web/ejb components.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">groupPrincipalName</emphasis>
                      :  by default, JBoss AS security uses "Roles" as the group principal name in the subject.  You can give a different value.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">endpointAddress</emphasis>
                      :  endpoint url of STS
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">serviceName</emphasis>
                      :  service Name of STS
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">portName</emphasis>
                      :  port name of STS
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">username</emphasis>
                      :  username of account on STS.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">password</emphasis>
                      : password of account on STS
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">wsaIssuer</emphasis>
                      :  if you need to customize the WS-Addressing Issuer address in the WS-Trust call to the STS.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">wspAppliesTo</emphasis>
                      : if you need to customize the WS-Policy AppliesTo in the WS-Trust call to the STS.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">securityDomainForFactory</emphasis>
                      :  if you have a JaasSecurityDomain mbean service in JBoss AS that provides the truststore.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">map.token.key</emphasis>
                      : key to find binary token in JAAS sharedState map. Defaults to "ClientID".
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">soapBinding</emphasis>
                      : allow to change SOAP binding for SAML reuest.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">requestType</emphasis>
                      : allows to override SAML request type when sending request to STS. Default: "http://docs.oasis-open.org/ws-sx/ws-trust/200512/Issue"
                      
                      Other possible value: "http://docs.oasis-open.org/ws-sx/ws-trust/200512/Validate".
                    </para>
                  </listitem>
                </itemizedlist>
                <para>Note: The configFile option is optional.  If you provide that, then it should be as below.</para>
                <para>Configuration file such as sts-client.properties.</para>
                <para>serviceName=PicketLinkSTS</para>
                <para>portName=PicketLinkSTSPort</para>
                <para>endpointAddress=http://localhost:8080/picketlink-sts/PicketLinkSTS</para>
                <para>username=admin</para>
                <para>password=admin</para>
                <para>wsaIssuer=http://localhost:8080/someissuer</para>
                <para>wspAppliesTo=http://localhost:8080/testws</para>
                <para>
                  <emphasis role="strong">Note:</emphasis>
                </para>
                <itemizedlist>
                  <listitem>
                    <para>
                      the password can be masked according to
                      <ulink url="http://community.jboss.org/wiki/PicketLinkConfigurationMaskpassword"/>
                      which would give us something like,  password=MASK-dsfdsfdslkfh
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      wsaIssuer can be
                      <emphasis role="strong">
                        <emphasis role="italics">optionally</emphasis>
                      </emphasis>
                      added if you want a value for the WS-Addressing issuer in the WS-Trust call to the STS.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      wspAppliesTo can be
                      <emphasis role="strong">
                        <emphasis role="italics">optionally</emphasis>
                      </emphasis>
                      added if you want a value for WS-Policy AppliesTo in the WS-Trust call to the STS.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      serviceName, portName, endpointAddress are
                      <emphasis role="strong">
                        <emphasis role="italics">mandatory</emphasis>
                      </emphasis>
                      .
                    </para>
                  </listitem>
                  <listitem>
                    <para>username and password keys are not needed if you are using mutual authenticated ssl (MASSL) with the STS.</para>
                  </listitem>
                </itemizedlist>
                <section id="sid-819634_JBWSTokenIssuingLoginModule-SSLDomainSocketFactoryinusebytheclientside">
                  
                  <title>SSL DomainSocketFactory in use by the client side</title>
                  <para>Many a times, the login module has to communicate with the STS over a mutually authenticated SSL.  In this case, you want to specify the truststore. JBoss AS provides JaasSecurityDomain mbean to specify truststore. For this reason, there is a special JaasSecurityDomainServerSocketFactory that can be used for making the JBWS calls. Specify the "securityDomainForFactory" module option with the security domain name (in the JaasSecurityDomain mbean service).</para>
                </section>
              </section>
              <section id="sid-819634_JBWSTokenIssuingLoginModule-Exampleconfigurations">
                
                <title>Example  configurations</title>
                <para>Either you specify the module options directly or you can use a properties file for the STS related properties.</para>
                <section id="sid-819634_JBWSTokenIssuingLoginModule-Configurationspecifieddirectly">
                  
                  <title>Configuration specified directly</title>
                  <informalexample>
                    <programlisting>&lt;application-policy name="saml-issue-token"&gt;
 &lt;authentication&gt;
  &lt;login-module code="org.picketlink.identity.federation.core.wstrust.auth.JBWSTokenIssuingLoginModule" flag="required"&gt;

       &lt;module-option name="password-stacking"&gt;useFirstPass&lt;/module-option&gt;

       &lt;module-option name="endpointAddress"&gt;http://somests&lt;/module-option&gt;

        &lt;module-option name="serviceName"&gt;PicketLinkSTS&lt;/module-option&gt;

       &lt;module-option name="portName"&gt;PicketLinkPort&lt;/module-option&gt;

       &lt;module-option name="username"&gt;admin&lt;/module-option&gt;

       &lt;module-option name="password"&gt;admin&lt;/module-option&gt;

       &lt;module-option name="inject.callerprincipal"&gt;true&lt;/module-option&gt;
       &lt;module-option name="groupPrincipalName"&gt;Membership&lt;/module-option&gt;
     &lt;/login-module&gt;
    &lt;/authentication&gt;
&lt;/application-policy&gt;

</programlisting>
                  </informalexample>
                </section>
                <section id="sid-819634_JBWSTokenIssuingLoginModule-ConfigurationwithconfigFileOption">
                  
                  <title>Configuration with configFileOption</title>
                  <informalexample>
                    <programlisting>&lt;application-policy name="saml-issue-token"&gt;
 &lt;authentication&gt;
  &lt;login-module code="org.picketlink.identity.federation.core.wstrust.auth.JBWSTokenIssuingLoginModule" flag="required"&gt;
       &lt;module-option name="configFile"&gt;/sts-client.properties&lt;/module-option&gt;
       &lt;module-option name="password-stacking"&gt;useFirstPass&lt;/module-option&gt;
&lt;module-option name="cache.invalidation"&gt;true&lt;/module-option&gt;
&lt;module-option name="inject.callerprincipal"&gt;true&lt;/module-option&gt;
&lt;module-option name="groupPrincipalName"&gt;Membership&lt;/module-option&gt;
     &lt;/login-module&gt;
    &lt;/authentication&gt;
&lt;/application-policy&gt;</programlisting>
                  </informalexample>
                </section>
                <section id="sid-819634_JBWSTokenIssuingLoginModule-DealingwithRoles">
                  
                  <title>Dealing with Roles</title>
                  <para>If the STS sends roles via Attribute Statements in the SAML assertion, then the user has to use the SAMLRoleLoginModule.</para>
                  <para/>
                  <informalexample>
                    <programlisting>&lt;application-policy name="saml"&gt;
  &lt;authentication&gt;
    &lt;login-module code="org.picketlink.trust.jbossws.jaas.JBWSTokenIssuingLoginModule"  flag="required"&gt;
         &lt;module-option name="endpointAddress"&gt;SOME_URL&lt;/module-option&gt;
         &lt;module-option name="serviceName"&gt;SecurityTokenService&lt;/module-option&gt;
         &lt;module-option name="portName"&gt;RequestSecurityToken&lt;/module-option&gt;
         &lt;module-option name="inject.callerprincipal"&gt;true&lt;/module-option&gt;
         &lt;module-option name="handlerChain"&gt;binary&lt;/module-option&gt;
    &lt;/login-module&gt;
    &lt;login-module code="org.picketlink.trust.jbossws.jaas.SAMLRoleLoginModule"  flag="required"/&gt;
  &lt;/authentication&gt;
&lt;/application-policy&gt;</programlisting>
                  </informalexample>
                  <para>If the STS does not send roles, then the user has to configure a different JAAS login module to pick the roles for the username.  Something like the UsernamePasswordLoginModule.</para>
                  <informalexample>
                    <programlisting>&lt;application-policy xmlns="urn:jboss:security-beans:1.0" name="binary"&gt;
      &lt;authentication&gt;
         &lt;login-module code="org.picketlink.trust.jbossws.jaas.JBWSTokenIssuingLoginModule" flag="required"&gt;
            &lt;module-option name="endpointAddress"&gt;http://localhost:8080/picketlink-sts/PicketLinkSTS&lt;/module-option&gt;
            &lt;module-option name="serviceName"&gt;PicketLinkSTS&lt;/module-option&gt;
            &lt;module-option name="portName"&gt;PicketLinkSTSPort&lt;/module-option&gt;
            &lt;module-option name="inject.callerprincipal"&gt;true&lt;/module-option&gt;
            &lt;module-option name="handlerChain"&gt;binary&lt;/module-option&gt;
            &lt;module-option name="username"&gt;admin&lt;/module-option&gt;
            &lt;module-option name="password"&gt;MASK-0BbleBL2LZk=&lt;/module-option&gt;
            &lt;module-option name="salt"&gt;18273645&lt;/module-option&gt;
            &lt;module-option name="iterationCount"&gt;56&lt;/module-option&gt;
            &lt;module-option name="useOptionsCredentials"&gt;true&lt;/module-option&gt;
            &lt;module-option name="overrideDispatch"&gt;true&lt;/module-option&gt;
            &lt;module-option name="wspAppliesTo"&gt;http://services.testcorp.org/provider1&lt;/module-option&gt;
            &lt;module-option name="wsaIssuer"&gt;http://something&lt;/module-option&gt;
            &lt;module-option name="password-stacking"&gt;useFirstPass&lt;/module-option&gt;
         &lt;/login-module&gt;

         &lt;login-module code="org.jboss.security.auth.spi.UsersRolesLoginModule" flag="required"&gt;
            &lt;module-option name="usersProperties"&gt;sts-users.properties&lt;/module-option&gt;
            &lt;module-option name="rolesProperties"&gt;sts-roles.properties&lt;/module-option&gt;
            &lt;module-option name="password-stacking"&gt;useFirstPass&lt;/module-option&gt;
         &lt;/login-module&gt;
      &lt;/authentication&gt;
   &lt;/application-policy&gt;
</programlisting>
                  </informalexample>
                </section>
              </section>
            </section>
            <section id="sid-2195585">
              
              <title>SAML2STSLoginModule</title>
              <section id="sid-2195585_SAML2STSLoginModule-FQN">
                
                <title>FQN</title>
                <para>
                  org.picketlink.identity.federation.bindings.jboss.auth.
                  <emphasis role="strong">SAML2STSLoginModule</emphasis>
                </para>
              </section>
              <section id="sid-2195585_SAML2STSLoginModule-Author%3A">
                
                <title>Author:</title>
                <para>Stefan Guilhen</para>
              </section>
              <section id="sid-2195585_SAML2STSLoginModule-Objective">
                
                <title>Objective</title>
                <para>This LoginModule authenticates clients by validating their SAML assertions with an external security  token service (such as PicketLinkSTS). If the supplied assertion contains roles, these roles are extracted  and included in the Group returned by the getRoleSets method.</para>
                <para>The LoginModule could be also used to retrieve and validate SAML assertion token from HTTP request header.</para>
              </section>
              <section id="sid-2195585_SAML2STSLoginModule-ModuleOptions">
                
                <title>Module Options</title>
                <para>This module defines the following module options:</para>
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="strong">configFile</emphasis>
                      - this property identifies the properties file that will be used to establish communication with   the external security token service.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">cache.invalidation</emphasis>
                      :  set it to true if you require invalidation of JBoss Auth Cache at SAML Principal expiration.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">jboss.security.security_domain</emphasis>
                      -security domain at which Principal will expire if cache.invalidation is used.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">roleKey</emphasis>
                      : key of the attribute name that we need to use for Roles from the SAML assertion. This can be a comma-separated string values such as (Role,Membership)
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">localValidation</emphasis>
                      : if you want to validate the assertion locally for signature and expiry
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">localValidationSecurityDomain</emphasis>
                      :  the security domain for the trust store information (via the JaasSecurityDomain)
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">tokenEncodingType</emphasis>
                      : encoding type of SAML token delivered via http request's header.
                      
                      Possible values are:
                    </para>
                    <itemizedlist>
                      <listitem>
                        <para>base64 - content encoded as base64. In case of encoding will vary between base64 and gzip use base64 and LoginModule will detect gzipped data.</para>
                      </listitem>
                      <listitem>
                        <para>gzip - gzipped content encoded as base64</para>
                      </listitem>
                      <listitem>
                        <para>none - content not encoded in any way</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">samlTokenHttpHeader</emphasis>
                      - name of http request header to fetch SAML token from. For example: "Authorize"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">samlTokenHttpHeaderRegEx</emphasis>
                      - Java regular expression to be used to get SAML token from "samlTokenHttpHeader". Example: use: .
                      <emphasis role="strong">"(.</emphasis>
                      )".* to parse SAML token from header content like this: SAML_assertion="HHDHS=", at the same time set samlTokenHttpHeaderRegExGroup to 1.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">samlTokenHttpHeaderRegExGroup</emphasis>
                      - Group value to be used when parsing out value of http request header specified by "samlTokenHttpHeader" using "samlTokenHttpHeaderRegEx".
                    </para>
                  </listitem>
                </itemizedlist>
                <informalexample>
                  <programlisting>pattern = Pattern.compile(samlTokenHttpHeaderRegEx, Pattern.DOTALL);
Matcher m = pattern.matcher(content);
m.matches();
m.group(samlTokenHttpHeaderRegExGroup)</programlisting>
                </informalexample>
                <para>Any properties specified besides the above properties are assumed to be used to configure how the STSClient will connect to the STS. For example, the JBossWS StubExt.PROPERTY_SOCKET_FACTORY can be specified in order to inform the socket factory that must be used to connect to the STS. All properties will be set in the request context of the Dispatch instance used by the STSClient to send requests to the STS.</para>
                <para>An example of a configFile can be seen bellow:</para>
                <informalexample>
                  <programlisting>serviceName=PicketLinkSTS
portName=PicketLinkSTSPort
endpointAddress=[http://localhost:8080/picketlink-sts/PicketLinkSTS]
username=JBoss
password=JBoss</programlisting>
                </informalexample>
                <para>The first three properties specify the STS endpoint URL, service name, and port name. The last two properties specify the username and password that are to be used by the application server to authenticate to the STS and have the SAML assertions validated.</para>
                <para>NOTE: Sub-classes can use getSTSClient() method to customize the STSClient class to make calls to STS</para>
              </section>
              <section id="sid-2195585_SAML2STSLoginModule-Examples">
                
                <title>Examples</title>
                <para>Example Configuration 1:</para>
                <informalexample>
                  <programlisting>&lt;application-policy xmlns="urn:jboss:security-beans:1.0" name="cache-test"&gt;
      &lt;authentication&gt;
         &lt;login-module code="org.picketlink.identity.federation.bindings.jboss.auth.SAML2STSLoginModule" flag="required"&gt;
            &lt;module-option name="password-stacking"&gt;useFirstPass&lt;/module-option&gt;
            &lt;module-option name="configFile"&gt;sts-config.properties&lt;/module-option&gt;
            &lt;module-option name="cache.invalidation"&gt;true&lt;/module-option&gt;
            &lt;module-option name="localValidation"&gt;true&lt;/module-option&gt;
            &lt;module-option name="localValidationSecurityDomain"&gt;MASSL&lt;/module-option&gt;
         &lt;/login-module&gt;
      &lt;/authentication&gt;
   &lt;/application-policy&gt;
</programlisting>
                </informalexample>
                <para>Example Configuration 2 using http header and local validation:</para>
                <informalexample>
                  <programlisting>   &lt;application-policy xmlns="urn:jboss:security-beans:1.0" name="service"&gt;
      &lt;authentication&gt;
         &lt;login-module code="org.picketlink.identity.federation.bindings.jboss.auth.SAML2STSLoginModule" flag="required"&gt;
            &lt;module-option name="password-stacking"&gt;useFirstPass&lt;/module-option&gt;
            &lt;module-option name="cache.invalidation"&gt;true&lt;/module-option&gt;
            &lt;module-option name="localValidation"&gt;true&lt;/module-option&gt;
            &lt;module-option name="localValidationSecurityDomain"&gt;java:jaas/localValidationDomain&lt;/module-option&gt;
            &lt;module-option name="tokenEncodingType"&gt;gzip&lt;/module-option&gt;
            &lt;module-option name="samlTokenHttpHeader"&gt;Auth&lt;/module-option&gt;
            &lt;module-option name="samlTokenHttpHeaderRegEx"&gt;.*"(.*)".*&lt;/module-option&gt;
            &lt;module-option name="samlTokenHttpHeaderRegExGroup"&gt;1&lt;/module-option&gt;
         &lt;/login-module&gt;
         &lt;login-module code="org.picketlink.trust.jbossws.jaas.SAMLRoleLoginModule" flag="required"/&gt;
      &lt;/authentication&gt;
   &lt;/application-policy&gt;</programlisting>
                </informalexample>
                <para>In case of local validation here is example of jboss-beans.xml file to use to configure JAAS Security Domain for (JBoss AS6 or EAP5):</para>
                <para/>
                <informalexample>
                  <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;deployment xmlns="urn:jboss:bean-deployer:2.0"&gt;
   &lt;!-- localValidationDomain bean --&gt;
   &lt;bean name="LocalValidationBean" class="org.jboss.security.plugins.JaasSecurityDomain"&gt;
     &lt;constructor&gt;
          &lt;parameter&gt;localValidationDomain&lt;/parameter&gt;
     &lt;/constructor&gt;
     &lt;property name="keyStoreURL"&gt;file://${jboss.server.home.dir}/conf/stspub.jks&lt;/property&gt;
     &lt;property name="keyStorePass"&gt;keypass&lt;/property&gt;
     &lt;property name="keyStoreAlias"&gt;sts&lt;/property&gt;
     &lt;property name="securityManagement"&gt;&lt;inject bean="JNDIBasedSecurityManagement"/&gt;&lt;/property&gt;
   &lt;/bean&gt;
&lt;/deployment&gt;
</programlisting>
                </informalexample>
                <para>For JBoss AS7 or JBoss EAP6 add following security domain to your configuration file:</para>
                <informalexample>
                  <programlisting>
&lt;security-domain name="localValidationDomain"&gt;
      &lt;jsse
         keystore-password="keypass"
         keystore-type="JKS"
         keystore-url="file:///${jboss.server.config.dir}/stspub.jks"
         server-alias="sts"/&gt;
&lt;/security-domain&gt;
</programlisting>
                </informalexample>
                <para>and reference this security domain as: &lt;module-option name="localValidationSecurityDomain"&gt;localValidationDomain&lt;/module-option&gt;.</para>
              </section>
            </section>
            <section id="sid-53380213">
              
              <title>SAMLTokenCertValidatingLoginModule</title>
              <para>
                org.picketlink.identity.federation.bindings.jboss.auth.
                <emphasis role="strong">SAMLTokenCertValidatingLoginModule</emphasis>
              </para>
              <section id="sid-53380213_SAMLTokenCertValidatingLoginModule-Author%3A">
                
                <title>Author:</title>
                <para>Peter Skopek</para>
              </section>
              <section id="sid-53380213_SAMLTokenCertValidatingLoginModule-Objective">
                
                <title>Objective</title>
                <para>This LoginModule authenticates clients by validating their SAML assertions locally. If the supplied assertion contains roles, these roles are extracted  and included in the Group returned by the getRoleSets method.</para>
                <para>The LoginModule is designed to validate SAML token using X509 certificate stored in XML signature within SAML assertion token.</para>
                <para>It validates:</para>
                <orderedlist>
                  <listitem>
                    <para>CertPath against specified truststore. It has to have common valid public certificate in the trusted entries.</para>
                  </listitem>
                  <listitem>
                    <para>X509 certificate stored in SAML token didn't expire</para>
                  </listitem>
                  <listitem>
                    <para>if signature itself is valid</para>
                  </listitem>
                  <listitem>
                    <para>SAML token expiration</para>
                  </listitem>
                </orderedlist>
              </section>
              <section id="sid-53380213_SAMLTokenCertValidatingLoginModule-ModuleOptions">
                
                <title>Module Options</title>
                <para>This module defines the following module options:</para>
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="strong">roleKey</emphasis>
                      : key of the attribute name that we need to use for Roles from the SAML assertion. This can be a comma-separated string values such as (Role,Membership)
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">localValidationSecurityDomain</emphasis>
                      :  the security domain for the trust store information (via the JaasSecurityDomain)
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">cache.invalidation</emphasis>
                      - set it to true if you require invalidation of JBoss Auth Cache at SAML Principal expiration.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">jboss.security.security_domain</emphasis>
                      -security domain at which Principal will expire if cache.invalidation is used.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">tokenEncodingType</emphasis>
                      : encoding type of SAML token delivered via http request's header.
                      
                      Possible values are:
                    </para>
                    <itemizedlist>
                      <listitem>
                        <para>base64 - content encoded as base64. In case of encoding will vary between base64 and gzip use base64 and LoginModule will detect gzipped data.</para>
                      </listitem>
                      <listitem>
                        <para>gzip - gzipped content encoded as base64</para>
                      </listitem>
                      <listitem>
                        <para>none - content not encoded in any way</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">samlTokenHttpHeader</emphasis>
                      - name of http request header to fetch SAML token from. For example: "Authorize"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">samlTokenHttpHeaderRegEx</emphasis>
                      - Java regular expression to be used to get SAML token from "samlTokenHttpHeader". Example: use: .
                      <emphasis role="strong">"(.</emphasis>
                      )".* to parse SAML token from header content like this: SAML_assertion="HHDHS=", at the same time set samlTokenHttpHeaderRegExGroup to 1.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="strong">samlTokenHttpHeaderRegExGroup</emphasis>
                      - Group value to be used when parsing out value of http request header specified by "samlTokenHttpHeader" using "samlTokenHttpHeaderRegEx".
                    </para>
                  </listitem>
                </itemizedlist>
                <informalexample>
                  <programlisting>pattern = Pattern.compile(samlTokenHttpHeaderRegEx, Pattern.DOTALL);
Matcher m = pattern.matcher(content);
m.matches();
m.group(samlTokenHttpHeaderRegExGroup)</programlisting>
                </informalexample>
              </section>
              <section id="sid-53380213_SAMLTokenCertValidatingLoginModule-Examples">
                
                <title>Examples</title>
                <para>Example Configuration 1:</para>
                <informalexample>
                  <programlisting>&lt;application-policy xmlns="urn:jboss:security-beans:1.0" name="certpath"&gt;
Â Â Â Â Â  &lt;authentication&gt;
Â Â Â Â Â Â Â Â  &lt;login-module code="org.picketlink.identity.federation.bindings.jboss.auth.SAMLTokenCertValidatingLoginModule" flag="required"&gt;
Â Â Â Â Â Â Â Â Â Â Â  &lt;module-option name="password-stacking"&gt;useFirstPass&lt;/module-option&gt;
Â Â Â Â Â Â Â Â Â Â Â  &lt;module-option name="cache.invalidation"&gt;true&lt;/module-option&gt;
Â Â Â Â Â Â Â Â Â Â Â  &lt;module-option name="localValidationSecurityDomain"&gt;java:jaas/localValidationDomain&lt;/module-option&gt;
Â Â Â Â Â Â Â Â  &lt;/login-module&gt;
Â Â Â Â Â  &lt;/authentication&gt;
&lt;/application-policy&gt;
</programlisting>
                </informalexample>
                <para>Example Configuration 2 using http header:</para>
                <informalexample>
                  <programlisting>   &lt;application-policy xmlns="urn:jboss:security-beans:1.0" name="service"&gt;
      &lt;authentication&gt;
         &lt;login-module code="org.picketlink.identity.federation.bindings.jboss.auth.SAML2STSLoginModule" flag="required"&gt;
            &lt;module-option name="password-stacking"&gt;useFirstPass&lt;/module-option&gt;
            &lt;module-option name="cache.invalidation"&gt;true&lt;/module-option&gt;
            &lt;module-option name="localValidationSecurityDomain"&gt;java:jaas/localValidationDomain&lt;/module-option&gt;
            &lt;module-option name="tokenEncodingType"&gt;gzip&lt;/module-option&gt;
            &lt;module-option name="samlTokenHttpHeader"&gt;Auth&lt;/module-option&gt;
            &lt;module-option name="samlTokenHttpHeaderRegEx"&gt;.*"(.*)".*&lt;/module-option&gt;
            &lt;module-option name="samlTokenHttpHeaderRegExGroup"&gt;1&lt;/module-option&gt;
         &lt;/login-module&gt;
      &lt;/authentication&gt;
   &lt;/application-policy&gt;</programlisting>
                </informalexample>
                <para>Example of jboss-beans.xml file to use to configure JAAS Security Domain containing trust store for above examples:</para>
                <informalexample>
                  <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;deployment xmlns="urn:jboss:bean-deployer:2.0"&gt;
   &lt;!-- localValidationDomain bean --&gt;
   &lt;bean name="LocalValidationBean" class="org.jboss.security.plugins.JaasSecurityDomain"&gt;
     &lt;constructor&gt;
          &lt;parameter&gt;localValidationDomain&lt;/parameter&gt;
     &lt;/constructor&gt;
     &lt;property name="keyStoreURL"&gt;file://${jboss.server.home.dir}/conf/stspub.jks&lt;/property&gt;
     &lt;property name="keyStorePass"&gt;keypass&lt;/property&gt;
     &lt;property name="keyStoreAlias"&gt;sts&lt;/property&gt;
     &lt;property name="securityManagement"&gt;&lt;inject bean="JNDIBasedSecurityManagement"/&gt;&lt;/property&gt;
   &lt;/bean&gt;
&lt;/deployment&gt;
</programlisting>
                </informalexample>
              </section>
            </section>
            <section id="sid-2195579">
              
              <title>STSValidatingLoginModule</title>
              <section id="sid-2195579_STSValidatingLoginModule-FQN%3A">
                
                <title>FQN:</title>
                <para>org.picketlink.identity.federation.core.wstrust.auth.STSValidatingLoginModule</para>
              </section>
              <section id="sid-2195579_STSValidatingLoginModule-Author%3A">
                
                <title>Author:</title>
                <para>Daniel Bevenius</para>
              </section>
              <section id="sid-2195579_STSValidatingLoginModule-Objective%2FFeatures%3A">
                
                <title>Objective/Features:</title>
                <itemizedlist>
                  <listitem>
                    <para>Calls the configured STS and validates an available security token.</para>
                  </listitem>
                </itemizedlist>
                <itemizedlist>
                  <listitem>
                    <para>A call to STS typically requires authentication. This LoginModule uses credentials from one of the following sources:</para>
                    <itemizedlist>
                      <listitem>
                        <para>
                          Its properties file, if the
                          <emphasis role="italics">useOptionsCredentials</emphasis>
                          module-option is set to true
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Previous login module credentials if the
                          <emphasis role="italics">password-stacking</emphasis>
                          module-option is set to useFirstPass
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          From the configured
                          <emphasis role="italics">CallbackHandler</emphasis>
                          by supplying a
                          <emphasis role="italics">Name</emphasis>
                          and
                          <emphasis role="italics">Password</emphasis>
                          <emphasis role="italics">Callback</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                  <listitem>
                    <para>Upon  successful authentication, the SamlCredential is inserted in the  Subject's public credentials if one with the same Assertion is not found  to be already present there.</para>
                  </listitem>
                  <listitem>
                    <para>
                      New features included since 1.0.4 based on
                      <ulink url="https://jira.jboss.org/browse/PLFED-87">PLFED-87</ulink>
                      :
                    </para>
                    <itemizedlist>
                      <listitem>
                        <para>If a Principal MappingProvider is configured, retrieves and inserts the Principal into the Subject</para>
                      </listitem>
                      <listitem>
                        <para>If a RoleGroup MappingProvider is configured, retrieves and inserts the user roles into the Subject</para>
                      </listitem>
                      <listitem>
                        <para>Roles  can only be returned if they are included in the  Security Token.  Configure your STS to return roles through an  AttributeProvider</para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </itemizedlist>
              </section>
            </section>
          </section>
        </section>
      </section>
    <section id="sid-819395">
      
      <title>Extensions</title>
      
      <section id="sid-819395_Extensions-Extensions">
        
        <title>Extensions</title>
        <para>This page shows all the extensions and customizations available in the PicketLink project.</para>
      </section>
      <section id="sid-819397">
        
        <title>PicketLinkAuthenticator</title>
        
        <section id="sid-819397_PicketLinkAuthenticator-PicketLinkAuthenticator">
          
          <title>PicketLinkAuthenticator</title>
          <section id="sid-819397_PicketLinkAuthenticator-FQN">
            
            <title>FQN</title>
            <para>org.picketlink.identity.federation.bindings.tomcat.PicketLinkAuthenticator</para>
          </section>
          <section id="sid-819397_PicketLinkAuthenticator-Objective">
            
            <title>Objective</title>
            <para>An authenticator that delegates actual authentication to a realm, and in turn to a security manager, by presenting a "conventional" identity. The security manager must accept the conventional identity and generate the real identity for the authenticated principal.</para>
          </section>
          <section id="sid-819397_PicketLinkAuthenticator-JBossApplicationServer7.xConfiguration">
            
            <title>JBoss Application Server 7.x Configuration</title>
            <para>Your web.xml will define some security constraints. But it will define a &lt;login-config&gt; that is different from the servlet specifcation mandated BASIC, CLIENT-CERT, FORM or DIGEST methods.  We suggest the use of SECURITY_DOMAIN as the method.</para>
            <informalexample>
              <programlisting>&lt;security-constraint&gt;
    &lt;web-resource-collection&gt;
        &lt;web-resource-name&gt;Restricted Access - Get Only&lt;/web-resource-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
        &lt;http-method&gt;GET&lt;/http-method&gt;
    &lt;/web-resource-collection&gt;
    &lt;auth-constraint&gt;
 	&lt;role-name&gt;STSClient&lt;/role-name&gt;
    &lt;/auth-constraint&gt;
    &lt;user-data-constraint&gt;
        &lt;transport-guarantee&gt;NONE&lt;/transport-guarantee&gt;
    &lt;/user-data-constraint&gt;
&lt;/security-constraint&gt;

&lt;security-role&gt;
    &lt;role-name&gt;STSClient&lt;/role-name&gt;
&lt;/security-role&gt;

&lt;login-config&gt;
    &lt;auth-method&gt;SECURITY_DOMAIN&lt;/auth-method&gt;
    &lt;realm-name&gt;SECURITY_DOMAIN&lt;/realm-name&gt;
    &lt;form-login-config&gt;
	&lt;form-login-page&gt;/login.html&lt;/form-login-page&gt;
	&lt;form-error-page&gt;/error.html&lt;/form-error-page&gt;
    &lt;/form-login-config&gt;
&lt;/login-config&gt;</programlisting>
            </informalexample>
            <important>
              <para>
                Note that we defined two pages in the
                <emphasis role="strong">&lt;form-login-config&gt;</emphasis>
                :
                <emphasis role="strong">login.html</emphasis>
                and
                <emphasis role="strong">error.html</emphasis>
                . Both pages must exists inside your deployment.
              </para>
            </important>
            <para>
              Change your WEB-INF/jboss-web.xml to configure the
              <emphasis role="italics">PicketLinkAuthenticator</emphasis>
              as a valve:
            </para>
            <informalexample>
              <programlisting>&lt;jboss-web&gt;
	&lt;security-domain&gt;authenticator&lt;/security-domain&gt;
	&lt;context-root&gt;authenticator&lt;/context-root&gt;
	&lt;valve&gt;
		&lt;class-name&gt;org.picketlink.identity.federation.bindings.tomcat.PicketLinkAuthenticator
		&lt;/class-name&gt;
	&lt;/valve&gt;
&lt;/jboss-web&gt;</programlisting>
            </informalexample>
            <para>
              We also defined a
              <emphasis role="strong">&lt;security-domain&gt;</emphasis>
              configuration with the name of the security domain that you configured in your standalone.xml:
            </para>
            <informalexample>
              <programlisting>&lt;security-domain name="authenticator" cache-type="default"&gt;
    &lt;authentication&gt;
        &lt;login-module code="org.picketlink.test.trust.loginmodules.TestRequestUserLoginModule" flag="required"&gt;
            &lt;module-option name="usersProperties" value="users.properties"/&gt;
            &lt;module-option name="rolesProperties" value="roles.properties"/&gt;
        &lt;/login-module&gt;
    &lt;/authentication&gt;
&lt;/security-domain&gt;</programlisting>
            </informalexample>
            <tip>
              <para>To use PicketLink you need to define it as a module dependency using the META-INF/jboss-deployment-structure.xml.</para>
            </tip>
          </section>
          <section id="sid-819397_PicketLinkAuthenticator-JBossApplicationServer5.xConfiguration">
            
            <title>JBoss Application Server 5.x Configuration</title>
            <para>Your web.xml will define some security constraints. But it will define a &lt;login-config&gt; that is different from the servlet specifcation mandated BASIC, CLIENT-CERT, FORM or DIGEST methods.  We suggest the use of SECURITY-DOMAIN as the method.</para>
            <para>Create a context.xml in your WEB-INF directory of your web-archive.</para>
            <informalexample>
              <programlisting>&lt;Context&gt;
  &lt;Valve className="org.picketlink.identity.federation.bindings.tomcat.PicketLinkAuthenticator" /&gt;
&lt;/Context&gt;
</programlisting>
            </informalexample>
            <para>
              Your web.xml may look as follows:
              
            </para>
            <informalexample>
              <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;web-app version="2.4"
   xmlns="http://java.sun.com/xml/ns/j2ee"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
   http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"&gt;

   &lt;description&gt;Sales Application&lt;/description&gt;

   &lt;security-constraint&gt;
      &lt;display-name&gt;Restricted&lt;/display-name&gt;
      &lt;web-resource-collection&gt;
         &lt;web-resource-name&gt;Restricted Access&lt;/web-resource-name&gt;
         &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
      &lt;/web-resource-collection&gt;
      &lt;auth-constraint&gt;
         &lt;role-name&gt;Sales&lt;/role-name&gt;
      &lt;/auth-constraint&gt;
      &lt;user-data-constraint&gt;
         &lt;transport-guarantee&gt;NONE&lt;/transport-guarantee&gt;
      &lt;/user-data-constraint&gt;
   &lt;/security-constraint&gt;

   &lt;security-role&gt;
      &lt;role-name&gt;Sales&lt;/role-name&gt;
   &lt;/security-role&gt;

   &lt;login-config&gt;
      &lt;auth-method&gt;SECURITY-DOMAIN&lt;/auth-method&gt;
   &lt;/login-config&gt;
&lt;/web-app&gt;
</programlisting>
            </informalexample>
            <para>
              
            </para>
            <warning>
              <para>NOTE: The use of SECURITY-DOMAIN as the auth-method.</para>
            </warning>
            <para>The war should be packaged as a regular web archive.</para>
            <section id="sid-819397_PicketLinkAuthenticator-DefaultConfigurationatGlobalLevel">
              
              <title>Default Configuration at Global Level</title>
              <para>If you have a large number of web applications and it is not practical to include context.xml in all the war files, then you can configure the "authenticators" attribute in the war-deployers-jboss-beans.xml file in /server/default/deployers/jbossweb.deployer/META-INF of your JBoss AS instance.</para>
              <informalexample>
                <programlisting>&lt;property name="authenticators"&gt;
         &lt;map class="java.util.Properties" keyClass="java.lang.String" valueClass="java.lang.String"&gt;
            &lt;entry&gt;
               &lt;key&gt;BASIC&lt;/key&gt;
               &lt;value&gt;org.apache.catalina.authenticator.BasicAuthenticator&lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
               &lt;key&gt;CLIENT-CERT&lt;/key&gt;
               &lt;value&gt;org.apache.catalina.authenticator.SSLAuthenticator&lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
               &lt;key&gt;DIGEST&lt;/key&gt;
               &lt;value&gt;org.apache.catalina.authenticator.DigestAuthenticator&lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
               &lt;key&gt;FORM&lt;/key&gt;
               &lt;value&gt;org.apache.catalina.authenticator.FormAuthenticator&lt;/value&gt;
            &lt;/entry&gt;
            &lt;entry&gt;
               &lt;key&gt;NONE&lt;/key&gt;
               &lt;value&gt;org.apache.catalina.authenticator.NonLoginAuthenticator&lt;/value&gt;
            &lt;/entry&gt;
               &lt;key&gt;SECURITY-DOMAIN&lt;/key&gt;
               &lt;value&gt;org.picketlink.identity.federation.bindings.tomcat.PicketLinkAuthenticator&lt;/value&gt;
            &lt;/entry&gt;

         &lt;/map&gt;
      &lt;/property&gt;
</programlisting>
              </informalexample>
            </section>
            <section id="sid-819397_PicketLinkAuthenticator-Testing">
              
              <title>Testing</title>
              <orderedlist>
                <listitem>
                  <para>Go to the deploy directory.</para>
                </listitem>
                <listitem>
                  <para>cp -R jmx-console.war  test.war</para>
                </listitem>
                <listitem>
                  <para>In deploy/test.war/WEB-INF/web.xml,  change the auth-method  element to SECURITY-DOMAIN.</para>
                </listitem>
                <listitem>
                  <informalexample>
                    <programlisting>&lt;login-config&gt;
      &lt;auth-method&gt;SECURITY-DOMAIN&lt;/auth-method&gt;
      &lt;realm-name&gt;JBoss JMX Console&lt;/realm-name&gt;
   &lt;/login-config&gt;
</programlisting>
                  </informalexample>
                </listitem>
                <listitem>
                  <para>Also uncomment the security constraints in web.xml.  It should look as follows.</para>
                </listitem>
                <listitem>
                  <informalexample>
                    <programlisting>&lt;!-- A security constraint that restricts access to the HTML JMX console
   to users with the role JBossAdmin. Edit the roles to what you want and
   uncomment the WEB-INF/jboss-web.xml/security-domain element to enable
   secured access to the HTML JMX console.
   --&gt;
   &lt;security-constraint&gt;
     &lt;web-resource-collection&gt;
       &lt;web-resource-name&gt;HtmlAdaptor&lt;/web-resource-name&gt;
       &lt;description&gt;An example security config that only allows users with the
         role JBossAdmin to access the HTML JMX console web application
       &lt;/description&gt;
       &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
       &lt;http-method&gt;GET&lt;/http-method&gt;
       &lt;http-method&gt;POST&lt;/http-method&gt;
     &lt;/web-resource-collection&gt;
     &lt;auth-constraint&gt;
       &lt;role-name&gt;JBossAdmin&lt;/role-name&gt;
     &lt;/auth-constraint&gt;
   &lt;/security-constraint&gt;
</programlisting>
                  </informalexample>
                </listitem>
                <listitem>
                  <para>In the /server/default/conf/jboss-log4j.xml , add trace category  for org.jboss.security.</para>
                </listitem>
                <listitem>
                  <para>Start JBoss AS.</para>
                </listitem>
                <listitem>
                  <para>
                    Go to the following url:
                    <ulink url="http://localhost:8080/test/"/>
                  </para>
                </listitem>
                <listitem>
                  <para>You should see a HTTP 403 message.</para>
                </listitem>
                <listitem>
                  <para>If you look inside the log,   log/server.log,   you will see the following exception trace:</para>
                </listitem>
                <listitem>
                  <informalexample>
                    <programlisting>2011-04-20 11:02:01,714 TRACE [org.jboss.security.plugins.auth.JaasSecurityManagerBase.jmx-console] (http-127.0.0.1-8080-1) Login failure
javax.security.auth.login.FailedLoginException: Password Incorrect/Password Required
        at org.jboss.security.auth.spi.UsernamePasswordLoginModule.login(UsernamePasswordLoginModule.java:252)
        at org.jboss.security.auth.spi.UsersRolesLoginModule.login(UsersRolesLoginModule.java:152)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at javax.security.auth.login.LoginContext.invoke(LoginContext.java:769)
        at javax.security.auth.login.LoginContext.access$000(LoginContext.java:186)
        at javax.security.auth.login.LoginContext$4.run(LoginContext.java:683)
        at java.security.AccessController.doPrivileged(Native Method)
        at javax.security.auth.login.LoginContext.invokePriv(LoginContext.java:680)
        at javax.security.auth.login.LoginContext.login(LoginContext.java:579)
        at org.jboss.security.plugins.auth.JaasSecurityManagerBase.defaultLogin(JaasSecurityManagerBase.java:552)
        at org.jboss.security.plugins.auth.JaasSecurityManagerBase.authenticate(JaasSecurityManagerBase.java:486)
        at org.jboss.security.plugins.auth.JaasSecurityManagerBase.isValid(JaasSecurityManagerBase.java:365)
        at org.jboss.security.plugins.JaasSecurityManager.isValid(JaasSecurityManager.java:160)
        at org.jboss.web.tomcat.security.JBossWebRealm.authenticate(JBossWebRealm.java:384)
        at org.picketlink.identity.federation.bindings.tomcat.PicketLinkAuthenticator.authenticate(PicketLinkAuthenticator.java:104)
        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:491)
        at org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:92)
        at org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.process(SecurityContextEstablishmentValve.java:126)
        at org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.invoke(SecurityContextEstablishmentValve.java:70)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.jboss.web.tomcat.service.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:158)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:330)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:829)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:598)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
        at java.lang.Thread.run(Thread.java:662)
</programlisting>
                  </informalexample>
                  <para>As you can see from the stack trace,  PicketLinkAuthenticator method has been kicked in.</para>
                </listitem>
              </orderedlist>
            </section>
          </section>
        </section>
      </section>
    </section>
    <section id="sid-26706104">
      
      <title>PicketLink API</title>
      <section id="sid-26706106">
        
        <title>Working with SAML Assertions</title>
        <section id="sid-26706106_WorkingwithSAMLAssertions-Introduction">
          
          <title>Introduction</title>
          <para>This page shows you how to use the PicketLink API to programatically work with SAML Assertions.</para>
          <para>The examples above demonstrates the following scenarios:</para>
          <itemizedlist>
            <listitem>
              <para>How to parse a XML to a PicketLink AssertionType</para>
            </listitem>
            <listitem>
              <para>How to sign SAML Assertions</para>
            </listitem>
            <listitem>
              <para>How to validate SAML Assertions</para>
            </listitem>
          </itemizedlist>
          <para>The following API classes were used:</para>
          <itemizedlist>
            <listitem>
              <para>org.picketlink.identity.federation.saml.v2.assertion.AssertionType</para>
            </listitem>
            <listitem>
              <para>org.picketlink.identity.federation.core.saml.v2.util.AssertionUtil</para>
            </listitem>
            <listitem>
              <para>org.picketlink.identity.federation.core.parsers.saml.SAMLParser</para>
            </listitem>
            <listitem>
              <para>org.picketlink.identity.federation.core.saml.v2.writers.SAMLAssertionWriter</para>
            </listitem>
            <listitem>
              <para>org.picketlink.identity.federation.api.saml.v2.sig.SAML2Signature</para>
            </listitem>
            <listitem>
              <para>org.picketlink.identity.federation.core.impl.KeyStoreKeyManager</para>
            </listitem>
          </itemizedlist>
          <important>
            <para>Please, check the javadoc for more informations about these classes.</para>
          </important>
        </section>
        <section id="sid-26706106_WorkingwithSAMLAssertions-ParsingSAMLAssertions">
          
          <title>Parsing SAML Assertions</title>
          <para>
            The PicketLink API provides the
            <emphasis role="strong">org.picketlink.identity.federation.saml.v2.assertion.AssertionType</emphasis>
            class to encapsulate the informations parsed from a SAML Assertion.
          </para>
          <para>Let's suppose we have the following SAML Assertion:</para>
          <para/>
          <informalexample>
            <programlisting>&lt;saml:Assertion xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" ID="ID_75291c31-93f7-4f7f-8422-aacdb07466ee" IssueInstant="2012-05-25T10:40:58.912-03:00" Version="2.0"&gt;
    &lt;saml:Issuer&gt;http: //192.168.1.1:8080/idp-sig/&lt;/saml:Issuer&gt;Â 
    &lt;saml:Subject&gt;Â 
        &lt;saml:NameID Format="urn:oasis:names:tc:SAML:2.0:nameid-format:persistent"&gt;user&lt;/saml:NameID&gt;
        &lt;saml:SubjectConfirmation Method="urn:oasis:names:tc:SAML:2.0:cm:bearer"&gt;Â 
            &lt;saml:SubjectConfirmationData InResponseTo="ID_326a389f-6a8a-4712-b71d-77aa9c36795c" NotBefore="2012-05-25T10:40:58.894-03:00" NotOnOrAfter="2012-05-25T10:41:00.912-03:00" Recipient="http://192.168.1.4:8080/fake-sp" /&gt;Â 
        &lt;/saml:SubjectConfirmation&gt;Â 
    &lt;/saml:Subject&gt;Â 
    &lt;saml:Conditions NotBefore="2012-05-25T10:40:57.912-03:00" NotOnOrAfter="2012-05-25T10:41:00.912-03:00" /&gt;Â 
    &lt;saml:AuthnStatement AuthnInstant="2012-05-25T10:40:58.981-03:00"&gt;Â 
        &lt;saml:AuthnContext&gt;Â 
            &lt;saml:AuthnContextClassRef&gt;urn:oasis:names:tc:SAML:2.0:ac:classes:Password&lt;/saml:AuthnContextClassRef&gt;Â 
        &lt;/saml:AuthnContext&gt;Â 
    &lt;/saml:AuthnStatement&gt;Â 
    &lt;saml:AttributeStatement&gt;Â 
        &lt;saml:Attribute Name="Role"&gt;Â 
            &lt;saml:AttributeValue xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string"&gt;test-role1&lt;/saml:AttributeValue&gt;Â 
        &lt;/saml:Attribute&gt;Â 
        &lt;saml:Attribute Name="Role"&gt;Â 
            &lt;saml:AttributeValue xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string"&gt;test-role2&lt;/saml:AttributeValue&gt;
        &lt;/saml:Attribute&gt;Â 
        &lt;saml:Attribute Name="Role"&gt;Â 
            &lt;saml:AttributeValue xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string"&gt;test-role3&lt;/saml:AttributeValue&gt;
        &lt;/saml:Attribute&gt;
    &lt;/saml:AttributeStatement&gt;
&lt;/saml:Assertion&gt;</programlisting>
          </informalexample>
          <para>The code to parse this XML is:</para>
          <informalexample>
            <programlisting>/**
Â  Â  Â * &lt;p&gt;
Â  Â  Â * Parses a SAML Assertion XML representation and convert it to a {@link AssertionType} instance.
Â  Â  Â * &lt;/p&gt;
Â  Â  Â *Â 
Â  Â  Â * @throws Exception
Â  Â  Â */   Â 
    @Test
    public void testParseAssertion() throws Exception {
        // get a InputStream from the source XML file
        InputStream samlAssertionInputStream = getSAMLAssertion();

        SAMLParser samlParser = new SAMLParser();

        Object parsedObject = samlParser.parse(samlAssertionInputStream);

        Assert.assertNotNull(parsedObject);
        Assert.assertTrue(parsedObject.getClass().equals(AssertionType.class));

        // cast the parsed object to the expected type, in this case AssertionType
        AssertionType assertionType = (AssertionType) parsedObject;

        // checks if the Assertion has expired.
        Assert.assertTrue(AssertionUtil.hasExpired(assertionType));

        // let's write the parsed assertion to the sysout
        ByteArrayOutputStream baos = new ByteArrayOutputStream();

        SAMLAssertionWriter writer = new SAMLAssertionWriter(StaxUtil.getXMLStreamWriter(baos));

        writer.write(assertionType);

        System.out.println(new String(baos.toByteArray()));
    }</programlisting>
          </informalexample>
        </section>
        <section id="sid-26706106_WorkingwithSAMLAssertions-SigningaSAMLAssertion">
          
          <title>Signing a SAML Assertion</title>
          <para>
            The PicketLink API provides the
            <emphasis role="strong">org.picketlink.identity.federation.api.saml.v2.sig.SAML2Signature</emphasis>
            to help during signature generation/validation for SAML Assertions.
          </para>
          <informalexample>
            <programlisting>/**
     * &lt;p&gt;
     * Signs a SAML Assertion.
     * &lt;/p&gt;
     *
     * @throws Exception
     */
    @Test
    public void testSignAssertion() throws Exception {
        InputStream samlAssertionInputStream = getSAMLAssertion();
       Â 
        // convert the InputStream to a DOM Document
        Document document = DocumentUtil.getDocument(samlAssertionInputStream);

        SAML2Signature samlSignature = new SAML2Signature();
       Â 
        // get the key store manager instance.
        KeyStoreKeyManager keyStoreKeyManager = getKeyStoreManager();

        samlSignature.signSAMLDocument(document, keyStoreKeyManager.getSigningKeyPair());
       Â 
        // let's print the signed assertion to the sysout
        System.out.println(DocumentUtil.asString(document));
    }</programlisting>
          </informalexample>
          <para>
            As you can see, we need to create a instance of
            <emphasis role="strong">org.picketlink.identity.federation.core.impl.KeyStoreKeyManager</emphasis>
            from where the certificates will be retrieved from. The code bellow shows you how to create it:
          </para>
          <informalexample>
            <programlisting>Â     /**
     * &lt;p&gt;
     * Creates a {@link KeyStoreKeyManager} instance.
     * &lt;/p&gt;
     *
     * @throws Exception
     */
    private KeyStoreKeyManager getKeyStoreManager()Â 
        throws TrustKeyConfigurationException, TrustKeyProcessingException {

        KeyStoreKeyManager keyStoreKeyManager = new KeyStoreKeyManager();

        ArrayList&lt;AuthPropertyType&gt; authProperties = new ArrayList&lt;AuthPropertyType&gt;();

        authProperties.add(createAuthProperty(KeyStoreKeyManager.KEYSTORE_URL, Thread.currentThread().getContextClassLoader().getResource("./keystore/jbid_test_keystore.jks").getFile()));
        authProperties.add(createAuthProperty(KeyStoreKeyManager.KEYSTORE_PASS, "store123"));

        authProperties.add(createAuthProperty(KeyStoreKeyManager.SIGNING_KEY_ALIAS, "servercert"));
        authProperties.add(createAuthProperty(KeyStoreKeyManager.SIGNING_KEY_PASS, "test123"));

        keyStoreKeyManager.setAuthProperties(authProperties);

        return keyStoreKeyManager;
    }

    public AuthPropertyType createAuthProperty(String key, String value) {
Â  Â  Â  Â  AuthPropertyType authProperty = new AuthPropertyType();

Â  Â  Â  Â  authProperty.setKey(key);
Â  Â  Â  Â  authProperty.setValue(value);

Â  Â  Â  Â  return authProperty;
Â  Â  }
</programlisting>
          </informalexample>
        </section>
        <section id="sid-26706106_WorkingwithSAMLAssertions-ValidatingaSignedSAMLAssertion">
          
          <title>Validating a Signed SAML Assertion</title>
          <para>The code to validate signatures is almost the same for signing. You still need a KeyStoreKeyManager instance.</para>
          <informalexample>
            <programlisting>/**
     * &lt;p&gt;
     * Validates a SAML Assertion.
     * &lt;/p&gt;
     *
     * @throws Exception
     */
    @Test
    public void testValidateSignatureAssertion() throws Exception {
        InputStream samlAssertionInputStream = getSAMLSignedAssertion();

        KeyStoreKeyManager keyStoreKeyManager = getKeyStoreManager();

        Document signedDocument = DocumentUtil.getDocument(samlAssertionInputStream);

        boolean isValidSignature = AssertionUtil.isSignatureValid(signedDocument.getDocumentElement(), keyStoreKeyManager.getSigningKeyPair().getPublic());

        Assert.assertTrue(isValidSignature);
    }</programlisting>
          </informalexample>
        </section>
      </section>
    </section>
    <section id="sid-50004108">
      
      <title>3rd party integration</title>
      <para>Common scenario is to use Picketlink as both Identity Provider (IDP) and Service Provider (SP), but sometimes it may be useful to integrate with 3rd party vendors as well. If your company is using services provided by 3rd party vendors like SalesForce or Google Apps, then SSO with these vendors may be real benefit for you.</para>
      <para>We support these scenarios:</para>
      <itemizedlist>
        <listitem>
          <para>
            <ulink url="https://docs.jboss.org/author/display/PLINK/Picketlink+as+IDP%2C+Salesforce+as+SP">Picketlink as IDP, Salesforce as SP</ulink>
          </para>
        </listitem>
      </itemizedlist>
      <itemizedlist>
        <listitem>
          <para>
            <ulink url="https://docs.jboss.org/author/display/PLINK/Picketlink+as+IDP%2C+Google+Apps+as+SP">Picketlink as IDP, Google Apps as SP</ulink>
          </para>
        </listitem>
      </itemizedlist>
      <itemizedlist>
        <listitem>
          <para>
            <ulink url="https://docs.jboss.org/author/display/PLINK/Picketlink+as+SP%2C+Salesforce+as+IDP">Picketlink as SP, Salesforce as IDP</ulink>
          </para>
        </listitem>
      </itemizedlist>
      <section id="sid-50004110">
        
        <title>Picketlink as IDP, Salesforce as SP</title>
        <para>
          In first scenario we will use Salesforce as SAML SP and we will use Picketlink application as SAML IDP. In this tutorial, we will reuse application
          <emphasis role="strong">idp-sig.war</emphasis>
          from
          <ulink url="https://docs.jboss.org/author/display/PLINK/PicketLink+Quickstarts#PicketLinkQuickstarts-AbouttheQuickstarts">Picketlink quickstarts</ulink>
          .
        </para>
        <sidebar>
          <para>NOTE: Integration is working from Picketlink version 2.1.2.Final and newer</para>
        </sidebar>
        <section id="sid-50004110_PicketlinkasIDP%2CSalesforceasSP-Salesforcesetup">
          
          <title>Salesforce setup</title>
          <para>First you need to perform some actions on Salesforce side. Brief description is here. For more details, you can see Salesforce documentation.</para>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis role="strong">Register Salesforce account</emphasis>
                - You will need to register in Salesforce with free developer account. You can do it
                <ulink url="http://developer.force.com/">here</ulink>
                .
              </para>
            </listitem>
            <listitem>
              <para>
                <emphasis role="strong">Register your salesforce domain</emphasis>
                - Salesforce supports SP-initiated SAML login workflow or IDP-initiated SAML login workflow. For picketlink integration, we will use SP-initiated login workflow, where user needs to access Salesforce and Salesforce will send SAMLRequest to Picketlink IDP. For achieving this, you need to create Salesforce domain. When registered and logged in
                <ulink url="http://www.salesforce.com">www.salesforce.com</ulink>
                ,  you will need to click on Your name in right top corner -&gt; Link
                <emphasis role="strong">Setup</emphasis>
                -&gt; Link
                <emphasis role="strong">Company Profile</emphasis>
                -&gt; Link
                <emphasis role="strong">My Domain</emphasis>
                . Here you can create your Salesforce domain and make it available for testing.
              </para>
            </listitem>
            <listitem>
              <para>
                <emphasis role="strong">SAML SSO configuration</emphasis>
                - Now you need again to click on Your name in right top corner -&gt; Link
                <emphasis role="strong">Setup</emphasis>
                -&gt; Link
                <emphasis role="strong">Security controls</emphasis>
                -&gt; Link
                <emphasis role="strong">Single Sign-On Settings</emphasis>
                
                Then configure it as follows:
              </para>
              <itemizedlist>
                <listitem>
                  <para>
                    <emphasis role="strong">SAML Enabled</emphasis>
                    checkbox needs to be checked
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <emphasis role="strong">SAML Version</emphasis>
                    needs to be 2.0
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <emphasis role="strong">Issuer</emphasis>
                    needs to be
                    <emphasis role="italics">
                      <ulink url="http://localhost:8080/idp-sig/_">http://localhost:8080/idp-sig/</ulink>
                    </emphasis>
                    <emphasis role="italics">-</emphasis>
                    This identifies issuer, which will be used as IDP for salesforce. NOTE: Be sure that URL really ends with "/" character.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <emphasis role="strong">Identity Provider Login URL</emphasis>
                    also needs to be
                    <ulink url="http://localhost:8080/idp-sig/_">http://localhost:8080/idp-sig/</ulink>
                    - This identifies URL where Salesforce SP will send it's SAMLRequest for login.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <emphasis role="strong">Identity Provider Logout URL</emphasis>
                    points to URL where Salesforce redirects user after logout. You may also use your IDP address or something different according to your needs.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <emphasis role="strong">Subject mapping</emphasis>
                    - You need to configure how to map Subject from SAMLResponse, which will be send by Picketlink IDP, to Salesforce user account. In the example, we will use that SAMLResponse will contain information about Subject in "NameIdentifier" element of SAMLResponse and ID of subject will be mapped to Salesforce Federation ID of particular user. So in:
                    
                    <emphasis role="strong">SAML User ID Type</emphasis>
                    , you need to check option
                    <emphasis role="italics">Assertion contains the Federation ID from the User object</emphasis>
                    and for
                    <emphasis role="strong">SAML User ID Location</emphasis>
                    , you need to check
                    <emphasis role="italics">User ID is in the NameIdentifier element of the Subject statement</emphasis>
                    .
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <emphasis role="strong">Entity ID</emphasis>
                    - Here we will use
                    <ulink url="https://saml.salesforce.com_">https://saml.salesforce.com</ulink>
                    . Whole configuration can look as follows:
                  </para>
                  <figure>
<title>TODO InformalFigure image title empty</title>
                    <mediaobject>
                      <imageobject>
                        <imagedata fileref="diagrams/federation/salesforce-sso-screenshot.png"/>
                      </imageobject>
                    </mediaobject>
                  </figure>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis role="strong">Certificate</emphasis>
                - Last very important thing is upload of your certificate to Salesforce, because Salesforce needs to verify signature on SAMLResponse sent from your Picketlink Identity Provider. So first you need to export certificate from your keystore file and then import this certificate into Salesforce. So in
                <emphasis role="strong">idp-sig.war/WEB-INF/classes</emphasis>
                you can run command like:
              </para>
            </listitem>
          </itemizedlist>
          <informalexample>
            <programlisting>
keytool -export -keystore jbid_test_keystore.jks -alias servercert -file test-certificate.crt
</programlisting>
          </informalexample>
          <para>
            after typing keystore password
            <emphasis role="italics">store123</emphasis>
            you should see exported certificate in file
            <emphasis role="italics">test-certificate.crt .</emphasis>
          </para>
          <sidebar>
            <para>
              <emphasis role="strong">WARNING:</emphasis>
              For production environment in salesforce, you should generate your own keystore file and use certificate from your own file instead of the default picketlink
              <emphasis role="italics">jbid_test_keystore.jks</emphasis>
            </para>
          </sidebar>
          <para>
            Then you can import this certificate
            <emphasis role="italics">test-certificate.crt</emphasis>
            into SalesForce via menu with SSO configuration.
          </para>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis role="strong">Adding users</emphasis>
                - Last action you need to do in Salesforce is to add some users. You can do it in: Link
                <emphasis role="strong">Setup</emphasis>
                -&gt; Link
                <emphasis role="strong">Manage Users</emphasis>
                -&gt; Link
                <emphasis role="strong">Users</emphasis>
                . Now you can create user and fill some values as you want. Please note that username must be in form of email address. Note that
                <emphasis role="italics">Federation ID</emphasis>
                is the value, which is used for mapping the user with the NameIdentifier subject from SAML assertion, which will be sent from Picketlink IDP. So let's use Federation ID with value
                <emphasis role="italics">tomcat</emphasis>
                for our first user.
              </para>
            </listitem>
          </itemizedlist>
          <para>
            <figure>
<title>TODO InformalFigure image title empty</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="diagrams/federation/salesforce-user-creation.png"/>
                </imageobject>
              </mediaobject>
            </figure>
          </para>
        </section>
        <section id="sid-50004110_PicketlinkasIDP%2CSalesforceasSP-PicketlinkIDPsetup">
          
          <title>Picketlink IDP setup</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis role="strong">Download and import Salesforce certificate</emphasis>
                - SAMLRequest messages sent from Salesforce are signed with Salesforce certificate. In order to validate them, you need to download Salesforce client certificate from
                <ulink url="http://wiki.developerforce.com/page/Client_Certificate"/>
                . Then you need to import the certificate into your keystore:
              </para>
            </listitem>
          </itemizedlist>
          <informalexample>
            <programlisting>
unzip -q /tmp/downloads/certificates/New_proxy.salesforce.com_certificate_chain.zip
keytool -import -keystore jbid_test_keystore.jks -file proxy-salesforce-com.123 -alias salesforce-cert
</programlisting>
          </informalexample>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis role="strong">ValidatingAlias update</emphasis>
                - You need to update ValidatingAlias section, so the SAMLRequest from Salesforce will be validated with Salesforce certificate. You need to add the line into file
                <emphasis role="strong">idp-sig.war/WEB-INF/picketlink.xml</emphasis>
                :
              </para>
            </listitem>
          </itemizedlist>
          <informalexample>
            <programlisting>
&lt;ValidatingAlias Key="saml.salesforce.com" Value="salesforce-cert" /&gt;
</programlisting>
          </informalexample>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis role="strong">Trusted domain</emphasis>
                - update list of trusted domains and add domain "salesforce.com" to the list:
              </para>
            </listitem>
          </itemizedlist>
          <informalexample>
            <programlisting>
&lt;Trust&gt;
  &lt;Domains&gt;localhost,jboss.com,jboss.org,redhat.com,amazonaws.com,salesforce.com&lt;/Domains&gt;
&lt;/Trust&gt;
</programlisting>
          </informalexample>
          <section id="sid-50004110_PicketlinkasIDP%2CSalesforceasSP-">
            
            <title/>
          </section>
          <section id="sid-50004110_PicketlinkasIDP%2CSalesforceasSP-Singlelogout">
            
            <title>Single logout</title>
            <para>Now you have basic setup done but in order to support single logout, you need to do some additional actions. Especially Salesforce is not using same URL for login and single logout, which means that we need to configure SP metadata on Picketlink side to provide mapping between SP and their URL for logout. Needed actions are:</para>
            <itemizedlist>
              <listitem>
                <para>
                  <emphasis role="strong">Download SAML metadata</emphasis>
                  from Salesforce SSO settings. Save downloaded XML file as
                  <emphasis role="strong">idp-sig.war/WEB-INF/sp-metadata.xml</emphasis>
                </para>
              </listitem>
            </itemizedlist>
            <itemizedlist>
              <listitem>
                <para>
                  <emphasis role="strong">Add SingleLogoutService element</emphasis>
                  - unfortunately another element needs to be manually added into metadata as Salesforce doesn't use single logout configuration in their metadata. So let's add following element into metadata file after
                  <emphasis role="italics">md:AssertionConsumerService</emphasis>
                  element:
                </para>
              </listitem>
            </itemizedlist>
            <informalexample>
              <programlisting>
Â Â Â Â Â Â Â Â  &lt;md:SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  Location="https://login.salesforce.com/saml/logout-request.jsp?saml=MgoTx78aEPkEM4eGV5ZzptlliwIVkRkOWYKlqXQq2StV_sLo0EiRqKYtIc" index="0" isDefault="true"/&gt;
</programlisting>
            </informalexample>
            <para>
              Note that value of Location attribute will be different for your domain. You can see which value to use in Salesforce SSO settings page from element
              <emphasis role="italics">Salesforce.com Single Logout URL</emphasis>
              :
            </para>
            <para>
              <figure>
<title>TODO InformalFigure image title empty</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="diagrams/federation/salesforce-sso-settings.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
            </para>
            <itemizedlist>
              <listitem>
                <para>
                  <emphasis role="strong">Add md:EntitiesDescriptor element</emphasis>
                  - Finally you need to add enclosing element
                  <emphasis role="italics">md:EntitiesDescriptor</emphasis>
                  and encapsulate whole current content into it. This is needed as we may want to use more EntityDescriptor elements in this single metadata file (like another element for Google Apps etc):
                </para>
              </listitem>
            </itemizedlist>
            <informalexample>
              <programlisting>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;md:EntitiesDescriptor xmlns="urn:oasis:names:tc:SAML:2.0:metadata"
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"&gt;
Â  &lt;md:EntityDescriptor xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata" entityID="https://saml.salesforce.com" ....
Â  ...
Â  &lt;/md:EntityDescriptor&gt;
&lt;/md:EntitiesDescriptor&gt;
</programlisting>
            </informalexample>
            <itemizedlist>
              <listitem>
                <para>
                  <emphasis role="strong">Configure metadata location</emphasis>
                  - Let's add new MetaDataProvider into file
                  <emphasis role="strong">idp-sig.war/WEB-INF/picketlink.xml</emphasis>
                  after section with KeyProvider:
                </para>
              </listitem>
            </itemizedlist>
            <informalexample>
              <programlisting>
...
         &lt;/KeyProvider&gt;

         &lt;MetaDataProvider ClassName="org.picketlink.identity.federation.core.saml.md.providers.FileBasedEntitiesMetadataProvider"&gt;
           &lt;Option Key="FileName" Value="/WEB-INF/sp-metadata.xml"/&gt;
         &lt;/MetaDataProvider&gt;
      &lt;/PicketLinkIDP&gt;
.....
</programlisting>
            </informalexample>
          </section>
        </section>
        <section id="sid-50004110_PicketlinkasIDP%2CSalesforceasSP-Testthesetup">
          
          <title>Test the setup</title>
          <itemizedlist>
            <listitem>
              <para>Start the server with Picketlink IDP</para>
            </listitem>
            <listitem>
              <para>
                Visit URL of your salesforce domain. It should be likely something like:
                <ulink url="https://yourdomain.my.salesforce.com/"/>
                . Now Salesforce will send SAMLRequest to your IDP and so you should be redirected to login screen on your IDP on
                <ulink url="http://localhost:8080/idp-sig/"/>
              </para>
            </listitem>
            <listitem>
              <para>
                Login into Picketlink IDP as user
                <emphasis role="italics">tomcat</emphasis>
                . After successful login, SAMLRequest signature is validated by the certificate
                <emphasis role="italics">salesforce-cert</emphasis>
                and IDP produces SAMLResponse for IDP and performs redirection.
              </para>
            </listitem>
            <listitem>
              <para>
                Now Salesforce parse SAMLResponse, validates it signature with imported Picketlink certificate and then you should be redirected to salesforce and logged as user
                <emphasis role="italics">tomcat</emphasis>
                in your Salesforce domain.
              </para>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sid-50004110_PicketlinkasIDP%2CSalesforceasSP-Troubleshooting">
          
          <title>Troubleshooting</title>
          <para>Salesforce provides simple tool in SSO menu, where you can see the status of last SAMLResponse sent to Salesforce SP and you can check what's wrong with the response here.</para>
          <para>
            Good tool for checking communication between SP and IDP is also Firefox plugin
            <ulink url="https://addons.mozilla.org/en-US/firefox/addon/saml-tracer/">SAML Tracer</ulink>
          </para>
        </section>
      </section>
      <section id="sid-50004122">
        
        <title>Picketlink as SP, Salesforce as IDP</title>
        <para>In this part, we will use Salesforce as IDP and sample application from Picketlink as SP.</para>
        <sidebar>
          <para>NOTE: Integration is working from Picketlink version 2.1.2.Final and newer</para>
        </sidebar>
        <section id="sid-50004122_PicketlinkasSP%2CSalesforceasIDP-Salesforcesetup">
          
          <title>Salesforce setup</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis role="strong">Disable Single Sign on</emphasis>
                in SSO settings if you enabled it previously. As in this step, we don't want to login into Salesforce through SSO but we want Salesforce to provide SSO for us and act as Identity Provider.
              </para>
            </listitem>
          </itemizedlist>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis role="strong">Identity provider setup</emphasis>
                - In link
                <emphasis role="strong">Setup</emphasis>
                -&gt;
                <emphasis role="strong">Security controls</emphasis>
                -&gt;
                <emphasis role="strong">Identity provider</emphasis>
                you need to setup Salesforce as IDP.
              </para>
            </listitem>
          </itemizedlist>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis role="strong">Generate certificate</emphasis>
                - first generate certificate on first screen. This certificate will be used to sign SAMLResponse messages sent from Salesforce IDP.
              </para>
              <figure>
<title>TODO InformalFigure image title empty</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="diagrams/federation/salesforce-idp-certificate-creation.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
              <para>
                
                After certificate will be generated in Salesforce, you can download it to your computer.
              </para>
            </listitem>
            <listitem>
              <para>
                <emphasis role="strong">Configure generated certificate for Identity Provider</emphasis>
                - In Identity Provider setup, you need to select the certificate, which you just generated
              </para>
            </listitem>
          </itemizedlist>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis role="strong">Add service provider</emphasis>
                - In section
                <emphasis role="strong">Setup</emphasis>
                -&gt;
                <emphasis role="strong">Security Controls</emphasis>
                -&gt;
                <emphasis role="strong">Identity  Provider</emphasis>
                -&gt;
                <emphasis role="strong">Service providers</emphasis>
                you can add your Picketlink application as Service Provider. We will use application
                <emphasis role="strong">sales-post-sig</emphasis>
                from
                <ulink url="https://docs.jboss.org/author/display/PLINK/PicketLink+Quickstarts#PicketLinkQuickstarts-AbouttheQuickstarts">Picketlink quickstarts</ulink>
                .
                
                So in first screen of configuration of your Service provider, you need to  add
                <emphasis role="strong">ACS URL</emphasis>
                and
                <emphasis role="strong">Entity ID</emphasis>
                like
                <emphasis role="italics">
                  <ulink url="http://localhost:8080/sales-post-sig/"/>
                </emphasis>
                <emphasis role="italics">.  Subject type</emphasis>
                needs to be
                <emphasis role="italics">Federation ID</emphasis>
                and you also need to upload  certificate corresponding to signing key of sales-post-sig application. You first need to export this certificate from your keystore file. See
                <ulink url="https://docs.jboss.org/author/display/PLINK/Picketlink+as+IDP%2C+Salesforce+as+SP">previous tutorial</ulink>
                for how to do it.
                
                In next screen, you can select profile for users, who will be able to  login to this Service Provider. By checking first checkbox, you will  automatically select all profiles. After confirm this screen, you will  have your service provider created. Let's see how your final configuration can looks like after confirming:
                
              </para>
              <figure>
<title>TODO InformalFigure image title empty</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="diagrams/federation/salesforce-idp-configurationOfSP.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
            </listitem>
          </itemizedlist>
          <sidebar>
            <para>
              <emphasis role="strong">WARNING:</emphasis>
              As mentioned in previous tutorial, you should create your own keystore file for Picketlink and not use example keystore
              <emphasis role="italics">jbid_test_keystore.jks</emphasis>
              and certificates from it in production environment. In this tutorial, we will use it only for simplicity and demonstration purposes.
            </para>
          </sidebar>
        </section>
        <section id="sid-50004122_PicketlinkasSP%2CSalesforceasIDP-PicketlinkSetup">
          
          <title>Picketlink Setup</title>
          <para>
            As already mentioned, we will use sample application
            <emphasis role="italics">sales-post-sig.war</emphasis>
            from picketlink quickstarts.
          </para>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis role="strong">Import salesforce IDP certificate</emphasis>
                - In
                <emphasis role="strong">sales-post-sig.war/WEB-INF/classes</emphasis>
                you need to import downloaded certificate from salesforce into your keystore. You can use command like:
              </para>
            </listitem>
          </itemizedlist>
          <informalexample>
            <programlisting>
keytool -import -file salesforce_idp_cert.cer -keystore jbid_test_keystore.jks -alias salesforce-idp
</programlisting>
          </informalexample>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis role="strong">Identity URL configuration</emphasis>
                - In
                <emphasis role="strong">sales-post-sig.war/WEB-INF/picketlink.xml</emphasis>
                you need to change identity URL to something like:
              </para>
            </listitem>
          </itemizedlist>
          <informalexample>
            <programlisting>
&lt;IdentityURL&gt;${idp-sig.url::https://yourdomain.my.salesforce.com/idp/endpoint/HttpPost}
</programlisting>
          </informalexample>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis role="strong">ValidatingAlias configuration</emphasis>
                - In same file, you can add new validating alias for the salesforce host of your domain:
              </para>
            </listitem>
          </itemizedlist>
          <informalexample>
            <programlisting>
&lt;ValidatingAlias Key="yourdomain.my.salesforce.com" Value="salesforce-idp" /&gt;
</programlisting>
          </informalexample>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis role="strong">Roles mapping</emphasis>
                - Last very important step is mapping of roles for users, which are logged through Salesforce IDP. Normally when you have Picketlink as both IDP and SP, then SAMLResponse from IDP usually contains
                <emphasis role="italics">AttributeStatement</emphasis>
                as part of SAML assertion and this statement contains list of roles in attribute
                <emphasis role="italics">Role</emphasis>
                . Picketlink SP is then able to parse list of roles from statement and then it leverages
                <emphasis role="italics">SAML2LoginModule</emphasis>
                to assign these roles to JAAS Subject of logged principal.
                
                Thing is that SAML Response from Salesforce IDP does not contain any attribute statement with roles, so you need to handle roles assignment by yourself. Easiest way could be to chain SAML2LoginModule with another login module (like
                <emphasis role="italics">UsersRolesLoginModule</emphasis>
                for instance), which will ensure that assigning of JAAS roles is delegated from SAML2LoginModule to the second Login Module in chain. Needed steps:
              </para>
              <itemizedlist>
                <listitem>
                  <para>
                    In
                    <emphasis role="strong">sales-post-sig.war/WEB-INF/jboss-web.xml</emphasis>
                    you can change security-domain from value
                    <emphasis role="italics">sp</emphasis>
                    to something different like
                    <emphasis role="italics">sp-salesforce</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist>
          <informalexample>
            <programlisting>
&lt;security-domain&gt;sp-salesforce&lt;/security-domain&gt;
</programlisting>
          </informalexample>
          <itemizedlist>
            <listitem>
              <para>
                Create new application policy for this security domain. It differs in each application server, for example in JBoss 7 you need to edit
                <emphasis role="strong">JBOSS_HOME/standalone/configuration/standalone.xml</emphasis>
                and add this policy to particular section:
              </para>
              <informalexample>
                <programlisting>
&lt;security-domain name="sp-salesforce" cache-type="default"&gt;
  &lt;authentication&gt;
Â    &lt;login-module code="org.picketlink.identity.federation.bindings.jboss.auth.SAML2LoginModule" flag="required"&gt;
Â Â Â    &lt;module-option name="password-stacking" value="useFirstPass"/&gt;
Â Â Â  &lt;/login-module&gt;
Â Â Â  &lt;login-module code="org.jboss.security.auth.spi.UsersRolesLoginModule" flag="required"&gt;
Â Â Â    &lt;module-option name="password-stacking" value="useFirstPass"/&gt;
Â Â Â Â Â  &lt;module-option name="usersProperties" value="users.properties"/&gt;
Â Â Â Â Â  &lt;module-option name="rolesProperties" value="roles.properties"/&gt;
Â Â Â  &lt;/login-module&gt;
Â  &lt;/authentication&gt;
&lt;/security-domain&gt;
</programlisting>
              </informalexample>
            </listitem>
          </itemizedlist>
          <itemizedlist>
            <listitem>
              <para>
                In
                <emphasis role="strong">sales-post-sig.war/WEB-INF/classes</emphasis>
                you need to create empty file
                <emphasis role="strong">users.properties</emphasis>
                and non-empty file
                <emphasis role="strong">roles.properties</emphasis>
                where you need to map roles. For example you can add line like:
              </para>
              <informalexample>
                <programlisting>
tomcat=manager,employee,sales
</programlisting>
              </informalexample>
            </listitem>
          </itemizedlist>
          <para>
            where
            <emphasis role="strong">tomcat</emphasis>
            is Federation ID of some user from Salesforce, which you will use for login.
          </para>
        </section>
        <section id="sid-50004122_PicketlinkasSP%2CSalesforceasIDP-Testtheintegration">
          
          <title>Test the integration</title>
          <para>
            Now after server restart, let's try to access:
            <ulink url="http://localhost:8080/sales-post-sig/"/>
            . You should be redirected to salesforce login page with SAMLRequest sent from your Picketlink sales-post-sig application. Now let's login into Salesforce with username and password of some Salesforce user from your domain (like tomcat user). Make sure that this user has Federation ID and this Federation ID is mapped in file roles.properties on Picketlink SP side like described in previous steps. Now you should be redirected to
            <ulink url="http://localhost:8080/sales-post-sig/"/>
            as logged user.
          </para>
        </section>
      </section>
      <section id="sid-50004133">
        
        <title>Picketlink as IDP, Google Apps as SP</title>
        <para>
          Google Apps is another known business solution from Google. Google Apps supports SAML SSO in role of SAML SP, so you need to use your own application as SAML IDP. In this sample, we will again use
          <emphasis role="italics">idp-sig.war</emphasis>
          application from Picketlink quickstarts as IDP similarly like in
          <ulink url="https://docs.jboss.org/author/display/PLINK/Picketlink+as+IDP%2C+Salesforce+as+SP">this tutorial</ulink>
          .
        </para>
        <sidebar>
          <para>NOTE: Integration is working from Picketlink version 2.1.2.Final and newer</para>
        </sidebar>
        <section id="sid-50004133_PicketlinkasIDP%2CGoogleAppsasSP-GoogleAppssetup">
          
          <title>Google Apps setup</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis role="strong">Creating Google Apps domain</emphasis>
                - you need to create Google Apps domain on
                <ulink url="http://www.google.com/apps"/>
                . Follow the instructions on google page on how to do it.
              </para>
            </listitem>
            <listitem>
              <para>
                <emphasis role="strong">Add some users</emphasis>
                - let's add some users, which will be available to login into your domain. So let's add user
                <emphasis role="italics">tomcat</emphasis>
                first. In Google &amp; Apps control panel, you need to click
                <emphasis role="strong">Organization &amp; Users</emphasis>
                -&gt;
                <emphasis role="strong">Create new user</emphasis>
                and add him email
                <emphasis role="strong">tomcat@yourdomain.com</emphasis>
                . This will ensure that nick of new user will be
                <emphasis role="italics">tomcat</emphasis>
                . See screenshot:
              </para>
              <figure>
<title>TODO InformalFigure image title empty</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="diagrams/federation/google-users.png"/>
                  </imageobject>
                </mediaobject>
              </figure>
            </listitem>
            <listitem>
              <para>
                <emphasis role="strong">Configure SAML SSO</emphasis>
                - In menu
                <emphasis role="strong">Advanced tools</emphasis>
                -&gt;
                <emphasis role="strong">Set up single sign-on (SSO)</emphasis>
                you can setup SSO settings. For our testing purposes, you can set it like done on screenshot . Especially it's important to set Sign-in page to
                <emphasis role="italics">
                  <ulink url="http://localhost:8080/idp-sig/"/>
                </emphasis>
                <emphasis role="italics">. Sign-out page can be also set but Google Apps don't support SAML Single Logout profile, so this is only page where will be users redirected after logout. Let's click checkbox _Use a domain specific issuer</emphasis>
                to true.
              </para>
            </listitem>
          </itemizedlist>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis role="strong">Certificate upload</emphasis>
                - you also need to upload certificate exported from your picketlink keystore in similar way, like done for Salesforce in
                <ulink url="https://docs.jboss.org/author/display/PLINK/Picketlink+as+IDP%2C+Salesforce+as+SP">previous tutorials</ulink>
                . So let's upload
                <emphasis role="italics">test-certificate.crt</emphasis>
                into Google Apps.
              </para>
            </listitem>
          </itemizedlist>
          <sidebar>
            <para>WARNING: Once again, you shouldn't use picketlink test keystore file jbid_test_keystore.jks in production environment. We use it here only for simplicity and for demonstration purposes.</para>
          </sidebar>
          <para>
            <figure>
<title>TODO InformalFigure image title empty</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="diagrams/federation/google-sso.png"/>
                </imageobject>
              </mediaobject>
            </figure>
          </para>
        </section>
        <section id="sid-50004133_PicketlinkasIDP%2CGoogleAppsasSP-PicketlinkIDPconfiguration">
          
          <title>Picketlink IDP configuration</title>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis role="strong">Trusted domains configuration</emphasis>
                - update domains in
                <emphasis role="strong">idp-sig.war/WEB-INF/picketlink.xml</emphasis>
              </para>
            </listitem>
          </itemizedlist>
          <informalexample>
            <programlisting>
&lt;Trust&gt;Â 
  &lt;Domains&gt;localhost,jboss.com,jboss.org,redhat.com,amazonaws.com,salesforce.com,google.com&lt;/Domains&gt;
&lt;/Trust&gt;
</programlisting>
          </informalexample>
          <itemizedlist>
            <listitem>
              <para>
                <emphasis role="strong">Metadata configuration</emphasis>
                - We don't want SAMLRequest from Google Apps to be validated, because it's not signed. So let's add another metadata for Google Apps, which will specify that SAMLRequest from Google Apps Service Provider won't be signed. So let's add another
                <emphasis role="italics">EntityMetadataDescriptor</emphasis>
                entry for your domain
                <emphasis role="italics">google.com/a/yourdomain.com</emphasis>
                into
                <emphasis role="italics">sp-metadata.xml</emphasis>
                file created in
                <ulink url="https://docs.jboss.org/author/display/PLINK/Picketlink+as+IDP%2C+Salesforce+as+SP">previous tutorial</ulink>
                (you may need to create new metadata file from scratch if not followed previous tutorial). Important attribute is especially
                <emphasis role="italics">AuthnRequestsSigned</emphasis>
                , which specifies that SAMLRequest from Google Apps are not signed.
              </para>
            </listitem>
          </itemizedlist>
          <informalexample>
            <programlisting>
&lt;md:EntitiesDescriptor xmlns="urn:oasis:names:tc:SAML:2.0:metadata"
                    xmlns:ds="http://www.w3.org/2000/09/xmldsig#"
                    xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"&gt;
  &lt;md:EntityDescriptor xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata" entityID="https://saml.salesforce.com" validUntil="2022-06-18T14:08:08.052Z"&gt;

......
  &lt;/md:EntityDescriptor&gt;
   &lt;md:EntityDescriptor xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata" entityID="google.com/a/yourdomain.com" validUntil="2022-06-13T21:46:02.496Z"&gt;
      &lt;md:SPSSODescriptor AuthnRequestsSigned="false" WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol" /&gt;
   &lt;/md:EntityDescriptor&gt;
&lt;/md:EntitiesDescriptor&gt;
</programlisting>
          </informalexample>
        </section>
        <section id="sid-50004133_PicketlinkasIDP%2CGoogleAppsasSP-Testit">
          
          <title>Test it</title>
          <para>
            Now logout from Google Apps and start server. And now you can do visit
            <ulink url="https://mail.google.com/a/yourdomain.com"/>
            . After that Google Apps will send SAMLRequest and redirects you to
            <ulink url="http://localhost:8080/idp-sig"/>
            . Please note that Google Apps is using SAML HTTP Redirect binding, so you can see SAMLRequest in browser URL. Also note that SAMLRequest is not signed, but this is not a problem as we configured it in metadata that requests from Google Apps are not signed. So after login into IDP as  user tomcat, you should be automatically logged into your Google Apps as  user "tomcat" as well.
          </para>
        </section>
      </section>
    </section>
  
</chapter>
